<?xml version="1.0" encoding="UTF-8"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->
<scenario>

    <if>
      <condition>
        <test parameter="[stateClient]" condition="boolean.equals" value="false"/>
      </condition>
      <then>
          <!-- Sortie du client -->
          <exit name="pas de server"/>
      </then>
    </if>

    <label name="begin"/>
    
        <!-- create a listenpoint with no parameter -->
    <createListenpointDIAMETER name="lp_server" localHost="[remoteHostDIAM]" localPort="[remotePortDIAM]"/>

    <parameter name="[received]" operation="set" value="false"/>
    <receiveMessageDIAMETER name="Receive message" listenpoint="lp_server" timeout="30" failedOnTimeout="false">
        <parameter name="[received]" operation="set" value="true"/>
        <parameter name="[lastCommandCode]" operation="protocol.setFromMessage" value="header.command"/>
        <parameter name="[lastApplicationId]" operation="protocol.setFromMessage" value="header.applicationId"/>
        <parameter name="[lastHopByHop]" operation="protocol.setFromMessage" value="header.hopByHop"/>
        <parameter name="[lastEndToEnd]" operation="protocol.setFromMessage" value="header.endToEnd"/>
        <parameter name="[lastSessionId]" operation="protocol.setFromMessage" value="avp.Session-Id.value"/>
        <parameter name="[lastDestHost]" operation="protocol.setFromMessage" value="avp.Destination-Host.value"/>
        <parameter name="[lastDestRealm]" operation="protocol.setFromMessage" value="avp.Destination-Realm.value"/>
        <parameter name="[lastAuthAppliId]" operation="protocol.setFromMessage" value="avp.Auth-Application-Id.value"/>
    </receiveMessageDIAMETER>

    <if>
      <condition>
        <test parameter="[received]" condition="boolean.equals" value="true" not="true"/>
      </condition>
      <then>
          <!-- Sortie du scenario  -->
          <exit failed="false" description="Success : end of test"/>
      </then>
    </if>

    <if>
      <condition>
        <test parameter="[received]" condition="boolean.equals" value="true" not="true"/>
      </condition>
      <then>
          <!-- Sortie du client -->
          <goto name="rec AAR => send AAA" label="recAAR"/>
      </then>
    </if>

    <if>
      <condition>
        <test parameter="[lastCommandCode]" condition="number.equals" value="265"/>
      </condition>
      <then>
          <!-- Sortie du client -->
          <goto name="rec AAR => send AAA" label="recAAR"/>
      </then>
    </if>

    <if>
      <condition>
        <test parameter="[lastCommandCode]" condition="number.equals" value="275"/>
      </condition>
      <then>
          <!-- Sortie du client -->
          <goto name="rec STR => send STA" label="recSTR"/>
      </then>
    </if>

    <goto name="goto begin" label="begin"/>

    <label name="recAAR"/>

<!--
From RFC 3588 September 2003 :
Re-Auth-Answer ::= < Diameter Header: 258, PXY >
                   < Session-Id >
                   { Result-Code }
                   { Origin-Host }
                   { Origin-Realm }
                   [ User-Name ]
                   [ Origin-State-Id ]
                   [ Error-Message ]
                   [ Error-Reporting-Host ]
                 * [ Failed-AVP ]
                     Failed-AVP ::= < AVP Header: 279 >
                                 1* {AVP}
                 * [ Redirect-Host ]
                   [ Redirect-Host-Usage ]
                   [ Redirect-Max-Cache-Time ]
                 * [ Proxy-Info ]
                     Proxy-Info ::= < AVP Header: 284 >
                                    { Proxy-Host }
                                    { Proxy-State }
                                  * [ AVP ]
                 * [ AVP ]
-->

    <parameter name="[User-Name]" operation="set" value="alice"/>

    <sendMessageDIAMETER name="Send Answer RAA" listenpoint="lp_server">
        <header request="false" command="[lastCommandCode]" applicationId="Diameter Common Messages" 
                hopByHop="[lastHopByHop]" endToEnd="[lastEndToEnd]" 
                proxiable="true" error="false" retransmit="false"/>        
          <!-- The Session-Id AVP is used to identify a specific session. -->
          <avp code="Session-Id" mandatory="true" type="UTF8String" value="[lastSessionId]"/>
          <!-- The Result-Code AVP indicates whether a particular request was completed successfully or whether an error occurred. -->
          <avp code="Result-Code" mandatory="true" type="Unsigned32" value="DIAMETER_SUCCESS"/>
          <avp code="Auth-Application-Id" value="[lastAuthAppliId]"/>
          <!-- The Origin-Host AVP identifies the endpoint that originated the Diameter message. -->
          <avp code="Origin-Host" mandatory="true" type="DiameterIdentity" value="[lastDestHost]"/>
          <!-- The Origin-Realm AVP contains the Realm of the originator of any Diameter message. -->
          <avp code="Origin-Realm" mandatory="true" type="DiameterIdentity" value="[lastDestHost]"/>

          <!-- The User-Name AVP contains the User-Name, in a format consistent with the Network Access Identifier (NAI) specification. -->
          <avp code="User-Name" mandatory="false" type="UTF8String" value="[User-Name]"/>

          <!-- The Origin-State-Id AVP is a monotonically increasing value that is advanced whenever a Diameter entity restarts with loss of previous state. -->
          <avp code="Origin-State-Id" mandatory="false" type="Unsigned32" value="0"/>

          <!-- The Error-Message AVP MAY accompany a Result-Code AVP as a human readable error message. -->
          <avp code="Error-Message" mandatory="false" type="UTF8String" value="ToBeCompleted"/>
          <!-- The Error-Reporting-Host AVP contains the identity of the Diameter host that sent the Result-Code AVP to a value other than 2001 (Success). -->
          <avp code="Error-Reporting-Host" mandatory="false" type="DiameterIdentity" value="aaa[s]:// FQDN [ :port ] [ ;transport=tcp/sctp/udp ] [ ;protocol=diameter/radius/tacacs+ ]"/>

          <!-- The Failed-AVP AVP provides debugging information in cases where a request is rejected or not fully processed due to erroneous information in a specific AVP. -->
<!--
          <avp code="Failed-AVP">
            <avp code="???" mandatory="true/false" private="true/false" type="OctetString / Integer32 / Integer64 / Unsigned32 / Unsigned64 / Float32 / Float64 / Grouped / Address / Time / UTF8String / DiameterIdentity / DiameterURI / Enumerated / IPFilterRule / QoSFilterRule" value="???"/>
          </avp>
          <avp code="Failed-AVP">
            <avp code="???" mandatory="true/false" private="true/false" type="OctetString / Integer32 / Integer64 / Unsigned32 / Unsigned64 / Float32 / Float64 / Grouped / Address / Time / UTF8String / DiameterIdentity / DiameterURI / Enumerated / IPFilterRule / QoSFilterRule" value="???"/>
          </avp>
-->

          <!-- One or more of instances of this AVP MUST be present if the answer message's 'E' bit is set and the Result-Code AVP is set to DIAMETER_REDIRECT_INDICATION. -->
          <avp code="Redirect-Host" mandatory="false" type="DiameterURI" value="ToBeCompleted"/>
          <avp code="Redirect-Host" mandatory="false" type="DiameterURI" value="ToBeCompleted"/>
          <!-- The Redirect-Host-Usage AVP dictates how the routing entry resulting from the Redirect-Host is to be used. -->
          <!-- Possible enumerated values : DONT_CACHE(0) / ALL_SESSION(1) / ALL_REALM(2) / REALM_AND_APPLICATION(3) / ALL_APPLICATION(4) / ALL_HOST(5) / ALL_USER(6). -->
          <avp code="Redirect-Host-Usage" mandatory="false" type="Enumerated" value="Don't Care"/>
          <!-- The Redirect-Max-Cache-Time AVP MUST be present in answer messages whose 'E' bit is set, the Result-Code AVP is set to DIAMETER_REDIRECT_INDICATION and the Redirect-Host-Usage AVP set to a non-zero value. -->
          <avp code="Redirect-Max-Cache-Time" mandatory="false" type="Unsigned32" value="0"/>              

          <!-- The Proxy-Host AVP contains the identity of the host that added the Proxy-Info AVP. -->
          <!-- The Proxy-State AVP contains state local information. -->
          <avp code="Proxy-Info">
             <avp code="Proxy-Host" mandatory="true" private="false" type="DiameterIdentity" value="ToBeCompleted"/>
             <avp code="Proxy-State" mandatory="true"  private="false" type="OctetString" value="ToBeCompleted"/>
          </avp>
          <avp code="Proxy-Info">
             <avp code="Proxy-Host" mandatory="true"  private="false" type="DiameterIdentity" value="ToBeCompleted"/>
             <avp code="Proxy-State" mandatory="true"  private="false" type="OctetString" value="ToBeCompleted"/>
          </avp>
    </sendMessageDIAMETER>

    <goto name="goto begin" label="begin"/>

    <label name="recSTR"/>
    
<!--
From RFC 3588 September 2003 :
Session-Termination-Answer  ::= < Diameter Header: 275, PXY >
                                < Session-Id >
                                { Result-Code }
                                { Origin-Host }
                                { Origin-Realm }
                                [ User-Name ]
                              * [ Class ]
                                [ Error-Message ]
                                [ Error-Reporting-Host ]
                              * [ Failed-AVP ]
                                  Failed-AVP ::= < AVP Header: 279 >
                                              1* {AVP}
                                [ Origin-State-Id ]
                              * [ Redirect-Host ]
                                [ Redirect-Host-Usage ]
                                [ Redirect-Max-Cache-Time ]
                              * [ Proxy-Info ]
                                  Proxy-Info ::= < AVP Header: 284 >
                                                 { Proxy-Host }
                                                 { Proxy-State }
                                               * [ AVP ]
                              * [ AVP ]
-->

    <!-- Envoi d'une reponse STAnswer -->
    <sendMessageDIAMETER name="Send Answer STA" listenpoint="lp_server">
        <header request="false" command="[lastCommandCode]" applicationId="Diameter Common Messages" 
                hopByHop="[lastHopByHop]" endToEnd="[lastEndToEnd]" 
                proxiable="true" error="false" retransmit="false"/>
        <!-- The Session-Id AVP is used to identify a specific session. -->
        <avp code="Session-Id" mandatory="true" type="UTF8String" value="[lastSessionId]"/>
        <!-- The Result-Code AVP indicates whether a particular request was completed successfully or whether an error occurred. -->
        <avp code="Result-Code" mandatory="true" type="Unsigned32" value="DIAMETER_SUCCESS"/>
        <!--avp code="Experimental-Result">
            <avp code="Vendor-Id" value="[vendorID]"/>
            <avp code="Experimental-Result-Code" value="2001" vendorId="[vendorID]"/>
        </avp-->

        <!-- The Origin-Host AVP identifies the endpoint that originated the Diameter message. -->
        <avp code="Origin-Host" mandatory="true" type="DiameterIdentity" value="[test:lastDestHost_[framedIPAddress]]"/>
        <!-- The Origin-Realm AVP contains the Realm of the originator of any Diameter message. -->
        <avp code="Origin-Realm" mandatory="true" type="DiameterIdentity" value="[test:lastDestReal_[framedIPAddress]]"/>

        <!-- The User-Name AVP contains the User-Name, in a format consistent with the Network Access Identifier (NAI) specification. -->
        <avp code="User-Name" mandatory="false" type="UTF8String" value="ToBeCompleted"/>

        <!-- The Class AVP is used to by Diameter servers to return state information to the access device. -->
        <avp code="Class" mandatory="false"  type="OctetString" value="ToBeCompleted"/>
        <avp code="Class" mandatory="false"  type="OctetString" value="ToBeCompleted"/>

        <!-- The Error-Message AVP MAY accompany a Result-Code AVP as a human readable error message. -->
        <avp code="Error-Message" mandatory="false" type="UTF8String" value="ToBeCompleted"/>
        <!-- The Error-Reporting-Host AVP contains the identity of the Diameter host that sent the Result-Code AVP to a value other than 2001 (Success). -->
        <avp code="Error-Reporting-Host" mandatory="false" type="DiameterIdentity" value="aaa[s]:// FQDN [ :port ] [ ;transport=tcp/sctp/udp ] [ ;protocol=diameter/radius/tacacs+ ]"/>

        <!-- The Failed-AVP AVP provides debugging information in cases where a request is rejected or not fully processed due to erroneous information in a specific AVP. -->
<!--
          <avp code="Failed-AVP">
            <avp code="???" mandatory="true/false" private="true/false" type="OctetString / Integer32 / Integer64 / Unsigned32 / Unsigned64 / Float32 / Float64 / Grouped / Address / Time / UTF8String / DiameterIdentity / DiameterURI / Enumerated / IPFilterRule / QoSFilterRule" value="???"/>
          </avp>
          <avp code="Failed-AVP">
            <avp code="???" mandatory="true/false" private="true/false" type="OctetString / Integer32 / Integer64 / Unsigned32 / Unsigned64 / Float32 / Float64 / Grouped / Address / Time / UTF8String / DiameterIdentity / DiameterURI / Enumerated / IPFilterRule / QoSFilterRule" value="???"/>
          </avp>
-->

        <!-- The Origin-State-Id AVP is a monotonically increasing value that is advanced whenever a Diameter entity restarts with loss of previous state. -->
        <avp code="Origin-State-Id" mandatory="false" type="Unsigned32" value="0"/>

          <!-- One or more of instances of this AVP MUST be present if the answer message's 'E' bit is set and the Result-Code AVP is set to DIAMETER_REDIRECT_INDICATION. -->
          <avp code="Redirect-Host" mandatory="false" type="DiameterURI" value="ToBeCompleted"/>
          <avp code="Redirect-Host" mandatory="false" type="DiameterURI" value="ToBeCompleted"/>
          <!-- The Redirect-Host-Usage AVP dictates how the routing entry resulting from the Redirect-Host is to be used. -->
          <!-- Possible enumerated values : DONT_CACHE(0) / ALL_SESSION(1) / ALL_REALM(2) / REALM_AND_APPLICATION(3) / ALL_APPLICATION(4) / ALL_HOST(5) / ALL_USER(6). -->
          <avp code="Redirect-Host-Usage" mandatory="false" type="Enumerated" value="Don't Care"/>
          <!-- The Redirect-Max-Cache-Time AVP MUST be present in answer messages whose 'E' bit is set, the Result-Code AVP is set to DIAMETER_REDIRECT_INDICATION and the Redirect-Host-Usage AVP set to a non-zero value. -->
          <avp code="Redirect-Max-Cache-Time" mandatory="false" type="Unsigned32" value="0"/>              

          <!-- The Proxy-Host AVP contains the identity of the host that added the Proxy-Info AVP. -->
          <!-- The Proxy-State AVP contains state local information. -->
          <avp code="Proxy-Info">
             <avp code="Proxy-Host" mandatory="true" private="false" type="DiameterIdentity" value="ToBeCompleted"/>
             <avp code="Proxy-State" mandatory="true"  private="false" type="OctetString" value="ToBeCompleted"/>
          </avp>
          <avp code="Proxy-Info">
             <avp code="Proxy-Host" mandatory="true"  private="false" type="DiameterIdentity" value="ToBeCompleted"/>
             <avp code="Proxy-State" mandatory="true"  private="false" type="OctetString" value="ToBeCompleted"/>
          </avp>
    </sendMessageDIAMETER>

    <goto name="goto begin" label="begin"/>

</scenario>
