##########################################################################################################
# Smtp Protocol Config file                                                                               #
##########################################################################################################

#######################################################
## Smtp server

# Smtp listening port(s) separated by commas
# original version : server.LISTENING_PORTS=2000,2001,2002
#server.LISTENING_PORTS=2220,2221,2222,2223,2224,2225,2226,2227,2228,2229
server.LISTENING_PORTS=2220
#######################################################

# Time of life the messages and transactions (in s)
# type float
MESSAGE_TIME_LIFE = 30

# Timeout (s) for receive operations
# type float
operations.RECEIVE_TIMEOUT = 30

#######################################################
## Route

# The tool automatically routes a received response to the scenario which has sent the corresponding request.
# The transactionID is used internally to make the corresponding between requests and responses.
# This parameter is used to get the transactionID from the message given a list of paths (separated 
# by ',' character). The paths are defined with the setFromMessage operation and are of course 
# protocol dependant
# type string
route.TRANSACTION_ID = 

# The tool automatically routes a received request to the scenario given in the 'destScenario' parameter 
# of the sending tag (sendRequestXXX) in the same testcase. In this case, the tool is simulating a 
# client and server at the same time.
# The messageID is used internally to make the corresponding between requests which are sent by 
# the tool and the same requests the tool has received 
# This parameter is used to get the messageID from the message given a list of paths (separated 
# by ',' character). The path are defined with the setFromMessage operation and are protocol of 
# course dependant
# type string
route.MESSAGE_ID = 

# The tool routes a received request to the scenario given by its name. In this case, the tool is 
# simulating a pure server.
# This parameter is used to get the scenario name as mentioned in the test file from the message 
# given a list of paths (separated by ',' character). The path are defined with the setFromMessage 
# operation and are of course protocol dependant
# type string
# version original :
 route.SCENARIO_NAME = message:protocol
# version modified :
# route.SCENARIO_NAME = message:remotePort

route.RETRANSMISSION_ID =