# Default listen host (IP addresses or DNS name); empty value means to listen
# [string] 
listenpoint.LOCAL_HOST = 

# Default listen port; empty or zero value means no listen port
# [integer] 
listenpoint.LOCAL_PORT = 7070

# Flag to listen to UDP transport
# [boolean] 
listenpoint.LISTEN_UDP = true

# Flag to listen to TCP transport
# [boolean] 
listenpoint.LISTEN_TCP = false

# Flag to listen to SCTP transport
# [boolean] 
listenpoint.LISTEN_SCTP = false

# Flag to listen to TLS transport
# [boolean] 
listenpoint.LISTEN_TLS = false

# Retransmission list of timers in seconds
# type list<float>
# [string] 
retransmit.TIMERS = 0.5, 1, 2, 4, 4, 4, 4, 4, 4, 4

# The tool automatically routes a received request to the scenario given in the "destScenario" parameter 
# of the send operation in the same testcase. In this case, the tool is simulating a client and server 
# at the same time.
# The messageID is used internally to make the corresponding between requests which are sent by 
# the tool and the same requests the tool has received 
# This parameter is used to get the messageID from the message given a list of paths (separated 
# by ',' character). The path are defined with the setFromMessage operation and are protocol of 
# course dependant
# type list<string> (list of path keywords)
# [string] 
route.MESSAGE_ID = header.CSeq,header.Call-ID

# The tool routes a received request to the scenario given by its name. In this case, the tool is 
# simulating a pure server.
# This parameter is used to get the scenario name as mentioned in the test file from the message 
# given a list of paths (separated by ',' character). The path are defined with the setFromMessage 
# operation and are of course protocol dependant
# type list<string> (list of path keywords)
# [string] 
route.SCENARIO_NAME = message.request,message.type

# By default, the tool routes a received responses to the scenario which has sent the corresponding 
# request; if this parameter equals to false, then this mechanism is deasctivated and the responses 
# are routed using the route.SCENARIO_NAME path : ie the tools calculates the scenario name and 
# dispatch the response to the scenario with the same name
# [boolean] 
route.DEFAULT_RESPONSE = false

