# Default DIAMETER server address to send the request to
# [string] 
DEFAULT_SERVER_URL = diameter://HSS.sip.france.fr:3871

# transport for DIAMETER protocol (client mode)
# BE CAREFUL : SCTP is supported only on LINUX platform
# [enumeration] TCP|SCTP 
DEFAULT_TRANSPORT = 1

# Time (in seconds) of life the messages and transactions
# [float] 
MESSAGE_TIME_LIFE = 30

# Timeout duration (in seconds) for the receive operations
# [float] 
operations.RECEIVE_TIMEOUT = 30

# The tool automatically routes a received response to the scenario which has sent the corresponding request.
# The transactionID is used internally to make the corresponding between requests and responses.
# This parameter is used to get the transactionID from the message given a list of paths (separated 
# by ',' character). The paths are defined with the setFromMessage operation and are of course 
# protocol dependant
# type list<string> (list of path keywords)
# [string] 
route.TRANSACTION_ID = header.hopByHop

# The tool automatically routes a received request to the scenario given in the "destScenario" parameter 
# of the send operation in the same testcase. In this case, the tool is simulating a client and server 
# at the same time.
# The messageID is used internally to make the corresponding between requests which are sent by 
# the tool and the same requests the tool has received 
# This parameter is used to get the messageID from the message given a list of paths (separated 
# by ',' character). The path are defined with the setFromMessage operation and are protocol of 
# course dependant
# type list<string> (list of path keywords)
# [string] 
route.MESSAGE_ID = header.endToEnd

# The tool routes a received request to the scenario given by its name. In this case, the tool is 
# simulating a pure server.
# This parameter is used to get the scenario name as mentioned in the test file from the message 
# given a list of paths (separated by ',' character). The path are defined with the setFromMessage 
# operation and are of course protocol dependant
# type list<string> (list of path keywords)
# [string] 
route.SCENARIO_NAME = message.protocol

# This ID is used to identify retransmissions. A message having the same retranmissionId as a previous one
# will be handled has a retransmission. If it is a request it will eventually lead to the retransmission of
# subsequent responses and the filtering of the message. If it is a response it might lead to the filtering
# of the message.
# type list<string> (list of path keywords)
# [string] 
route.RETRANSMISSION_ID = message.transactionid,message.messageid

# By default, the tool routes a received responses to the scenario which has sent the corresponding 
# request; if this parameter equals to false, then this mechanism is deasctivated and the responses 
# are routed using the route.SCENARIO_NAME path : ie the tools calculates the scenario name and 
# dispatch the response to the scenario with the same name
# [boolean] 
route.DEFAULT_RESPONSE = true

# This parameter is to enable the automatic sending of the CER/CEA message 
# just after the TCP channel opening
# if false, then it means that the CER/CEA should be done in the scenario
# Notes : if you change it, you should quit the application to take the new value into account
# [boolean] 
capability.AUTO_CER_CEA_ENABLE = true



# This parameter is to enable the automatic sending of the DPR/DPA message 
# just after the TCP channel closing
# Notes : if you change it, you should quit the application to take the new value into account
# [boolean] 
capability.AUTO_DPR_DPA_ENABLE = true

# A Capability instance is used by the Node class to announce this node's capabilities in terms of supported/allowed authentication/authorization/accounting applications, vendor-specific applications and vendor-IDs.
# The announced vendor-IDs can be used for implementing tweaks in areas not fully specified in the application specification.
# [string] 
capability.SUPPORTED_VENDORID.0 = 10415
capability.SUPPORTED_VENDORID.1 = 0
capability.SUPPORTED_VENDORID.2 = 13019
capability.SUPPORTED_VENDORID.3 = 6431

# Each aplication can be used for authentication/authorization, accounting, or both.
# Each diameter message identifies which application it belongs to.
# Messages belonging to applications that have not been negotiated are rejected.
# [string] 
capability.AUTH_APPLICATION.0 = 16777216
capability.AUTH_APPLICATION.1 = 4
capability.AUTH_APPLICATION.2 = 16777217
capability.AUTH_APPLICATION.3 = 16777231
capability.AUTH_APPLICATION.4 = 0
capability.AUTH_APPLICATION.5 = 16777222

# Each aplication can be used for authentication/authorization, accounting, or both.
# Each diameter message identifies which application it belongs to.
# Messages belonging to applications that have not been negotiated are rejected.
# [string] 
capability.ACCT_APPLICATION.0 = 16777216
capability.ACCT_APPLICATION.1 = 3
capability.ACCT_APPLICATION.2 = 16777217
capability.ACCT_APPLICATION.3 = 16777231
capability.ACCT_APPLICATION.4 = 0
capability.ACCT_APPLICATION.5 = 16777222

# Vendor-specific authentication/authorization extension capability sets :
# type (vendor_id,application_id)
# [string] 
capability.VENDOR_AUTH_APPLI.0 = 10415,16777216
capability.VENDOR_AUTH_APPLI.1 = 10415,16777217
capability.VENDOR_AUTH_APPLI.2 = 10415,0
capability.VENDOR_AUTH_APPLI.3 = 10415,16777231
capability.VENDOR_AUTH_APPLI.4 = 10415,4
capability.VENDOR_AUTH_APPLI.5 = 0,16777216
capability.VENDOR_AUTH_APPLI.6 = 0,4
capability.VENDOR_AUTH_APPLI.7 = 0,16777217
capability.VENDOR_AUTH_APPLI.8 = 13019,0
capability.VENDOR_AUTH_APPLI.9 = 6431,4

# Vendor-specific accounting extension capability sets :
# type (vendor_id,application_id)
# [string] 
capability.VENDOR_ACCT_APPLI.0 = 10415,16777216
capability.VENDOR_ACCT_APPLI.1 = 0,16777216
capability.VENDOR_ACCT_APPLI.2 = 0,3
capability.VENDOR_ACCT_APPLI.3 = 10415,3
capability.VENDOR_ACCT_APPLI.4 = 0,16777217
capability.VENDOR_ACCT_APPLI.5 = 13019,0
capability.VENDOR_ACCT_APPLI.6 = 10415,0
capability.VENDOR_ACCT_APPLI.7 = 13019,16777231
capability.VENDOR_ACCT_APPLI.8 = 10415,16777231
capability.VENDOR_ACCT_APPLI.9 = 13019,16777222

# DIAMETER Node Settings
# [string] 
node.FIRMWARE_REVISION = 1
node.HOST_ID = ocs.imsloader.com

# the idle timeout (in milliseconds)
# [string] 
node.IDLE_TIMEOUT = 604800000
node.LISTENING_PORT = 3868
node.PRODUCT_NAME = XMLLoader
node.REALM = ocs.imsloader.com
node.VENDOR_ID = 10415

# desired DWR interval (in milliseconds), default is 30 seconds
# [string] 
node.WATCHDOG_INTERVAL = 30000
node.USE_TCP = true
node.USE_SCTP = false

# trace level for the DIAMETER stack : possible values are
# ( SEVERE, WARNING, INFO, CONFIG, FINE, FINER, FINEST, ALL)
# [enumeration] SEVERE|WARNING|INFO|CONFIG|FINE|FINER|FINEST|ALL 
TRACE_LEVEL = ALL

# test use only
# [string] 
NB_ITERATION = 10000


# This parameter is to enable the capability control before sending or 
# receiving a DIAMETER message
# if false, then there is no control
# Notes : if you change it, you should quit the application to take the new value into account
# [boolean] 
capability.CONTROL_VALIDITY = false

