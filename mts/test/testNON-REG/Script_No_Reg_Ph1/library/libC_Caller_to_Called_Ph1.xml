<!--
Function description (Caller_to_Called_Ph1): Call Establishment from Caller to Called
Please also refer to Caller_to_Called_Ph2 and Caller_to_Called_Ph3

Input parameters:

- called_Subscriber		: E164 number dialed  to access the called subscriber
- domainName_Service		: target domain name
- caller_Subscriber		: E164 nb that identifies the caller
- caller_ipAddressSip		: IP @ where the caller is located
- caller_portSip		: port where the caller is located
- caller_ipAddressSdp		: IP @ that will be used on caller side to exchange payload RTP traffic
- caller_portSdp		: Sdp port that will be used to exchange payload RTP traffic
- caller_ipAddressSrc		: IP @ where subscriber who searches to activate/deactivate the service is located
- sbcHost_Service		: IP @ of SBC input point to access target domain name 
- sbcPort_Service		: port number of SBC input point to access target domain name

- endRtpDialog_Timer		: length before session release after have received the last RTP packet
- expected_Scenario		: Expected scenario when Caller_to_Called_Ph1 is launched e.g.
				FULL_SUCCESS_ESTABLISHMENT	=> Call establishment successfull
				CALL_REJECTED			=> Call Rejected
- RTP_Flow			: when set to "BOTH_WAYS", RTP dialog is executed in both ways

- UserName			: subscriber private name
- Password			: subscriber IMS password

Output parameters :


-->

<!--
Initialisation of procedure local parameters
-->

<parameter name="[localTag]" operation="identifier" value="newString" value2="10"/>
<parameter name="[newCallId]" operation="identifier" value="nextInteger"  value2="1000000"/>
<parameter name="[newCseqNumber]" operation="identifier" value="nextInteger"  value2="1000000"/>
<parameter name="[MaxForwards]" operation="set" value="70"/>
<parameter name="[newBranchId]" operation="identifier" value="newString" value2="10"/>

<sendRequestSIP name="Send INVITE" providerName="[provider_Name]">
	
<![CDATA[INVITE sip:[called_Subscriber]@[domainName_Service] SIP/2.0
To: "[called_Subscriber]" <sip:[called_Subscriber]@[domainName_Service]>
From: "[int_caller_Subscriber]" <sip:[int_caller_Subscriber]@[domainName_Service]>;tag=[localTag]
Via: SIP/2.0/UDP [caller_ipAddressSip]:[caller_portSip];branch=[newBranchId]
Call-ID: [newCallId]
CSeq: [newCseqNumber] INVITE
Route: <sip:[called_Subscriber]@[sbcHost_Service]:[sbcPort_Service];lr>  
Max-Forwards: [MaxForwards]
Contact: <sip:[caller_Subscriber]@[caller_ipAddressSip]:[caller_portSip]>
User-Agent: XMLLoader
Content-Type: application/sdp
Content-Length: x

v=0
o=[caller_Subscriber] 999 999 IN IP4 [caller_ipAddressSrc]
s=-
c=IN IP4 [caller_ipAddressSdp]
t=0 0
m=audio [caller_portSdp] RTP/AVP 0 18 8
a=rtpmap:0 PCMU/8000/1
a=rtpmap:18 G729/8000/1
a=rtpmap:8 PCMA/8000/1
a=sendrecv]]></sendRequestSIP>

  
<!--
|
Loop to process the 407 (MD5 authentication
|
-->

<parameter name="[running_loop]" operation="set" value="true"/>

<while>
	<condition>
  	<test parameter="[running_loop]" condition="equals" value="true" /> 
  	</condition>
<do>

  
<receiveResponseSIP name="receive INVITE response" method="INVITE">
    <parameter name="[StatusCode]" operation="setFromMessage" value="firstline:StatusCode"/>        

    <parameter name="[WWWAuthRealm]" operation="setFromMessage" value="header:Proxy-Authenticate:Parameter:realm"/>                                                                   
    <parameter name="[WWWAuthNonce]" operation="setFromMessage" value="header:Proxy-Authenticate:Parameter:nonce"/>                                   
    <parameter name="[WWWAuthQop]" operation="setFromMessage" value="header:Proxy-Authenticate:Parameter:qop"/>

<parameter name="[lastRecord-Route]" operation="setFromMessage" value="header:Record-Route"/>

    <parameter name="[lastTo]" operation="setFromMessage" value="header:To"/>                       
    <parameter name="[lastFrom]" operation="setFromMessage" value="header:From"/>                   
    <parameter name="[lastCallId]" operation="setFromMessage" value="header:Call-Id"/> 
    <!--parameter name="[lastContact]" operation="setFromMessage" value="header:Contact"/--> 
    <parameter name="[lastContactURI]" operation="setFromMessage" value="header:Contact:Address:URI"/>                      
    <parameter name="[SDPConnectionAddress0]" operation="setFromMessage" value="content(0):Sdp:Connection:Address"/>                
    <parameter name="[SDPMediaPort0]" operation="setFromMessage" value="content(0):Sdp:Media:Port"/>                
</receiveResponseSIP>


<if>
    <condition>
      <test parameter="[StatusCode]" condition="equals" value="407" />
    </condition>
<!--
Process when 407 is received
-->
    <then>
    
    <parameter name="[URI]" operation="set"    value="sip:" />
		<parameter name="[URI]" operation="concat" value="[URI]"      value2="[domainName]" />
		<parameter name="[URI]" operation="concat" value="[URI]"      value2=":" />
		<parameter name="[URI]" operation="concat" value="[URI]"      value2="[sbcPort]" />
    
      <parameter name="[WWWAuthRealm407]" operation="set" value="[WWWAuthRealm]" />
      <parameter name="[WWWAuthNonce407]" operation="set" value="[WWWAuthNonce]" />
      <parameter name="[WWWAuthQop407]"   operation="set" value="[WWWAuthQop]" />

<!--      
      <log level="3">Balise UserName = [UserName]</log>
      <log level="3">Balise WWWAuthRealm407 = [WWWAuthRealm407]</log>
      <log level="3">Balise Password = [Password]</log>
      <log level="3">Balise WWWAuthNonce407 = [WWWAuthNonce407]</log>
      <log level="3">Balise WWWAuthQop407 = [WWWAuthQop407]</log>
-->     
      

      <parameter name="[HA1]" operation="set"    value="[UserName]" />
      <parameter name="[HA1]" operation="concat" value="[HA1]"      value2=":" />
      <parameter name="[HA1]" operation="concat" value="[HA1]"      value2="[WWWAuthRealm407]" />
      <parameter name="[HA1]" operation="concat" value="[HA1]"      value2=":" />
      <parameter name="[HA1]" operation="concat" value="[HA1]"      value2="[Password]" />
      <parameter name="[HA1]" operation="digest" value="[HA1]"      value2="MD5" />

      <parameter name="[Method]" operation="set" value="INVITE"/>                             
        
      <parameter name="[HA2]" operation="set"    value="[Method]" />
      <parameter name="[HA2]" operation="concat" value="[HA2]"      value2=":" />
      <parameter name="[HA2]" operation="concat" value="[HA2]"      value2="[URI]" />
      <parameter name="[HA2]" operation="digest" value="[HA2]"      value2="MD5" />
                
      <parameter name="[NonceCount]" operation="set" value="00000001" />
      <parameter name="[CNonce]"     operation="set" value="11fc4a68" />

      <parameter name="[AuthResponse]" operation="set"    value="[HA1]" />
      <parameter name="[AuthResponse]" operation="concat" value="[AuthResponse]" value2=":" />
      <parameter name="[AuthResponse]" operation="concat" value="[AuthResponse]" value2="[WWWAuthNonce407]" />
      <parameter name="[AuthResponse]" operation="concat" value="[AuthResponse]" value2=":" />
      <parameter name="[AuthResponse]" operation="concat" value="[AuthResponse]" value2="[NonceCount]" />
      <parameter name="[AuthResponse]" operation="concat" value="[AuthResponse]" value2=":" />
      <parameter name="[AuthResponse]" operation="concat" value="[AuthResponse]" value2="[CNonce]" />
      <parameter name="[AuthResponse]" operation="concat" value="[AuthResponse]" value2=":" />
      <parameter name="[AuthResponse]" operation="concat" value="[AuthResponse]" value2="[WWWAuthQop407]" />
      <parameter name="[AuthResponse]" operation="concat" value="[AuthResponse]" value2=":" />
      <parameter name="[AuthResponse]" operation="concat" value="[AuthResponse]" value2="[HA2]" />
      <parameter name="[AuthResponse]" operation="digest" value="[AuthResponse]" value2="MD5" />

<!--
Acknowledgement of first INVITE when 407 has been received
-->   

<sendRequestSIP name="Send ACK" providerName="[provider_Name]">    
<![CDATA[ACK sip:[called_Subscriber]@[domainName_Service] SIP/2.0
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [newCseqNumber] ACK
Route: <sip:[caller_Subscriber]@[sbcHost_Service]:[sbcPort_Service];lr> 
Via: SIP/2.0/UDP [caller_ipAddressSip]:[caller_portSip];branch=[newBranchId]
Contact: <sip:[caller_Subscriber]@[caller_ipAddressSip]:[caller_portSip]>
Max-Forwards: 70
User-Agent: XMLLoader
Content-Length: 0
]]></sendRequestSIP>
 

<parameter name="[newBranchId]" operation="identifier" value="newString" value2="10"/>
<parameter name="[newCseqNumber]" operation="add" value="[newCseqNumber]" value2="1"/>
      

<!--
Sending of INVITE with MD5 authentication when 407 has been received
-->       
                                
<sendRequestSIP name="Send INVITE" providerName="[provider_Name]">
	
<![CDATA[INVITE sip:[called_Subscriber]@[domainName_Service] SIP/2.0
To: "[called_Subscriber]" <sip:[called_Subscriber]@[domainName_Service]>
From: "[int_caller_Subscriber]" <sip:[int_caller_Subscriber]@[domainName_Service]>;tag=[localTag]
Via: SIP/2.0/UDP [caller_ipAddressSip]:[caller_portSip];branch=[newBranchId]
Call-ID: [newCallId]
CSeq: [newCseqNumber] INVITE
Route: <sip:[called_Subscriber]@[sbcHost_Service]:[sbcPort_Service];lr>  
Max-Forwards: [MaxForwards]
Contact: <sip:[caller_Subscriber]@[caller_ipAddressSip]:[caller_portSip]>
User-Agent: XMLLoader
Content-Type: application/sdp
Proxy-Authorization: Digest username="[UserName]", realm="[WWWAuthRealm407]", nonce="[WWWAuthNonce407]", algorithm=MD5, opaque="", uri="[URI]", response="[AuthResponse]", cnonce="[CNonce]", qop=[WWWAuthQop407], nc=[NonceCount]
Content-Length: x

v=0
o=[caller_Subscriber] 999 999 IN IP4 [caller_ipAddressSrc]
s=-
c=IN IP4 [caller_ipAddressSdp]
t=0 0
m=audio [caller_portSdp] RTP/AVP 0 18 8
a=rtpmap:0 PCMU/8000/1
a=rtpmap:18 G729/8000/1
a=rtpmap:8 PCMA/8000/1
a=sendrecv]]></sendRequestSIP>

<parameter name="[running_loop]" operation="set" value="true"/>

</then>
<else>
<parameter name="[running_loop]" operation="set" value="true"/>

<!-- Conditions de sortie de la boucle -->

      <if>
        <condition>        
          <test parameter="[StatusCode]" condition="equals" value="200" />
        </condition>
        <then>
         <parameter name="[running_loop]" operation="set" value="false"/>
        </then>
        <else></else></if> 
        

      <if>
        <condition>               
        <test parameter="[StatusCode]" condition="equals" value="180" /> 
        <test parameter="[expected_Scenario]" condition="equals" value="HANG_UP_112_CALL" />
        </condition>
	<then>
         <parameter name="[running_loop]" operation="set" value="false"/>
        </then>
        <else></else></if> 
        
        
      <if>
        <condition>               
        <test parameter="[StatusCode]" condition="equals" value="483" /> 
        <test parameter="[expected_Scenario]" condition="equals" value="REJECTED_TOO_MANY_FW" />
        </condition>
	<then>
         <parameter name="[running_loop]" operation="set" value="false"/>
        </then>
        <else></else></if>
        
        
      <if>
        <condition>               
        <test parameter="[StatusCode]" condition="equals" value="183" /> 
        <test parameter="[expected_Scenario]" condition="equals" value="RTP_WITHOUT_ESTABLISHMENT" />
        </condition>
	<then>
         <parameter name="[running_loop]" operation="set" value="false"/>
        </then>
        <else></else></if> 
        
        
</else></if></do></while>


<!--
|
|
|
|
Expected procedure is Full Success call establishment
|
|
|
|
-->

<if>
	<condition>
      		<test parameter="[expected_Scenario]" condition="equals" value="FULL_SUCCESS_ESTABLISHMENT" />
      		<test parameter="[StatusCode]" condition="equals" value="200" />
	</condition>
<then> 
		

<parameter name="[newBranchId]" operation="identifier" value="newString" value2="10"/> 

<!--
Route: <sip:[caller_Subscriber]@[sbcHost_Service]:[sbcPort_Service];lr> 
-->


<if>
	<condition>
      		<test parameter="[ShunTheSBC]" condition="equals" value="True" />
	</condition>
<then>

<sendRequestSIP name="Send ACK" providerName="[provider_Name]">    
<![CDATA[
ACK [lastContactURI] SIP/2.0
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [newCseqNumber] ACK
Route: [lastRecord-Route] 
Via: SIP/2.0/UDP [caller_ipAddressSip]:[caller_portSip];branch=[newBranchId]
Contact: <sip:[caller_Subscriber]@[caller_ipAddressSip]:[caller_portSip]>
Max-Forwards: 70
User-Agent: XMLLoader
Content-Length: 0
]]></sendRequestSIP>

</then><else>

<sendRequestSIP name="Send ACK" providerName="[provider_Name]">    
<![CDATA[
ACK [lastContactURI] SIP/2.0
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [newCseqNumber] ACK
Route: <sip:[caller_Subscriber]@[sbcHost_Service]:[sbcPort_Service];lr>
Via: SIP/2.0/UDP [caller_ipAddressSip]:[caller_portSip];branch=[newBranchId]
Contact: <sip:[caller_Subscriber]@[caller_ipAddressSip]:[caller_portSip]>
Max-Forwards: 70
User-Agent: XMLLoader
Content-Length: 0
]]></sendRequestSIP>


</else></if>




<log level="3"> Received SDPConnection info Address = [SDPConnectionAddress0]</log>

<if>
	<condition>
      		<test parameter="[Control_Connection_Info]" condition="equals" value="true" />
	</condition>
<then>
	<if>
	<condition>
      		<test parameter="[SDPConnectionAddress0]" condition="equals" value="[Foreseen_Connection_Info_Value]" />
	</condition>
	<then>
		<!-- Received and foreseen values match => continue -->
		<log level="3"> Connection Info received and foreseen values match => continue</log>
		<parameter name="[Control_Connection_Info]" operation="set" value="false"/>
	</then>
	<else>
		<!-- Received and foreseen values do not match => exit with error -->
		<log level="3"> Connection Info received and foreseen values do not match => exit with error</log>
		<exit name="Failed exit due to unmatching values for received and foreseen connection info" failed="true"/>
		
	</else></if>
</then><else></else></if>


</then><else></else></if>




<!--
|
|
Call the 112 and Hang up at ringing time
|
|
-->

<if>
	<condition>
      		<test parameter="[expected_Scenario]" condition="equals" value="HANG_UP_112_CALL" />
	</condition>
<then>

<!--
<pause name="pause"     seconds="5"  state="true"/>
-->


<sendRequestSIP name="CANCEL" providerName="[provider_Name]">

<![CDATA[CANCEL [lastContactURI] SIP/2.0
To: [lastTo]
From: [lastFrom]
Via: SIP/2.0/UDP [caller_ipAddressSip]:[caller_portSip];branch=[newBranchId]
Call-ID: [lastCallId]
CSeq: [newCseqNumber] CANCEL
Route: <sip:[called_Subscriber]@[sbcHost_Service]:[sbcPort_Service];lr>  
Max-Forwards: [MaxForwards]
Contact: <sip:[caller_Subscriber]@[caller_ipAddressSip]:[caller_portSip]>
User-Agent: XMLLoader
Content-Length: 0
]]></sendRequestSIP>

<!-- Acquitement du CANCEL par 200 ok-->
<!--
<receiveResponseSIP name="Wait 200 OK" providerName="[provider_Name]" method="CANCEL" result="200">
</receiveResponseSIP>
-->

<!-- Notification of termination of INVITE via a 487-->
<receiveResponseSIP name="Wait 487 OK" providerName="[provider_Name]" method="INVITE" result="487">
</receiveResponseSIP>

<!-- INVITE + 487 are aknoledged via ACK-->
<sendRequestSIP name="Send ACK" providerName="[provider_Name]">
    	
<![CDATA[ACK [lastContactURI] SIP/2.0
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [newCseqNumber] ACK
Route: <sip:[called_Subscriber]@[sbcHost_Service]:[sbcPort_Service];lr> 
Via: SIP/2.0/UDP [caller_ipAddressSip]:[caller_portSip];branch=[newBranchId]
Contact: <sip:[caller_Subscriber]@[caller_ipAddressSip]:[caller_portSip]>
Max-Forwards: 70
User-Agent: XMLLoader
Content-Length: 0
]]></sendRequestSIP>

</then><else></else></if>


<!--
|
|
Expected procedure is Hang up after 3 rings
|
|
-->

<if>
	<condition>
      		<test parameter="[expected_Scenario]" condition="equals" value="CALL_FORWARDED_AFTER_3_RINGS" />
	</condition>
<then> 

<!-- 
<receiveResponseSIP name="Wait 180 Ringing" method="INVITE" result="180">
</receiveResponseSIP>


<receiveResponseSIP name="Wait 181 Call is Being forwarded" method="INVITE" result="181">
</receiveResponseSIP>
	
<receiveResponseSIP name="Wait 200 OK" providerName="[provider_Name]" method="INVITE" result="200">
	<parameter name="[lastTo]" operation="setFromMessage" value="header:To"/>  			
	<parameter name="[lastFrom]" operation="setFromMessage" value="header:From"/>  			
	<parameter name="[lastCallId]" operation="setFromMessage" value="header:Call-Id"/> 
	<parameter name="[lastContact]" operation="setFromMessage" value="header:Contact"/> 
	<parameter name="[lastContactURI]" operation="setFromMessage" value="header:Contact:Address:URI"/> 			
    	<parameter name="[SDPConnectionAddress0]" operation="setFromMessage" value="content(0):Sdp:Connection:Address"/>		
    	<parameter name="[SDPMediaPort0]" operation="setFromMessage" value="content(0):Sdp:Media:Port"/>    		
</receiveResponseSIP>

-->
    	
<parameter name="[newBranchId]" operation="identifier" value="newString" value2="10"/>	

	
<sendRequestSIP name="Send ACK" providerName="[provider_Name]">
    	
<![CDATA[ACK [lastContactURI] SIP/2.0
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [newCseqNumber] ACK
Route: <sip:[caller_Subscriber]@[sbcHost_Service]:[sbcPort_Service];lr> 
Via: SIP/2.0/UDP [caller_ipAddressSip]:[caller_portSip];branch=[newBranchId]
Contact: <sip:[caller_Subscriber]@[caller_ipAddressSip]:[caller_portSip]>
Max-Forwards: 70
User-Agent: XMLLoader
Content-Length: 0
]]></sendRequestSIP>

<!--
<semaphore name="WaitACKservice" action="wait"/>
-->

</then><else></else></if>


<!--
|
|
Expected procedure is "Rejected for too many forward 483
|
|
-->

<if>
	<condition>
      		<test parameter="[expected_Scenario]" condition="equals" value="REJECTED_TOO_MANY_FW" />
	</condition>
<then>


<sendRequestSIP name="Send ACK" providerName="[provider_Name]">
    	
<![CDATA[ACK [lastContactURI] SIP/2.0
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [newCseqNumber] ACK
Route: <sip:[caller_Subscriber]@[sbcHost_Service]:[sbcPort_Service];lr> 
Via: SIP/2.0/UDP [caller_ipAddressSip]:[caller_portSip];branch=[newBranchId]
Contact: <sip:[caller_Subscriber]@[caller_ipAddressSip]:[caller_portSip]>
Max-Forwards: 70
User-Agent: XMLLoader
Content-Length: 0
]]></sendRequestSIP>



</then><else></else></if>



<!--
|
|
Expected procedure is "CALL_REJECTED_BY_CLIR"
|
|
-->



<if>
	<condition>
      		<test parameter="[expected_Scenario]" condition="equals" value="CALL_REJECTED_BY_CLIR" />
      		<test parameter="[StatusCode]" condition="equals" value="200" />
	</condition>
<then> 
		

<parameter name="[newBranchId]" operation="identifier" value="newString" value2="10"/>   


<sendRequestSIP name="Send ACK" providerName="[provider_Name]">    
<![CDATA[
ACK [lastContactURI] SIP/2.0
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [newCseqNumber] ACK
Route: <sip:[caller_Subscriber]@[sbcHost_Service]:[sbcPort_Service];lr> 
Via: SIP/2.0/UDP [caller_ipAddressSip]:[caller_portSip];branch=[newBranchId]
Contact: <sip:[caller_Subscriber]@[caller_ipAddressSip]:[caller_portSip]>
Max-Forwards: 70
User-Agent: XMLLoader
Content-Length: 0
]]></sendRequestSIP>
	

</then><else></else></if>

<!--
|
|
Expected procedure is "RTP_WITHOUT_ESTABLISHMENT"
|
|
-->
<if>
	<condition>
      		<test parameter="[expected_Scenario]" condition="equals" value="RTP_WITHOUT_ESTABLISHMENT" />
	</condition>
<then> 

<log level="3"> 183 has been received in RTP_WITHOUT_ESTABLISHMENT procedure</log>
</then><else></else></if>