<?xml version="1.0" encoding="UTF-8"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->

<scenario>

	<stats>
		<counter name="ActiveSession" summary="Act Sess" complete="Count of active sessions"/>
		<counter name="INVITEout" summary="INV_out" complete="Send an outgoing INVITE"/>
		<counter name="INVITE2xxin" summary="INV2xx_in" complete="Receive an incoming INVITE/2xx OK"/>
		<counter name="ACKout" summary="ACK_out" complete="Send an outgoing ACK"/>
		<counter name="BYEout" summary="BYE_out" complete="Send an outgoing BYE"/>
		<counter name="BYExxxin" summary="BYExxx_in" complete="Receive an incoming BYE/XXX OK"/>
	</stats>

	<stats>
		<counter name="INVITElost" summary="INV_lost" complete="INVITE send but not received"/>
		<counter name="ACKlost" summary="ACK_lost" complete="ACK send but not received"/>
		<counter name="BYElost" summary="BYE_lost" complete="BYE send but not received"/>
	</stats>

  	<createListenpointSIP name="listenpoint" localHost="[localHostSIP]" localPort="[localPortSIP]" transport="UDP"/>

	<parameter name="[indexUser]" operation="set" value="0"/>

	<!-- calculate the range of user from the csv files -->
	<parameter name="[RangeNumberUser]" operation="list.size" value="[inviteeTab]"/>
	<parameter name="[TempRangeNumberUser]" operation="list.size" value="[inviterTab]"/>
	<if>
		<condition>
			<test parameter="[TempRangeNumberUser]" condition="number.lowerThan" value="[RangeNumberUser]"/>
		</condition>
		<then>
			<parameter name="[RangeNumberUser]" operation="set" value="[TempRangeNumberUser]"/>
		</then>
	</if>
	<parameter name="[RangeNumberUser]" operation="number.substract" value="[RangeNumberUser]" value2="1"/>

	<parameter name="[TempDuration]" operation="set" value="[TryingDuration]"/>
	<parameter name="[TempDuration]" operation="number.add" value="[TempDuration]" value2="[RingingDuration]"/>
	<parameter name="[TempDuration]" operation="number.add" value="[TempDuration]" value2="[CallDurationSec]"/>
	<parameter name="[TempDuration]" operation="number.add" value="[TempDuration]" value2="10"/>


	<!-- start main loop -->
	<label name="begin"/>

	<parameter name="[received]" operation="set" value="false"/>
	<receiveMessageSIP name="wait_SIP_request" timeout="[TempDuration]" failedOnTimeout="false">
		<parameter name="[received]" operation="set" value="true"/>
		<parameter name="[lastMethod]" operation="protocol.setFromMessage" value="message.type"/>
		<parameter name="[lastIsRequest]" operation="protocol.setFromMessage" value="message.request"/>
		<parameter name="[lastResult]" operation="protocol.setFromMessage" value="message.result"/>
		<parameter name="[lastFirstline]" operation="protocol.setFromMessage" value="firstline"/>
		<parameter name="[lastTo]" operation="protocol.setFromMessage" value="header.To"/>
		<parameter name="[lastToUser]" operation="protocol.setFromMessage" value="header.To.Address.URI.User"/>
		<parameter name="[lastFrom]" operation="protocol.setFromMessage" value="header.From"/>
		<parameter name="[lastFromUser]" operation="protocol.setFromMessage" value="header.From.Address.URI.User"/>
		<parameter name="[lastFromTag]" operation="protocol.setFromMessage" value="header.From.parameter.tag"/>
		<parameter name="[lastCallId]" operation="protocol.setFromMessage" value="header.Call-ID"/>
		<parameter name="[lastCSeq]" operation="protocol.setFromMessage" value="header.CSeq"/>
		<parameter name="[lastCSeqNumber]" operation="protocol.setFromMessage" value="header.CSeq.Number"/>
		<parameter name="[lastVia]" operation="protocol.setFromMessage" value="header.Via"/>
		<parameter name="[lastViaBranch]" operation="protocol.setFromMessage" value="header.Via.Parameter.branch"/>
		<parameter name="[lastRoute]" operation="protocol.setFromMessage" value="header.Route"/>
		<parameter name="[lastRouteUser]" operation="protocol.setFromMessage" value="header.Route.Address.URI.User"/>
		<parameter name="[lastRecordRoute]" operation="protocol.setFromMessage" value="header.Record-Route"/>
		<parameter name="[lastContact]" operation="protocol.setFromMessage" value="header.Contact"/>
		<parameter name="[lastContactURI]" operation="protocol.setFromMessage" value="header.Contact.Address.URI"/>
		<parameter name="[lastMax-Forwards]" operation="protocol.setFromMessage" value="header.Max-Forwards"/>
		<parameter name="[lastHeaderOthers]" operation="protocol.setFromMessage" value="header.Others"/>
		<parameter name="[lastContent]" operation="protocol.setFromMessage" value="content"/>
		<parameter name="[lastServiceTrigger]" operation="protocol.setFromMessage" value="header.ServiceTrigger"/>
		<parameter name="[lastMessage]" operation="protocol.setFromMessage" value="message"/>
	</receiveMessageSIP>

	<if>
		<condition>
			<test parameter="[received]" condition="string.equals" value="false"/>		  		  		    		  		  	
		</condition>
		<then>
			<exit name="exit" failed="false"/>
		</then>	    
	</if>

	<if>
		<condition>
			<test parameter="[lastIsRequest]" condition="string.equals" value="true"/>
			<test parameter="[lastMethod]" condition="string.equals" value="INVITE"/>
		</condition>
		<then>
			<goto  name="goto_recINVITE" label="recINVITE" state="true"/>
		</then>
	</if>

	<if>
		<condition>
			<test parameter="[lastIsRequest]" condition="string.equals" value="true"/>
			<test parameter="[lastMethod]" condition="string.equals" value="ACK"/>
		</condition>
		<then>
			<stats>
				<counter name="ACKlost"><decrease>1</decrease></counter>
			</stats>
			<goto  name="goto_begin" label="begin" state="true"/>
		</then>
	</if>

	<if>
		<condition>
			<test parameter="[received]" condition="string.equals" value="true"/>
			<test parameter="[lastIsRequest]" condition="string.equals" value="false"/>
			<test parameter="[lastMethod]" condition="string.equals" value="INVITE"/>
			<test parameter="[lastResult]" condition="number.greaterEqualThan" value="200"/>
		</condition>
		<then>
			<goto  name="goto_Request" label="recINVITE23456xx" state="true"/>
	    </then>
	</if>

	<if>
	    <condition>
			<test parameter="[received]" condition="string.equals" value="true"/>
			<test parameter="[lastIsRequest]" condition="string.equals" value="true"/>
		</condition>
		<then>
			<goto  name="goto_recOTHERS" label="recOTHERS" state="true"/>
		</then>
	</if>

	<if>
		<condition>
			<test parameter="[received]" condition="string.equals" value="true"/>
			<test parameter="[lastIsRequest]" condition="string.equals" value="false"/>
		</condition>
		<then>
			<goto  name="goto_recOTHERSxxx" label="recOTHERSxxx" state="true"/>
		</then>
	</if>

    <goto  name="goto_begin" label="begin" state="true"/>
	<!-- end main loop -->


	<!-- start recINVITE part -->
	<label name="recINVITE"/>

  	<stats>
		<counter name="INVITElost"><decrease>1</decrease></counter>
    </stats>	    	    	

  	<parameter name="[newToTag]" operation="string.random" value="10"/>

 	<sendMessageSIP name="Send 100 Trying" delay="0" listenpoint="listenpoint" 
					remoteHost="[remoteHostSIP]" remotePort="[remotePortSIP]" transport="[transport]">
<![CDATA[
SIP/2.0 100 Trying
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [lastCSeq]
Via: SIP/2.0/UDP no;branch=[lastViaBranch];Received=[remoteHostSIP];RPort=[remotePortSIP]
Content-Length: 0

]]>			
  	</sendMessageSIP>
  
    <sendMessageSIP name="Send 180 Ringing" delay="[TryingDuration]" listenpoint="listenpoint" 
                    remoteHost="[remoteHostSIP]" remotePort="[remotePortSIP]" transport="[transport]">
<![CDATA[
SIP/2.0 180 Ringing
To: [lastTo];tag=[newToTag]
From: [lastFrom]
Call-ID: [lastCallId]
Contact: <sip:[lastRouteUser(0)]@[localSIP];transport=udp>
CSeq: [lastCSeq]
Via: SIP/2.0/UDP no;branch=[lastViaBranch];Received=[remoteHostSIP];RPort=[remotePortSIP]
Record-Route: [lastRecordRoute]
Allow: ACK, BYE, CANCEL, INFO, INVITE, OPTIONS, PRACK, REFER, NOTIFY
P-Charging-Vector: icid-value=ffdd90da03ec4107ba5c96d362dfd
P-Charging-Function-Addresses: ccf="aaa://devitimmm1.sip.pfdev.fr:3868;transport=tcp";ccf="aaa://devitimmm1.sip.pfdev.fr:3868;transport=tcp"
Content-Length: 0

]]>			
	</sendMessageSIP>

	<parameter name="[indexUser]" operation="number.add" value="[indexUser]" value2="1"/>
	<if>
		<condition>
			<test parameter="[indexUser]" condition="number.greaterThan" value="[RangeNumberUser]"/>
		</condition>
		<then>
			<parameter name="[indexUser]" operation="set" value="0"/>
		</then>
	</if>

	<parameter name="[tempPortRTP]" operation="number.multiply" value="[indexUser]" value2="2"/>
	<parameter name="[portRTP]" operation="number.add" value="[RangePortRTP-UAS]" value2="[tempPortRTP]"/>

	<sendMessageSIP name="Send 200 OK" delay="[RingingDuration]" listenpoint="listenpoint" 
					remoteHost="[remoteHostSIP]" remotePort="[remotePortSIP]" transport="[transport]">
<![CDATA[
SIP/2.0 200 OK
From: [lastFrom]
To: [lastTo];tag=[newToTag]
Call-ID: [lastCallId]
CSeq: [lastCSeq]
Via: SIP/2.0/UDP no;branch=[lastViaBranch];Received=[remoteHostSIP];RPort=[remotePortSIP]
Allow: ACK, BYE, CANCEL, INFO, INVITE, OPTIONS, PRACK, REFER, NOTIFY
Accept:multipart/mixed,application/media_control+xml,application/sdp
Contact: <sip:[lastRouteUser(0)]@[localSIP];transport=udp>
Record-Route: [lastRecordRoute]
P-Charging-Vector: icid-value=ffdd90da03ec4107ba5c96d362dfd;orig-ioi=sip.pfdev.fr;term-ioi=sip.pfdev.fr
P-Charging-Function-Addresses: ccf="aaa://devitimmm1.sip.pfdev.fr:3868;transport=tcp";ccf="aaa://devitimmm1.sip.pfdev.fr:3868;transport=tcp"
Content-Type: application/sdp
Content-Length: x

v=0
o=[lastRouteUser(0)] 2211961014 2211961014 IN IP4 [localHostSIP]
s=VOIP P160SLD 02.11.08
c=IN IP4 [localHostSIP]
t=0 0
m=audio [portRTP] RTP/AVP 0 18 4
a=rtpmap:0 PCMU/8000/1
a=rtpmap:18 G729/8000/1
a=fmtp:18 annexb=no
a=rtpmap:4 G723/8000/1
a=sendrecv

]]>			
    </sendMessageSIP>

	<goto  name="goto_begin" label="begin" state="true"/>
	<!-- end recINVITE part -->


	<!-- start recINVITE23456xx part -->
	<label name="recINVITE23456xx"/>

	<if>
		<condition>
			<test parameter="[lastResult]" condition="number.greaterEqualThan" value="300"/>
		</condition>
		<then>
			<log type="Main" level="ERROR">
		<![CDATA[	    	
	    	StatusCode = #[lastResult] for the call from "[lastFromUser]" to "[lastToUser]" 
message : [lastMessage]
		]]>		
			</log>
		</then>
	</if>

	<stats>
		<counter name="ACKout"><increase>1</increase></counter>
		<counter name="ACKlost"><increase>1</increase></counter>
	</stats>

	<parameter name="[newBranchId]" operation="string.random" value="10"/>

	<sendMessageSIP name="Send ACK" delay="0" listenpoint="listenpoint" 
					remoteHost="[remoteHostSIP]" remotePort="[remotePortSIP]" transport="[transport]">
<![CDATA[
ACK sip:[remoteHostSIP] SIP/2.0
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [lastCSeqNumber] ACK
Max-Forwards: 70
Via: SIP/2.0/UDP [localSIP];branch=z9hG4bK[newBranchId]
Route: <sip:[lastToUser]@[remoteSIP];lr;call=orig>
Route: <sip:[lastToUser]@[localSIP];lr>
Route: <sip:[lastToUser]@[localSIP];lr>
Contact: <sip:[lastFromUser(0)]@[localSIP];transport=udp>
User-Agent: XMLLoader
Content-Length: 0

]]>
	</sendMessageSIP>

	<if>
		<condition>
			<test parameter="[lastResult]" condition="string.matches" value="[3-9][0-9][0-9]"/>	    		    	
		</condition>
		<then>
			<stats>
				<counter name="ActiveSession"><decrease>1</decrease></counter>
			</stats>
			<goto  name="goto_begin" label="begin" state="true"/>
		</then>
	</if>

	<stats>
		<counter name="INVITE2xxin"><increase>1</increase></counter>
		<counter name="BYEout"><increase>1</increase></counter>
		<counter name="BYElost"><increase>1</increase></counter>
	</stats>

	<parameter name="[newBranchId]" operation="string.random" value="10"/>
	<parameter name="[newCseqNumber]" operation="number.uid" value="10"/>

	<sendMessageSIP name="Send BYE" delay="[CallDurationSec]" listenpoint="listenpoint" 
					remoteHost="[remoteHostSIP]" remotePort="[remotePortSIP]" transport="[transport]">
<![CDATA[
BYE sip:[remoteHostSIP] SIP/2.0
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [newCseqNumber] BYE
Max-Forwards: 70
Via: SIP/2.0/UDP [localSIP];branch=z9hG4bK[newBranchId]
Route: <sip:[lastToUser]@[remoteSIP];lr;call=orig>
Route: <sip:[lastToUser]@[localSIP];lr>
Route: <sip:[lastToUser]@[localSIP];lr>
Contact: <sip:[lastFromUser(0)]@[localSIP];transport=udp>
Content-Length: 0

]]>
	</sendMessageSIP>

	<goto  name="goto_begin" label="begin" state="true"/>	    	                
	<!-- end recINVITE23456xx part -->


	<!-- start recOTHERS part -->
	<label name="recOTHERS"/>	

	<if>
		<condition>
			<test parameter="[lastMethod]" condition="string.equals" value="BYE"/>
		</condition>
		<then>
			<stats>
				<counter name="BYElost"><decrease>1</decrease></counter>
			</stats>	    	    	
		</then>
	</if>

	<parameter name="[newToTag]" operation="string.random" value="10"/>

	<sendMessageSIP name="Send 200 OK" delay="0" listenpoint="listenpoint" 
					remoteHost="[remoteHostSIP]" remotePort="[remotePortSIP]" transport="[transport]">
<![CDATA[
SIP/2.0 200 OK
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [lastCSeq]
Via: SIP/2.0/UDP no;branch=[lastViaBranch];Received=[remoteHostSIP];RPort=[remotePortSIP]
Content-Length: 0

]]>
	</sendMessageSIP>

	<goto  name="goto_begin" label="begin" state="true"/>	    	
	<!-- end recOTHERS part -->


	<!-- start recOTHERSxxx part -->
	<label name="recOTHERSxxx"/>

	<if>
		<condition>
			<test parameter="[lastMethod]" condition="string.equals" value="BYE"/>
		</condition>
		<then>
			<stats>
				<counter name="ActiveSession"><decrease>1</decrease></counter>  	
				<counter name="BYExxxin"><increase>1</increase></counter>
			</stats>	    	    	
		</then>
	</if>

	<goto  name="goto_begin" label="begin" state="true"/>	    	                	        	        
	<!-- end recOTHERSxxx part -->

</scenario>
