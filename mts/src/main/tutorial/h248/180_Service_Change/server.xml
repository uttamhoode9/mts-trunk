<?xml version="1.0" encoding="UTF-8"?>

<scenario>

    <!-- receive ServiceChange request-->
    <receiveMessageH248 name="Receive request" request="true" type="ServiceChange">
        <parameter name="[text]" operation="protocol.setFromMessage" value="message.text" />
        <parameter name="[transaction]" operation="protocol.setFromMessage" value="message.transactionID" />
        <parameter name="[contextID]" operation="protocol.setFromMessage" value="descr.*.Context.value" />
        <parameter name="[termID]" operation="protocol.setFromMessage" value="descr.*.Context.*.*.value" />
    </receiveMessageH248>

    <test parameter="[text]" condition="string.contains" value="MEGACO/3" />

    <!-- send ServiceChange response -->
    <parameter name="[rtpPort1]" operation="number.random" value="65535"/>
    <parameter name="[rtpPort2]" operation="number.random" value="65535"/>
    <sendMessageH248 name="Send response" remoteHost="[Host-Server]" remotePort="[Port-Server]" transport="[transportResponse]">
<![CDATA[
MEGACO/3 [[Host-Server]]:[Port-Server]
Reply = [transaction] {
 ImmAckRequired,
 Context=[contextID]{
  Priority = 1,                 
  ServiceChange=ROOT{
  },
  ServiceChange=ip/1/access/[termID1]{
   Services {
    ServiceChangeAddress=[Port-Server], 
    MgcIdToTry=[[Host-Server]:[Port-Server]], 
    Profile=ETSI_BGF/3, 
    Version=11, 
    20080721T14013777, 
   }
  }
 }
}
]]>
    </sendMessageH248>

    <!-- receive ServiceChange acknowledge -->
    <receiveMessageH248 name="Receive acknowledge" request="true" type="TransactionResponseAck">
        <parameter name="[text]" operation="protocol.setFromMessage" value="message.text" />
        <parameter name="[transaction]" operation="protocol.setFromMessage" value="message.transactionID" />
    </receiveMessageH248>
    
    <test parameter="[text]" condition="string.contains" value="MEGACO/3" />

</scenario>
