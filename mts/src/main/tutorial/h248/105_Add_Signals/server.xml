<?xml version="1.0" encoding="UTF-8"?>

<scenario>

    <!-- receive Add request-->
    <receiveMessageH248 name="Receive request" request="true" type="Add">
        <parameter name="[text]" operation="protocol.setFromMessage" value="message.text" />
        <parameter name="[transaction]" operation="protocol.setFromMessage" value="message.transactionID" />
    </receiveMessageH248>

    <test parameter="[text]" condition="string.contains" value="MEGACO/3" />

    <!-- send Add response -->
    <parameter name="[contextID]" operation="number.random" value="10000000"/>
    <parameter name="[termID1]" operation="number.random" value="10000000"/>
    <parameter name="[termID2]" operation="number.random" value="10000000"/>
    <parameter name="[signalListID1]" operation="number.random" value="10000000"/>
    <sendMessageH248 name="Send response" remoteHost="[remoteHostH248]" remotePort="[remotePortH248]" transport="[transportResponse]">
<![CDATA[
MEGACO/3 [[remoteHostH248]]:[remotePortH248]
Reply = [transaction] {
 ImmAckRequired,
 Context=[contextID]{
  Priority = 1,                     
  Add=[ip/1/access/[termID1],ip/1/access/[termID2]]{
   Signals {
    pkg/signal1 {       ;extensions 
     Stream = 1, 
     SignalType = OnOff,
     SignalType = TimeOut,
     SignalType = Brief,
     Duration = 1234,
     pkg/param0=0,             ;extensions 
     pkg/param1>1,             ;extensions 
     pkg/param2<2,             ;extensions 
     pkg/param3#3,             ;extensions 
     pkg/param4=[4,5,6],       ;extensions 
     pkg/param7={7,8,9}        ;extensions 
     NotifyCompletion = {TimeOut, IntByEvent, IntBySigDescr, OtherReason, Iteration},
     KeepActive,
     SPADirection = External,
     SPADirection = Internal,
     SPADirection = Both,
     SPARequestID = 2,
     Intersignal = 3
   }
  }
 }
}
]]>
    </sendMessageH248>

    <!-- receive Add acknowledge -->
    <receiveMessageH248 name="Receive acknowledge" request="true" type="TransactionResponseAck">
        <parameter name="[text]" operation="protocol.setFromMessage" value="message.text" />
        <parameter name="[transaction]" operation="protocol.setFromMessage" value="message.transactionID" />
    </receiveMessageH248>
    
    <test parameter="[text]" condition="string.contains" value="MEGACO/3" />

</scenario>
