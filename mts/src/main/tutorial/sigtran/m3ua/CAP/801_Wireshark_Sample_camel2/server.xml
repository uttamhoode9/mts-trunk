<?xml version="1.0" encoding="UTF-8"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->


<!--
    Document   : server.xml
    Created on : 10/07/2014
    Author     : fhenry
    Description: Receive a MAP message
-->

<scenario>

    <receiveMessageSIGTRAN name="Wait ASPUP1" request="true" type="ASP_Up:3_1">
        <parameter name="[channelName]" operation="protocol.setFromMessage" value="channel.name"/>
    </receiveMessageSIGTRAN>
        
    <sendMessageSIGTRAN	name="Send ASPUP1" destScenario="client" channel="[channelName]">
    
        <UA name="m3ua" file="m3ua.xml">
            <header version="1" reserved="0" messageClass="3" messageType="4"/>
    				
            <parameter tag="17" >
                <field name="ASP_Identifier" format="Integer" value="19" length="4"/>
            </parameter>
    	
            <parameter tag="INFO_String">
                <field name="INFO_String" format="String" value="ASPUP"/>
            </parameter>
        </UA>
        
    </sendMessageSIGTRAN>
    
    <!--receiveMessageSIGTRAN name="Wait DATA1" request="true" type="initialDP:0"-->
    <receiveMessageSIGTRAN name="Wait DATA1" request="true" type="0">
      <parameter name="[channelName]" operation="protocol.setFromMessage" value="channel.name"/>
      <parameter name="[request]" operation="protocol.setFromMessage" value="message.request"/>
      <parameter name="[type]" operation="protocol.setFromMessage" value="message.type"/>
      <parameter name="[result]" operation="protocol.setFromMessage" value="message.result"/>
    	<parameter name="[data1]" operation="protocol.setFromMessage" value="message.binary"/>
    </receiveMessageSIGTRAN>

    <!-- Message encoded value -->
 <!--parameter name="[data]" value="a173020101020100306b80016e8208839021721090000f830303975785010a8c06831407010900bb0580038090a39c01029d068314070109009e0203619f320806079209100491f9bf35038301119f360513fa3d3dea9f37069122705700709f39080250114231016500bf3b088106912270570070" /-->
 <!-- PB avec le tag de gmscAddress.ISDN_AddressString qui vaut normalement '0' dans le fichier ASN.1 et '1' dans la capture -->
    <parameter name="[data]" value="a173020101020100306b80016e8208839021721090000f830303975785010a8c06831407010900bb0580038090a39c01029d068314070109009e0203619f320806079209100491f9bf35038301119f360513fa3d3dea9f37069122705700709f39080250114231016500bf3b088006912270570070" />    			
    <parameter name="[xmlCAPdata]" operation="protocol.setFromMessage" value="asn.binary"/>
    <test parameter="[xmlCAPdata]" condition="binary.equals" value="[data]"/>

    <parameter name="[xml]" operation="protocol.setFromMessage" value="asn.xml"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;ASN layer=&quot;CAP&quot;&gt;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;Component"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;invoke"/>
    <parameter name="[invokeID]" operation="string.xpath" value="[xml]" value2="//invokeID.BoxedType"/>
    <test parameter="[invokeID]" condition="string.contains" value="&gt;1&lt;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;opCode"/>
    <parameter name="[localValue]" operation="string.xpath" value="[xml]" value2="//localValue.BoxedType"/>
    <test parameter="[localValue]" condition="string.contains" value="&gt;initialDP:0&lt;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;/opCode"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;invokeparameter"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;InitialDPArg"/>
    <parameter name="[serviceKey]" operation="string.xpath" value="[xml]" value2="//serviceKey.C0.BoxedType"/>
    <test parameter="[serviceKey]" condition="string.contains" value="&gt;110&lt;"/>
    <parameter name="[eventTypeBCSM]" operation="string.xpath" value="[xml]" value2="//eventTypeBCSM.C28.Enum"/>
    <test parameter="[eventTypeBCSM]" condition="string.contains" value="&gt;collectedInfo.2&lt;"/>
    <parameter name="[iMSI]" operation="string.xpath" value="[xml]" value2="//iMSI.C50.BoxedType"/>
    <!--test parameter="[iMSI]" condition="string.contains" value="&gt;110&lt;"/-->
    <parameter name="[iMSI_Digit]" operation="string.xpath" value="[iMSI]" value2="//field[@name='digits']"/> 
    <parameter name="[iMSI_Digit]" operation="string.xpath" value="[iMSI_Digit]" value2="//@value"/>
    <test parameter="[iMSI_Digit]" condition="string.equals" value="607029900140199"/>
        
    <!-- TODO -->
    
    <test parameter="[xml]" condition="string.contains" value="&lt;/InitialDPArg"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;/invokeparameter"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;/invoke"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;/Component"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;/ASN&gt;"/>
	
    <sendMessageSIGTRAN name="Send DATA1" channel="[channelName]">
        
    <!-- AP LAYER -->
    <ASN dictionary="cap/dictionary_CAP.xml">
      <Component.Choice>
        <returnResultLast.C2.Sequence>
           <invokeID.BoxedType><Integer>1</Integer></invokeID.BoxedType>
           <resultretres>
              <opCode.Choice>
                 <localValue.BoxedType><Long>mo-forwardSM:46</Long></localValue.BoxedType>
                 <!--globalValue><ObjectIdentifier>0.1.227.111</ObjectIdentifier></globalValue-->
              </opCode.Choice>
              <returnparameter>
                 <Mo_forwardSM_Res.Sequence>
                    <sm_RP_UI.BoxedType><Bytes>
                      <element name="SMS-SUBMIT-REPORT" coding="V" description="SMS-SUBMIT-REPORT">
                          <field name="NA1" type="Integer" lengthBit="1" description="Not applicable" comment="Not used"/>
                          <field name="TP-UDHI" value="The TP UD field contains only the short message:0" type="EnumLong" lengthBit="1" description="TP User Data Header Indicator" comment="Parameter indicating that the TP UD field contains a Header."/>
                          <field name="NA2" type="Integer" lengthBit="1" description="Not applicable" comment="Not used"/>
                          <field name="NA3" type="Integer" lengthBit="1" description="Not applicable" comment="Not used"/>
                          <field name="NA4" type="Integer" lengthBit="1" description="Not applicable" comment="Not used"/>
                          <field name="NA5" type="EnumLong" lengthBit="1" description="Not applicable" comment="Not used"/>
                          <field name="TP-MTI" value="SMS-SUBMIT / SMS-SUBMIT-REPORT:1" type="EnumLong" lengthBit="2" description="TP Message Type Indicator" comment="Parameter describing the message type."/>
                      </element>
                      <element name="TP-PI" coding="V" description="TP Parameter Indicator">
                    		<field name="Reserved1" value="0" type="Integer" lengthBit="1" description="Reserved #1"/>
                        <field name="Reserved2" value="0" type="Integer" lengthBit="1" description="Reserved #2"/>
                        <field name="Reserved3" value="0" type="Integer" lengthBit="1" description="Reserved #3"/>
                    		<field name="Reserved4" value="0" type="Integer" lengthBit="1" description="Reserved #4"/>
                        <field name="Reserved5" value="0" type="Integer" lengthBit="1" description="Reserved #1"/>
                    		<field name="TP-UDL present" value="absent:0" type="EnumLong" lengthBit="1" description="TP-UDL present"/>
                    		<field name="TP-DCS present" value="absent:0" type="EnumLong" lengthBit="1" description="TP-DCS present"/>
                    		<field name="TP-PID present" value="absent:0" type="EnumLong" lengthBit="1" description="TP-PID present"/>
                      </element>
                      <!--element name="TP-PI" coding="V" description="TP Parameter Indicator">
                    		<field name="Reserved1" type="Integer" lengthBit="1" description="Reserved #1"/>
                        <field name="Reserved2" type="Integer" lengthBit="1" description="Reserved #2"/>
                        <field name="Reserved3" type="Integer" lengthBit="1" description="Reserved #3"/>
                    		<field name="Reserved4" type="Integer" lengthBit="1" description="Reserved #4"/>
                        <field name="Reserved5" type="Integer" lengthBit="1" description="Reserved #1"/>
                    		<field name="TP-UDL present" value="present:1" type="EnumLong" lengthBit="1" description="TP-UDL present"/>
                    		<field name="TP-DCS present" value="present:1" type="EnumLong" lengthBit="1" description="TP-DCS present"/>
                    		<field name="TP-PID present" value="present:1" type="EnumLong" lengthBit="1" description="TP-PID present"/>
                      </element-->
                      <element name="TP-SCTS" coding="V" description="TP Discharge Time">
                          <field name="TP-DT" value="14121911134700" type="number_bcd" length="7" description="Discharge Time"/>
                      </element>
                      
                      <!--element name="TP-PID" coding="V" description="TP Protocol Identifier">
                    		<field name="assignment" value="Assigns bits 0..5 as defined below:0" type="enumeration" lengthBit="2" description="next bits assignment"/>
                    		<field name="telematic interworking" value="no interworking, but SME to SME protocol:0" type="enumeration" lengthBit="1" description="telematic interworking"/>
                    		<field name="telematic devices" value="implicit device type is specific to this SC,:0" type="enumeration" lengthBit="5" description="telematic devices"/>
                      </element-->
                      <!--element name="TP-DCS" coding="V" description="TP Data Coding Scheme">
                    		<field name="Coding Group Bits" value="General Data Coding indication:0" type="enumeration" lengthBit="2" description="Coding Group Bits"/>
                    		<field name="Compression" value="the text is uncompressed:0" type="enumeration" lengthBit="1" description="Compression"/>
                    		<field name="Bit 1-0 significance" value="bits 1-0 to 0 are reserved and have no message class meaning:0" type="enumeration" lengthBit="1" description="Bit 1-0 significance"/>
                    		<field name="Alphabet" value="[smsAlphabet]" type="enumeration" lengthBit="2" description="Alphabet"/>
                    		<field name="Message Class" value="Class 0:0" type="enumeration" lengthBit="2" description="Message Class"/>
                      </element-->
                      <!--element name="TP-UD" coding="V" description="TP User Data">
                        <field name="TP-UDL" value="[smsTextLength]" type="integer" length="1" description="number of characters in the SMS"/>
                        <field name="TP-UD" value="[smsBinary]" type="binary" description="SMS text"/>
                      </element-->                    
                    </Bytes></sm_RP_UI.BoxedType>
                    <!--extensionContainer.Sequence>
                       <privateExtensionList.C0.BoxedType>
                          <Collection>
                             <PrivateExtension.Sequence>
                                <extId><ObjectIdentifier>0.1.2118.34.123.17.27.93.27</ObjectIdentifier></extId>
                                <extType>04057584eaeb41</extType>
                             </PrivateExtension.Sequence>
                             <PrivateExtension.Sequence>
                                <extId><ObjectIdentifier>0.1.286.121.45.8.23.50.54.111</ObjectIdentifier></extId>
                                <extType>040bd97e68e972799fa98cbcb7</extType>
                             </PrivateExtension.Sequence>
                             <PrivateExtension.Sequence>
                                <extId><ObjectIdentifier>0.1.284.94.25.115.36.28.87.10.17</ObjectIdentifier></extId>
                                <extType>0404903d1910</extType>
                             </PrivateExtension.Sequence>
                          </Collection>
                       </privateExtensionList.C0.BoxedType>
                       <pcsExtensions.C1.Sequence></pcsExtensions.C1.Sequence>
                    </extensionContainer.Sequence-->
                 </Mo_forwardSM_Res.Sequence>
              </returnparameter>
           </resultretres>
        </returnResultLast.C2.Sequence>
      </Component.Choice>
    </ASN>
    
    <!-- TCAP LAYER -->
    <ASN dictionary="tcap/dictionary_TCAP.xml">
      <TCMessage>
        <end>
          <dtid><Bytes>00000001</Bytes></dtid>
          <dialoguePortion>
            <DialogueOC>
              <ExternalPDU>
                <ExternalPDUSequenceType>
                  <direct_reference><ObjectIdentifier>dialogue-as-id:0.0.17.773.1.1.1</ObjectIdentifier></direct_reference>
                  <!--indirect_reference>856649051904125184</indirect_reference-->
                  <!--data_value_descriptor><Bytes>0402aa40</Bytes></data_value_descriptor-->
                  <encoding>
                    <single_ASN1_type>
                      <DialoguePDU>
                        <dialogueResponse>
                          <AARE_apduSequenceType>
                            <protocol_version><BitString value="Version1:80" trailing="7"/></protocol_version>
                            <application_context_name>
                              <ObjectIdentifier><ObjectIdentifier>shortMsgRelayContext-v2:0.4.0.0.1.0.21.2</ObjectIdentifier></ObjectIdentifier>
                            </application_context_name>
                            <result><Associate_result><Long>0</Long></Associate_result></result>
                            <result_source_diagnostic>
                              <Associate_source_diagnostic>
                                <dialogue_service_user>
                                  <DialogueServiceUser><Long>0</Long></DialogueServiceUser>
                                </dialogue_service_user>
                              </Associate_source_diagnostic>
                            </result_source_diagnostic>
                            <!--Collection>
                              <user_information>040ca70f5e0f024d3b3c34b26588</user_information>
                              <user_information>04120aef3699f398f0a04000761bab86be69191c</user_information>
                              <user_information>0403d079a4</user_information>
                            </Collection-->
                          </AARE_apduSequenceType>
                        </dialogueResponse>
                      </DialoguePDU>
                    </single_ASN1_type>
                  </encoding>
                </ExternalPDUSequenceType>
              </ExternalPDU>
            </DialogueOC>
          </dialoguePortion>
        </end>
      </TCMessage>
    </ASN>
    
	  <!-- SCCP LAYER  -->
  	<SS7 name="sccp" file="sccp.xml">
  		<header>
          <field name="Message_Type" length="1" value="9" /> <!-- code for UnitData is 9 -->
      </header>
  		<parameter name="Protocol_Class" type="F" littleEndian="false">
  			<field value="0" lengthBit="4" />
  			<field value="1" lengthBit="4" /> <!-- values 0 and 1 is for connectionless class protocol, values 2 and 3 are for connection-oriented-protocol -->
  		</parameter>
  		<parameter id="3" name="Called_Party_Address" type="V" littleEndian="true">
  			<field name="Address_Indicator" value="67" length="1" />
  			<field name="Signalling_Point_Code" value="1" length="2" />
  			<field name="Subsystem_Number" value="8" length="1" />	
  		</parameter>
  		<parameter id="4" type="V" name="Calling_Party_Address" littleEndian="true">
  			<field name="Address_Indicator" value="67" length="1" />
  			<field name="Signalling_Point_Code" value="2" length="2" />
  			<field name="Subsystem_Number" value="8" length="1" />
  		</parameter>
  		<parameter id="15" name="Data" type="V" littleEndian="false">
  			<field value="" format="binary" length="88" />  <!-- HERE DATA OF UPPER LAYER (e.g TCAP) IN HEX STRING FORMAT -->
        <!--field value="625a4804000000016b1e281c060700118605010101a011600f80020780a1090607040000010015026c32a13002010102012e30288407913366600567f98207913366317071f3041411080b913366600567f70000a906f3f97c3e9f03" format="binary" length="92" /-->  <!-- HERE DATA OF UPPER LAYER (e.g TCAP) IN HEX STRING FORMAT -->
  		</parameter>
  	</SS7>

    <UA name="m3ua" file="m3ua.xml">
        <header	messageClass="Transfer_Messages" messageType="Payload_Data"/>
				
        <parameter tag="Network_Appearence">
            <field name="Network_Appearence"  format="Integer" value="102"/>
        </parameter>
        <parameter tag="Routing_Context">
            <field name="Routing_Context" format="Integer"  value="101"/>
        </parameter>
        <parameter tag="Protocol_Data">
            <field value="2" name="Originating_Point_Code"/>
            <field value="1" name="Destination_Point_Code" />
            <field value="SCCP"	name="SI"/>
            <field value="2"	name="NI"/>
            <field value="0"	name="MP"/>
            <field value="1"	name="SLS"/>
            <field name="DATA"	format="fvo"/>
        </parameter>
	
        <!--parameter tag="Correlation_Id">
            <field name="Correlation_Id" format="Integer"  value="12783"/>
        </parameter-->
    </UA>
    </sendMessageSIGTRAN>

    <!-- Message encoded value -->			  
  	<parameter name="[data]" value="0100010100000088020000080000006600060008000000650210006d000000020000000103020001090103070b044301000804430200084d644b4904000000016b2a2828060700118605010101a01d611b80020780a109060704000001001502a203020100a305a1030201006c17a215020101301002012e300b0409010041219111317400000000" />
    <parameter name="[data1]" operation="protocol.setFromMessage" value="message.binary"/>
    <test parameter="[data1]" condition="binary.equals" value="[data]"/>

    <parameter name="[xml]" operation="protocol.setFromMessage" value="message.xml"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;sm_RP_UI.BoxedType&gt;&lt;Bytes&gt;"/>

    <test parameter="[xml]" condition="string.contains" value="&lt;element name=&quot;SMS-SUBMIT-REPORT&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;TP-UDHI&quot; value=&quot;The TP UD field contains only the short message:0&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;TP-MTI&quot; value=&quot;SMS-SUBMIT / SMS-SUBMIT-REPORT:1&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;/element&gt;"/>
    
    <test parameter="[xml]" condition="string.contains" value="&lt;element name=&quot;TP-PI&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;Reserved1&quot; value=&quot;0&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;Reserved2&quot; value=&quot;0&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;Reserved3&quot; value=&quot;0&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;Reserved4&quot; value=&quot;0&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;Reserved5&quot; value=&quot;0&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;TP-UDL present&quot; value=&quot;absent:0&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;TP-DCS present&quot; value=&quot;absent:0&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;TP-PID present&quot; value=&quot;absent:0&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;/element&gt;"/>
    
    <test parameter="[xml]" condition="string.contains" value="&lt;element name=&quot;TP-SCTS&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;TP-SCTS&quot; value=&quot;14121911134700&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;/element&gt;"/>

    <!--test parameter="[xml]" condition="string.contains" value="&lt;element name=&quot;TP-PID&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;assignment&quot; value=&quot;Assigns bits 0..5 as defined below:0&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;telematic interworking&quot; value=&quot;no interworking, but SME to SME protocol:0&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;telematic devices&quot; value=&quot;implicit device type is specific to this SC,:0&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;/element&gt;"/-->

    <!--test parameter="[xml]" condition="string.contains" value="&lt;element name=&quot;TP-DCS&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;Coding Group Bits&quot; value=&quot;General Data Coding indication:0&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;Compression&quot; value=&quot;the text is uncompressed:0&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;Bit 1-0 significance&quot; value=&quot;bits 1 to 0 are reserved and have no message class meaning:0&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;Alphabet&quot; value=&quot;[smsAlphabet]&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;Message Class&quot; value=&quot;Class 0:0&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;/element&gt;"/-->

    <!--test parameter="[xml]" condition="string.contains" value="&lt;element name=&quot;TP-UD&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;TP-UDL&quot; value=&quot;[smsTextLength]&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;field name=&quot;TP-UD&quot; value=&quot;[smsBinary]&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;/element&gt;"/-->

    <test parameter="[xml]" condition="string.contains" value="&lt;/Bytes&gt;&lt;/sm_RP_UI.BoxedType&gt;"/>

</scenario>
