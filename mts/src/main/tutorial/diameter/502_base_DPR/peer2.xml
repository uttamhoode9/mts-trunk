<?xml version="1.0" encoding="UTF-8"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->
<scenario>
    
    <receiveMessageDIAMETER name="Receive Request RFC3588 DPR" request="true" type="Disconnect-Peer:282">
        <parameter name="[listenpointName]" operation="protocol.setFromMessage" value="listenpoint.name"/>
        <parameter name="[remoteHost]" operation="protocol.setFromMessage" value="channel.remoteHost"/>
        <parameter name="[remotePort]" operation="protocol.setFromMessage" value="channel.remotePort"/>
        <parameter name="[commandCode]" operation="protocol.setFromMessage" value="header.command"/>
        <parameter name="[applicationId]" operation="protocol.setFromMessage" value="header.applicationId"/>
        <parameter name="[hopByHop]" operation="protocol.setFromMessage" value="header.hopByHop"/>
        <parameter name="[endToEnd]" operation="protocol.setFromMessage" value="header.endToEnd"/>
        <parameter name="[sessionId]" operation="protocol.setFromMessage" value="avp.Session-Id:263.value"/>
        <parameter name="[authApplicationId]" operation="protocol.setFromMessage" value="avp.Auth-Application-Id:258.value"/>
        <parameter name="[destinationHost]" operation="protocol.setFromMessage" value="avp.Destination-Host:293.value"/>
        <parameter name="[destinationRealm]" operation="protocol.setFromMessage" value="avp.Destination-Realm:283.value"/>
    </receiveMessageDIAMETER>

<!--
From RFC 3588 September 2003 :
Disconnect-Peer-Answer ::= < Diameter Header: 282 >
                           { Result-Code }
                           { Origin-Host }
                           { Origin-Realm }
                           [ Error-Message ]
                         * [ Failed-AVP ]
                             Failed-AVP ::= < AVP Header: 279 >
                        1* {AVP}
-->

    <sendMessageDIAMETER name="Send Answer RFC3588 DPA" listenpoint="[listenpointName]" 
                         remoteHost="[remoteHost]" remotePort="[remotePortDIAM]">
        <header request="false" command="[commandCode]" applicationId="[applicationId]" hopByHop="[hopByHop]" endToEnd="[endToEnd]" proxiable="false" error="false" retransmit="false"/>
        <!-- The Result-Code AVP indicates whether a particular request was completed successfully or whether an error occurred. -->
        <avp code="Result-Code:268" mandatory="true" type="Unsigned32" value="DIAMETER_SUCCESS:2001"/>

        <!-- The Origin-Host AVP identifies the endpoint that originated the Diameter message. -->
        <avp code="Origin-Host:264" mandatory="true" type="DiameterIdentity" value="[destinationHost]"/>
        <!-- The Origin-Realm AVP contains the Realm of the originator of any Diameter message. -->
        <avp code="Origin-Realm:296" mandatory="true" type="DiameterIdentity" value="[destinationRealm]"/>

        <!-- The Error-Message AVP MAY accompany a Result-Code AVP as a human readable error message. -->
        <avp code="Error-Message:281" mandatory="false" type="UTF8String" value="ToBeCompleted. Change result code success value."/>

        <!-- The Failed-AVP AVP provides debugging information in cases where a request is rejected or not fully processed due to erroneous information in a specific AVP. -->
<!--
          <avp code="Failed-AVP:279">
            <avp code="???" vendorId="" mandatory="true/false" private="true/false" type="OctetString / Integer32 / Integer64 / Unsigned32 / Unsigned64 / Float32 / Float64 / Grouped / Address / Time / UTF8String / DiameterIdentity / DiameterURI / Enumerated / IPFilterRule / QoSFilterRule" value="???"/>
          </avp>
          <avp code="Failed-AVP:279">
            <avp code="???" vendorId="" mandatory="true/false" private="true/false" type="OctetString / Integer32 / Integer64 / Unsigned32 / Unsigned64 / Float32 / Float64 / Grouped / Address / Time / UTF8String / DiameterIdentity / DiameterURI / Enumerated / IPFilterRule / QoSFilterRule" value="???"/>
          </avp>
-->
    </sendMessageDIAMETER>
    
</scenario>
