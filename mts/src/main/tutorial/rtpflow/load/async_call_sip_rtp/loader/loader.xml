<?xml version="1.0" encoding="UTF-8"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->
<!DOCTYPE Library [
  <!ENTITY buildListNumber    SYSTEM "buildListNumber.xml">
 ]>

<scenario>

   	<if>
    <condition>
	    <test parameter="[test:first]" condition="list.exists" not="true"/>       	     
	</condition>
	    <then>    
            <parameter name="[rangeNumber]" operation="set" value="[RangeInviterNumber]"/>
            &buildListNumber;
            <parameter name="[test:inviterTab]" operation="set" value="[tabNumber]"/>            

            <parameter name="[rangeNumber]" operation="set" value="[RangeInviteeNumber]"/>
            &buildListNumber;
            <parameter name="[test:inviteeTab]" operation="set" value="[tabNumber]"/>            
            <parameter name="[numberUserTemp(0)]" operation="list.size" value="[test:inviterTab]"/>            
            <parameter name="[numberUserTemp(1)]" operation="list.size" value="[test:inviteeTab]"/>            
            <parameter name="[test:countUser]" operation="list.statMax" value="[numberUserTemp]"/>            
	        <parameter name="[test:indexUser]" operation="set" value="-1"/>

        	<parameter name="[test:first]" operation="set" value="false"/>
        	<!--<parameter name="[test:raptorOK]" operation="system.semaphorewait" value="1" value2="0"/>-->
	    </then>    
   	</if>

	<stats>
       	<counter name="ActiveSession" summary="Act Sess" complete="Count of active sessions"/>	
       	<counter name="INVITEout" summary="INV_out" complete="Send an outgoing INVITE"/>        	
		<counter name="INVITE2xxin" summary="INV2xx_in" complete="Receive an incoming INVITE/2xx OK"/>        
		<counter name="ACKout" summary="ACK_out" complete="Send an outgoing ACK"/>        	   
		<counter name="BYEout" summary="BYE_out" complete="Send an outgoing BYE"/>        	   		
		<counter name="BYExxxin" summary="BYExxx_in" complete="Receive an incoming BYE/XXX OK"/>			
    	</stats>

  	<createListenpointSIP name="listenpointSIP" localHost="[Host-Tester]" localPort="[Port-Tester]" transport="UDP"/>    		
  				               	  		       	       	        
  	<stats>
	    <counter name="ActiveSession"><increase>1</increase></counter>  	
    	<counter name="INVITEout"><increase>1</increase></counter>
       	<counter name="INVITElost"><increase>1</increase></counter>
	</stats>	    	    			

	<parameter name="[test:indexUser]" operation="number.add" value="[test:indexUser]" value2="1"/>   
	<parameter name="[test:indexUser]" operation="number.modulo" value="[test:indexUser]" value2="[test:countUser]"/>   

	<parameter name="[tempIndexUser]" operation="number.add" value="[RangeIndexUser]" value2="[test:indexUser]"/>
    <parameter name="[inviteeName]" operation="set" value="[inviteeTab([tempIndexUser])]"/>    	
	<parameter name="[inviterName]" operation="set" value="[inviterTab([tempIndexUser])]"/>
	 			 			
    <parameter name="[indexRaptor]" operation="number.modulo" value="[test:indexUser]" value2="[test:countRaptor]"/>   
	<parameter name="[IPRTP]" operation="set" value="[Host-Raptor-RTP([indexRaptor])]"/>    			
	<parameter name="[tempPortRTP]" operation="number.divide" value="[test:indexUser]" value2="[test:countRaptor]"/>
	<parameter name="[tempPortRTP]" operation="number.round" value="[tempPortRTP]"/>
	<parameter name="[tempPortRTP]" operation="number.multiply" value="[tempPortRTP]" value2="2"/>
	<parameter name="[portRTP]" operation="number.add" value="[RangeInviterRTPPort]" value2="[tempPortRTP]"/>
  
  <if>
        <condition>
            <test parameter="[SendRTPUAC]" condition="boolean.equals" value="true"/>
        </condition>
        <then>
            <createListenpointRTPFLOW name="listenpointUAC_[portRTP]" localHost="[Host-Tester]" localPort="[portRTP]" transport="UDP"/>    			
        </then>
   </if>
       
  	<parameter name="[newFromTag]" operation="string.random" value="10"/>
  	<parameter name="[newCallId]" operation="number.random" value="10000000"/>
	<parameter name="[newCseqNumber]" operation="set" value="1"/>
	<parameter name="[newBranchId]" operation="string.random" value="10"/>  
	  		
	<sendMessageSIP name="Send INVITE" listenpoint="listenpointSIP" remoteHost="[Host-Server]" remotePort="[Port-Server]">
<![CDATA[		
INVITE sip:[inviteeName]@[userDomain] SIP/2.0
Call-ID: [newCallId]-[inviterName]@[Adresse-Tester]
CSeq: [newCseqNumber] INVITE
Expires: 1800
From: "[inviterName]" <sip:[inviterName]@[userDomain]>;tag=[newFromTag]
To: sip:[inviteeName]@[userDomain]
Via: SIP/2.0/UDP  [Adresse-Tester];branch=z9hG4bK[newBranchId]
Contact: sip:[inviterName]@[Adresse-Tester]
Max-Forwards: 8
Content-Type: application/sdp
Supported: 100rel, timer
Allow: ACK, BYE, INVITE
P-Asserted-Identity: tel:[inviterName]
Content-Length: x

v=0
o=10 0 0 IN IP4 [IPRTP]
s=IMSS
c=IN IP4 [IPRTP]
t=0 0
m=audio [portRTP] RTP/AVP 18
a=rtpmap:18 G729/8000
a=sendrecv
]]>			
	</sendMessageSIP>
	             	        	        	        
</scenario>
