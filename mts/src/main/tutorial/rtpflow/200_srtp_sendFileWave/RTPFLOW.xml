<?xml version="1.0" encoding="UTF-8"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->

<scenario>

	<parameter name="[localHostSIP]" operation="system.ipaddress" value2="[IPVersion]"/>
    <parameter name="[localHostSIP]" operation="set" value="[localHostRTP(0)]"/>
    <parameter name="[localPortSIP]" operation="set" value="5060"/>
	
	<parameter name="[remoteHostSIP]" operation="system.ipaddress" value2="[IPVersion]"/>
    <parameter name="[remoteHostSIP]" operation="set" value="[remoteHostRTP(0)]"/>
    <parameter name="[remotePortSIP]" operation="set" value="6060"/>
	
	<parameter name="[localHostRTP]" operation="system.ipaddress" value2="[IPVersion]"/>
    <parameter name="[localHostRTP]" operation="set" value="[localHostRTP(0)]"/>
    <parameter name="[localPortRTP]" operation="set" value="10000"/>
	<parameter name="[transport]" operation="set" value="UDP"/>
	<parameter name="[remoteHostRTP]" operation="system.ipaddress" value2="[IPVersion]"/>
    <parameter name="[remoteHostRTP]" operation="set" value="[remoteHostRTP(0)]"/>
    <parameter name="[remotePortRTP]" operation="set" value="11000"/>

	<parameter name="[CIPHER_SENDER]" operation="set" value="AES_CM_128_HMAC_SHA1_80" />
	<parameter name="[KEY_AND_SALT_SENDER]" operation="set" value="d0RmdmcmVCspeEc3QGZiNWpVLFJhQX1cfHAwJSoj" />
	

	<createListenpointSIP name="[scenarioName]" localHost="[localHostSIP(0)]" localPort="[localPortSIP(0)]" transport="[transport]"/>

	<sendMessageSIP name="Send Invite" listenpoint="[scenarioName]" remoteHost="[remoteHostSIP(0)]" remotePort="[remotePortSIP(0)]">
		<![CDATA[INVITE sip:6001@[100_DOMAIN_ADDR] SIP/2.0
		Via: SIP/2.0/UDP [LocalAddress];branch=z9hG4bK[newBranchId]
		Max-Forwards: 70
		From: "[clientName]"<sip:[clientName]@[100_DOMAIN_ADDR]>;tag=[localTag]
		To: sip:6001@[100_DOMAIN_ADDR]
		Contact: "[clientName]"<sip:[LocalAddress]>	
		Call-ID: [newCallId]
		CSeq: [newCseq] INVITE
		Allow: SUBSCRIBE, NOTIFY, PRACK, INVITE, ACK, BYE, CANCEL, UPDATE, MESSAGE, REFER
		Supported: 100rel, replaces, norefersub, gruu
		User-Agent: [UserAgent]
		Content-Type: application/sdp
		Content-Length: x

		v=0
		o=- 999 999 IN IP4 [localHostRTP(0)]
		s=[UserAgent]
		c=IN IP4 [localHostRTP(0)]
		t=0 0
		m=audio [localPortRTP] RTP/SAVP 0
		a=rtcp:10001
		a=rtpmap:0 PCMU/8000
		a=crypto:1 [CIPHER_SENDER] inline:[KEY_AND_SALT_SENDER]
		a=sendrecv
		]]>
	</sendMessageSIP>
	
	<receiveMessageSIP name="Wait 100 Trying" type="INVITE" result="100" request="false">
	</receiveMessageSIP>

	<receiveMessageSIP name="Wait 180 Ringing" type="INVITE" result="180" request="false">
	</receiveMessageSIP>
	
	<receiveMessageSIP name="Wait 200 OK" type="INVITE" result="200" request="false">
		<parameter name="[SDPConnectionAddress0]" operation="protocol.setFromMessage" value="content(0).Sdp.Connection.Address"/>
        <parameter name="[SDPMediaPort0]" operation="protocol.setFromMessage" value="content(0).Sdp.Media.Port"/>
		<parameter name="[crypto]"	operation="protocol.setFromMessage" value="content(0).Sdp.media.attribut.crypto" />
 	</receiveMessageSIP>
	
	<removeListenpointSIP name="[scenarioName]" />
	
	<parameter name="[crypto]" operation="string.split" value="[crypto]" value2=" " />
	<parameter name="[inline]" operation="string.split" value="[crypto(2)]" value2=":" />
	<parameter name="[inline]" operation="string.split" value="[inline(1)]" value2="|" />

	<parameter name="[CIPHER]" 		operation="set"		value="[crypto(1)]" />
	<parameter name="[KEY_AND_SALT]" 	operation="set"		value="[inline(0)]" />
	
	<createListenpointRTPFLOW name="[scenarioName]" localHost="[localHostRTP(0)]" localPort="[localPortRTP]">
		<srtpSender algorithm="[CIPHER_SENDER]" masterKeyAndSalt="[KEY_AND_SALT_SENDER]" keyDerivationRate="2^20"/>
		<srtpReceiver algorithm="[CIPHER]" masterKeyAndSalt="[KEY_AND_SALT]" keyDerivationRate="2^20"/>
	</createListenpointRTPFLOW>

 	<parameter name="[testcase:SEM1]" operation="system.semaphorewait"/>

	<parameter name="[testcase:payloadList]" operation="set" value="[[fileWave(0)]]"/>
	<parameter name="[payloadType]" operation="set" value="[[fileWave(1)]]"/>
	<parameter name="[bitRate]" operation="set" value="[[fileWave(2)]]"/>
	<parameter name="[nbPacket]" operation="list.size" value="[payloadList]"/>
	<parameter name="[nbPacket]" operation="number.divide" value="[nbPacket]" value2="1"/>
	
	
	<sendMessageRTPFLOW listenpoint="[scenarioName]" remoteHost="[SDPConnectionAddress0]" remotePort="[SDPMediaPort0]">    
	    <flow packetNumber="[nbPacket]" bitRate="[bitRate]" synchronous="true" packetLost="0">
	    <header ssrc="1478523690" payloadType="[payloadType]" seqnum="0" timestamp="0"/>
	    <payload format="binary">[payloadList]</payload>
	    </flow>
	</sendMessageRTPFLOW>
	
	<receiveMessageRTPFLOW listenpoint="[scenarioName]" type="[payloadType]" timeout="60">
	        <parameter name="[payloadType]" operation="protocol.setFromMessage" value="header.payloadType"/>		
	        <parameter name="[flowPayloadPlayer]" operation="protocol.setFromMessage" value="flow.payload.player"/>
	        <parameter name="[packetNumber]" operation="protocol.setFromMessage" value="flow.packetNumber"/>
	        <parameter name="[flowPayloadText]" operation="protocol.setFromMessage" value="flow.payload.text"/>
	        <parameter name="[seqnum]" operation="protocol.setFromMessage" value="header.seqnum"/>
	        <!--
	            TODO : This code has to be changed using a sliding window of 1 second for exemple
	            DO NOT ERASE IT
	        -->
	        <!--<parameter name="[mosMean]" operation="protocol.setFromMessage" value="qos.mosMean"/>-->
	        <parameter name="[mos]" operation="protocol.setFromMessage" value="qos.mos"/>
	</receiveMessageRTPFLOW>
	
	<parameter name="file" operation="file.writewave" value="rtpflowReceivedResended.wav" 
	value2="[payloadType]"	
	value3="[flowPayloadPlayer]"
	value4="8"
	value5="8000"
	value6="1"
	/>
	
	<finally>
		<removeListenpointRTPFLOW name="[scenarioName]" />
	</finally>
		
</scenario>