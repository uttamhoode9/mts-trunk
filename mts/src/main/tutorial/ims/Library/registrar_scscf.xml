<!--Verifie si c est une requete REGISTER-->
<if>
	<condition>
		<test parameter="[lastSIPMethod]" condition="equals" value="REGISTER"/>
	</condition>
	<then>
		<!--recuperation contact public_identite private_identite reponse et URI-->		
		<parameter name="[impu]" 		operation="setFromMessage" 	value="header:To:Address:URI"		value2="[lastMessage]"/>
		<parameter name="[impi]" 		operation="setFromMessage" 	value="header:Authorization:Parameter:username"	value2="[lastMessage]"/>	
		<parameter name="[digestURI]" 	operation="setFromMessage" 	value="header:Authorization:URI"/>
		<parameter name="[Contactaddress]" 	operation="setFromMessage" 	value="header:Contact:Address"/>
		<parameter name="[Contact]" 		operation="setFromMessage" 	value="header:Contact"/>
		<parameter name="[sizeContact]"	 	operation="size" 			value="[Contact]"/>
		<parameter name="[response_S]" 	operation="setFromMessage" 	value="header:Authorization:Parameter:response"/>
		<!--Recherche  la public identite a ete enregistre-->	
		<parameter name="[index]" 			operation="findMatches" 	value="[tab_impu]"		value2="[impu]"/>
		<parameter name="[sizeindex]" 		operation="size" 			value="[index]"/>
		<!--Verification de la presence de la public identite et calcul de la reponse -->		
		<if>	
			<condition>
				<test parameter="[sizeindex]" condition="equals" value="1"/>
			</condition>
			<then>
				<!--Creation des variables domain et password-->	
				<parameter name="[domain]" 			operation="set" 	value="[tab_domain([index])]"/>
				<parameter name="[password]" 		operation="set" 	value="[tab_password([index])]"/>
				<parameter name="[HA2]" 			operation="digest" 	value="[lastSIPMethod]:[digestURI]"	value2="MD5" />		
				<parameter name="[HA1]" 			operation="digest" 	value="[impi]:[domain]:[password]" 	value2="MD5" />
				<parameter name="[response_R]" 		operation="digest" 	value="[HA1]:[nonce]:[HA2]" 		value2="MD5" />
			</then>
		</if>		
		<!--Test de la reponse -->		
		<if>
			<condition>
				<test parameter="[response_R]" condition="equals" value="[response_S]"/>
			</condition>
			<then>
				<!--Recuperation du header Expire et du header Path-->	
				<parameter name="[Expire]" 			operation="setFromMessage" 	value="header:Expires"/>
				<parameter name="[sizeExpire]" 		operation="size" 			value="[Expire]"/>
				<parameter name="[Path]" 			operation="setFromMessage" 	value="header:Path"/>
				<!--Verifie si la publique_identitee est enregistre-->
				<parameter name="[index]" 			operation="findmatches" 	value="[reg_impu]" 	value2="[impu]" />	
				<parameter name="[sizeindex]" 		operation="size" 			value="[index]"/>
				<!--Verifie si le header Expire existe-->
				<if>
					<condition>
						<test parameter="[sizeExpire]" condition="equals" value="1"/>
					</condition>
					<then>
						<parameter name="[Contact]" 		operation="unset"/>
						<parameter name="[Contact]" 		operation="create"/>
						
						<!--Verifie si enregistrement ou desenregistrement-->
						<if>
							<condition>
								<test parameter="[Expire]" condition="equals" value="0"/>
							</condition>
							<then>
								<!--Cas du desenregistrement-->
								<parameter name="[operation]" 	operation="set" 	value="5"/> 
								<!--Verifie si la publique_identite est enregistre-->
								<if>
									<condition>
										<test parameter="[sizeindex]" condition="equals" value="1"/>
									</condition>
									<then>
										<!--recuperation des contacts-->
										<parameter name="[index1]" operation="set" value="0" />
										<while>
											<condition>
												<test parameter="[sizeContact]" condition="greaterthan" value="[index1]"/>
											</condition>
											<do>
												<!--Verifie si le contact existe-->	
												<parameter name="[index2]" 	operation="findmatches" value="[contact[impu]]" value2="[Contactaddress([index1])]" />	
												<parameter name="[sizeindex2]" 	operation="size" 	value="[index2]" />
												<if>
													<condition>
														<test parameter="[sizeindex2]" condition="equals" value="1"/>
													</condition>
													<then>
														<!--Supprime le contact et ses pcscf et expire associe -->	
														<parameter name="[contact[impu]]" 	operation="removeAt" 	value="[contact[impu]]" value2="[index2]" />
														<parameter name="[pcscf[impu]]" 	operation="removeat" 	value="[pcscf[impu]]" 	value2="[index2]" />
														<parameter name="[expire[impu]]" 	operation="removeat" 	value="[expire[impu]]" 	value2="[index2]" />
													</then>
												</if>
												<parameter name="[index1]" operation="add" value="[index1]" value2="1"/>
											</do>
										</while>
										<!--Verifie si le contact contient * -->
										<if>
											<condition>
												<test parameter="[Contact]" condition="contains" value="*"/>
											</condition>
											<then>
												<parameter name="[index]" 			operation="findmatches" 	value="[reg_impu]" 	value2="[impu]" />	
												<parameter name="[reg_impu]" 		operation="removeat" 		value="[reg_impu]" 	value2="[index]"/>
												<parameter name="[SP[impu]]" 		operation="unset" />
												<parameter name="[contact[impu]]" 	operation="unset" />
												<parameter name="[expire[impu]]" 	operation="unset" />
												<parameter name="[pcscf[impu]]" 	operation="unset" />
												&SAR;
											</then>
										</if>
										<!--Verifie si il reste des contacts asssocie a la publique identite-->
										<parameter name="[sizecontact[impu]]" 	operation="size"	value="[contact[impu]]" />	
										<if>
											<condition>
												<test parameter="[sizecontact[impu]]" condition="equals"	value="0"/>
											</condition>
											<then>
												<parameter name="[index]" 			operation="findmatches" 	value="[reg_impu]" 	value2="[impu]" />	
												<parameter name="[reg_impu]" 		operation="removeat" 		value="[reg_impu]" 	value2="[index]"/>
												<parameter name="[SP[impu]]" 		operation="unset" />
												<parameter name="[contact[impu]]" 	operation="unset" />
												<parameter name="[expire[impu]]" 	operation="unset" />
												<parameter name="[pcscf[impu]]" 	operation="unset" />
												&SAR;
											</then>
										</if>
									</then>	
								</if>
							</then>	
							<else>
								<!--Cas de l'enregistrement-->
								<parameter name="[operation]" 	operation="set" 	value="2"/> 
								<!--Ajoute l'impu si elle n'est pas deja enregistre-->
								<if>
									<condition>
										<test parameter="[sizeindex]" condition="equals" value="0"/>
									</condition>
									<then>
										<!--Verifie que reg_impu existe-->
										<if>
											<condition>
												<test parameter="[reg_impu]" condition="exists"/>
											</condition>
											<then/>
											<else>
												<parameter name="[reg_impu]" 	operation="create"/>
											</else>
										</if>
										<!--Ajoute la publique_identite-->
										<parameter name="[reg_impu]" 		operation="addLast" 	value="[reg_impu]" 		value2="[impu]" />
									</then>
								</if>
								<!--Verifie si des contacts sont deja enregistre-->
								<if>
									<condition>
										<test parameter="[contact[impu]]" condition="exists"/>
									</condition>
									<then/>
									<else>
										<parameter name="[contact[impu]]" 		operation="create" />
										<parameter name="[expire[impu]]" 		operation="create" />
										<parameter name="[pcscf[impu]]" 		operation="create" />
									</else>
								</if>
								<!--Modifie le Expire-->
								<parameter name="[System]" operation="setFromSystem" 	value="Timestamp" 	value2="1970"/>
								<parameter name="[recExpire]" operation="multiply" 		value="[Expire]" 	value2="1000"/>
								<parameter name="[recExpire]" operation="add" 		value="[System]"	value2="[recExpire]"/>
								<!--Recupere les contacts-->
								<parameter name="[index]" operation="set" value="0" />								
								<while>
									<condition>
										<test parameter="[sizeContact]" condition="greaterthan" value="[index]"/>
									</condition>
									<do>
										<!--Verifie si le contact existe-->	
										<parameter name="[index1]" 	operation="findmatches" value="[contact[impu]]" value2="[Contactaddress([index])]"/>
										<parameter name="[sizeindex1]" 	operation="size" value="[index1]"/>
										<if>
											<condition>
												<test parameter="[sizeindex1]" condition="equals" value="1"/>
											</condition>
											<then>
												<parameter name="[contact[impu]]" 		operation="removeAt" 	value="[contact[impu]]" 		value2="[index1]" />
											</then>
											<else>
												<parameter name="[operation]" 	operation="set" 	value="1"/> 
											</else>
										</if>
										<!--Enregistre le contact l expire et le pcscf-->	
										<parameter name="[contact[impu]]" 	operation="addLast" 		value="[contact[impu]]" value2="[Contactaddress([index])]" />
										<parameter name="[pcscf[impu]]" 	operation="addLast" 		value="[pcscf[impu]]" 	value2="[Path]" />
										<parameter name="[expire[impu]]" 	operation="addLast" 		value="[expire[impu]]" 	value2="[recExpire]" />
										<!--Rajoute expires au Contact-->
										<parameter name="[Contaddress]" 	operation="set" value="[Contactaddress([index])]"/>
										<parameter name="[Contactaddress]" 	operation="removeAt" value="[Contactaddress]" value2="[index]"/>
										<parameter name="[Contact]" 	operation="addFirst" value="[Contactaddress]" value2="[Contaddress];expires=[Expire]"/>
										<!--incremente index-->
										<parameter name="[index]" 	operation="add" 		value="[index]" 	value2="1" />
									</do>
								</while>
								&SAR;
							</else>
						</if>
					</then>
					<else>
						<!--Cas de l'enregistrement-->
						<parameter name="[operation]" 	operation="set" 	value="2"/> 
						<!--Recupere les parametres expire des contact-->
						<parameter name="[ContactExpire]" operation="set"	value="header:Contact:Parameter:Expires"/>
						<!--Ajoute l'impu si elle n'est pas deja enregistre-->
						<if>
							<condition>
								<test parameter="[sizeindex]" condition="equals" value="0"/>
							</condition>
							<then>
								<!--Verifie l existence de reg_impu-->
								<if>
									<condition>
										<test parameter="[reg_impu]" condition="exists"/>
									</condition>
									<then/>
									<else>
										<parameter name="[reg_impu]" 	operation="create"/>
									</else>
								</if>
								<!--rajoute l impu-->
								<parameter name="[reg_impu]" operation="addLast" value="[reg_impu]" value2="[impu]"/>
							</then>
						</if>
						<!--Verifie l existence de contact_impu-->
						<if>
							<condition>
								<test parameter="[contact[impu]]" condition="exists"/>
							</condition>
							<then/>
							<else>
								<parameter name="[contact[impu]]" 		operation="create" />
								<parameter name="[expire[impu]]" 		operation="create" />
								<parameter name="[pcscf[impu]]" 		operation="create" />
							</else>
						</if>
						<!--Recupere les contacts-->
						<parameter name="[index]" operation="set" value="0" />
						<while>
							<condition>
								<test parameter="[sizeContact]" condition="greaterthan" value="[index]"/>
							</condition>
							<do>
								<!--Verifie si le contact existe-->	
								<parameter name="[index1]" 			operation="findmatches" 	value="[contact[impu]]" 	value2="[Contactadress([index])]"/>
								<parameter name="[sizeindex1]" 		operation="size" 			value="[index1]"/>
								<if>
									<condition>
										<test parameter="[sizeindex1]" condition="equals" value="1"/>
									</condition>
									<then>
										<parameter name="[contact[impu]]" 		operation="removeAt" 	value="[contact[impu]]" 		value2="[index1]" />
									</then>
									<else>
										<parameter name="[operation]" 	operation="set" 	value="1"/> 
									</else>
								</if>
								<!--Enregistre le contact et le pcscf-->	
								<parameter name="[contact[impu]]" 	operation="addLast" 		value="[contact[impu]]" value2="[Contactadress([index])]" />
								<parameter name="[pcscf[impu]]" 	operation="addLast" 		value="[pcscf[impu]]" 	value2="[path]" />
																	<!--Recupere le timestamp-->
								<parameter name="[System]" operation="setFromSystem" 	value="Timestamp" 	value2="1970"/>
								<parameter name="[ContactExpire]" operation="multiply" 	value="[ContactExpire]" 	value2="1000"/>
								<parameter name="[ContactExpire]" operation="add" 		value="[System]"	value2="[ContactExpire]"/>
								<!--Enregistre le expire-->
								<parameter name="[expire[impu]]" 	operation="addLast" 	value="[expire[impu]]" 	value2="[ContactExpire]"/>
								<!--incremente index-->
								<parameter name="[index]" 	operation="add" 		value="[expire[impu]]" 	value2="[ContactExpire]"/>
							</do>
						</while>
						&SAR;
					</else>
				</if>
				<!--envoi d un 200OK -->
<sendResponseSIP name="Answer 200 OK" providerName="[scenarioName]">
<![CDATA[SIP/2.0 200 OK
Via: [lastVia]
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCall-ID]
CSeq: [lastCSeq]
Contact: [Contact]
[ServiceRoute]
Path: [Path]
Content-Length: 0]]>
</sendResponseSIP>
				
			</then>
			<else>
				&MAR;
				<!--suppresion des h dans le nonce-->	
				<parameter name="[nonce]" 		operation="regexReplaces" 	value="[nonce]"   	value2="[h ]" value3=""/>
				<!--verification de l existence des tab-->
				<if>
					<condition>
						<test parameter="[tab_nonce]" condition="exists"/>
					</condition>
					<then/>
					<else>
						<parameter name="[tab_domain]" 		operation="create"/>
						<parameter name="[tab_impu]" 		operation="create"/>
						<parameter name="[tab_username]" 	operation="create"/>
						<parameter name="[tab_nonce]" 		operation="create"/>
						<parameter name="[tab_password]" 	operation="create"/>
					</else>
				</if>
				<!--verification de la presence de la publique identite-->
				<parameter name="[index]" 	operation="findmatches" value="[tab_impu]" value2="[impu]" />
				<parameter name="[sizeindex]" 	operation="size" value="[index]" />
				<if>	
					<condition>
							<test parameter="[sizeindex]" condition="equals" value="1"/>
					</condition>
					<then>
						<!--supprimer la publique identite des  tableuax-->
						<parameter name="[tab_domain]" 		operation="removeat" value="[tab_domain]" 		value2="[index]" />
						<parameter name="[tab_impu]" 		operation="removeat" value="[tab_impu]" 		value2="[index]" />
						<parameter name="[tab_username]" 	operation="removeat" value="[tab_username]" 	value2="[index]" />
						<parameter name="[tab_nonce]" 		operation="removeat" value="[tab_nonce]" 		value2="[index]" />
						<parameter name="[tab_password]" 	operation="removeat" value="[tab_password]" 	value2="[index]" />
					</then>
				</if>
				<!--mettre les parametres recues dans des tableaux-->
				<parameter name="[tab_domain]" 		operation="addLast" 	value="[tab_domain]" 	value2="[domaine]" />
				<parameter name="[tab_impu]" 		operation="addLast" 	value="[tab_impu]" 		value2="[impu]" />
				<parameter name="[tab_username]" 	operation="addLast" 	value="[tab_username]" 	value2="[impi]" />
				<parameter name="[tab_password]" 	operation="addLast" 	value="[tab_password]" 	value2="[password]" />
				<parameter name="[tab_nonce]" 		operation="addLast" 	value="[tab_nonce]" 	value2="[nonce]" />
				<!--envoi d un 401 avec un challenge-->
<sendResponseSIP name="Answer 401 Unauthorized" providerName="[scenarioName]">
<![CDATA[SIP/2.0 401 Unauthorized
Via:[lastVia]
To:[lastTo]
From:[lastFrom]
Call-ID:[lastCall-ID]
CSeq: [lastCSeq]
WWW-Authenticate: Digest realm="[domaine]", nonce="[nonce]", algorithm=MD5
Path:[Path]
Content-Length: 0]]>
</sendResponseSIP>
			</else>
		</if>
		<goto  name="loop" label="Begin" state="true"/>
	</then>
</if>
