<?xml version="1.0" encoding="UTF-8"?>

<scenario>
    <openConnectionTCP connectionName="socket" remoteHost="[remoteHost]" remotePort="[remotePort]" />

    <receiveDataTCP connectionName="socket" timeout="1">
        <parameter name="[temp]" operation="protocol.setFromMessage" value="data.binary" />
        <parameter name="[contents]" operation="protocol.setFromMessage" value="data.text" />
        <test parameter="[contents]" condition="string.equals" value=""/>
    </receiveDataTCP>

    <sendDataTCP connectionName="socket">
        <data format="binary">h41:1 h441:1 b01000001:1 d0000065:1 65</data>
    </sendDataTCP>

    <sendDataTCP connectionName="socket">
        <data format="binary">h41:1 h441:1 b01000001:1 d0000065:1 65</data>
    </sendDataTCP>

    <sendDataTCP connectionName="socket">
        <data format="binary">h41:1 h441:1 b01000001:1 d0000065:1 65</data>
    </sendDataTCP>

    <sendDataTCP connectionName="socket">
        <data format="binary">h41:1 h441:1 b01000001:1 d0000065:1 65</data>
    </sendDataTCP>

    <sendDataTCP connectionName="socket">
        <data format="binary">h41:1 h441:1 b01000001:1 d0000065:1 65</data>
    </sendDataTCP>

    <receiveDataTCP connectionName="socket" timeout="1">
        <parameter name="[temp]" operation="protocol.setFromMessage" value="data.binary" />
        <parameter name="[contents]" operation="protocol.setFromMessage" value="data.text" />
        <test parameter="[contents]" condition="string.equals" value="AAAAAAAAAAAAAAAAAAAA" />
    </receiveDataTCP>

    <finally>
    	<closeConnectionTCP connectionName="socket" />
    </finally>    	
    
</scenario>
