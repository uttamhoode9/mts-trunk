
package h225;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "Facility_UUIE", isSet = false )
    public class Facility_UUIE implements IASN1PreparedElement {
            
        @ASN1Element ( name = "protocolIdentifier", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private ProtocolIdentifier protocolIdentifier = null;
                
  
        @ASN1Element ( name = "alternativeAddress", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private TransportAddress alternativeAddress = null;
                
  
@ASN1SequenceOf( name = "alternativeAliasAddress", isSetOf = false ) 

    
        @ASN1Element ( name = "alternativeAliasAddress", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private java.util.Collection<AliasAddress>  alternativeAliasAddress = null;
                
  
        @ASN1Element ( name = "conferenceID", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private ConferenceIdentifier conferenceID = null;
                
  
        @ASN1Element ( name = "reason", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private FacilityReason reason = null;
                
  
        
        public ProtocolIdentifier getProtocolIdentifier () {
            return this.protocolIdentifier;
        }

        

        public void setProtocolIdentifier (ProtocolIdentifier value) {
            this.protocolIdentifier = value;
        }
        
  
        
        public TransportAddress getAlternativeAddress () {
            return this.alternativeAddress;
        }

        
        public boolean isAlternativeAddressPresent () {
            return this.alternativeAddress != null;
        }
        

        public void setAlternativeAddress (TransportAddress value) {
            this.alternativeAddress = value;
        }
        
  
        
        public java.util.Collection<AliasAddress>  getAlternativeAliasAddress () {
            return this.alternativeAliasAddress;
        }

        
        public boolean isAlternativeAliasAddressPresent () {
            return this.alternativeAliasAddress != null;
        }
        

        public void setAlternativeAliasAddress (java.util.Collection<AliasAddress>  value) {
            this.alternativeAliasAddress = value;
        }
        
  
        
        public ConferenceIdentifier getConferenceID () {
            return this.conferenceID;
        }

        
        public boolean isConferenceIDPresent () {
            return this.conferenceID != null;
        }
        

        public void setConferenceID (ConferenceIdentifier value) {
            this.conferenceID = value;
        }
        
  
        
        public FacilityReason getReason () {
            return this.reason;
        }

        

        public void setReason (FacilityReason value) {
            this.reason = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(Facility_UUIE.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            