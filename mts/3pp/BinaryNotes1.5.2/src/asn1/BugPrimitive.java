
package asn1;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "BugPrimitive" )
    public class BugPrimitive implements IASN1PreparedElement {
            @ASN1Boolean( name = "" )
    
        @ASN1Element ( name = "bugBoolean", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private Boolean bugBoolean = null;
                
  @ASN1Integer( name = "" )
    
        @ASN1Element ( name = "bugInteger", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private Long bugInteger = null;
                
  
        
        public Boolean getBugBoolean () {
            return this.bugBoolean;
        }

        public boolean isBugBooleanSelected () {
            return this.bugBoolean != null;
        }

        private void setBugBoolean (Boolean value) {
            this.bugBoolean = value;
        }

        
        public void selectBugBoolean (Boolean value) {
            this.bugBoolean = value;
            
                    setBugInteger(null);
                            
        }

        
  
        
        public Long getBugInteger () {
            return this.bugInteger;
        }

        public boolean isBugIntegerSelected () {
            return this.bugInteger != null;
        }

        private void setBugInteger (Long value) {
            this.bugInteger = value;
        }

        
        public void selectBugInteger (Long value) {
            this.bugInteger = value;
            
                    setBugBoolean(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(BugPrimitive.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            