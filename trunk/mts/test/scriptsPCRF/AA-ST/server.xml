<?xml version="1.0" encoding="UTF-8"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->
<!-- name="3GPP Rx AA (AAR/AAA)" -->

<scenario>

    <!-- create the listenpoints -->
    <parameter name="[test:lpNamePCRF]" operation="set" value="lp_server"/>
    <parameter name="[hostPCRFSize]" operation="list.size" value="[hostPCRF]"/>
    <parameter name="[portPCRFSize]" operation="list.size" value="[portPCRF]"/>
    <parameter name="[minPCRFSize]" operation="number.min" value="[hostPCRFSize]" value2="[portPCRFSize]"/>
    <parameter name="[minPCRFSize]" operation="number.substract" value="[minPCRFSize]" value2="1"/>
    <for index="[indexLP]" from="0" to="[minPCRFSize]">
        <createListenpointDIAMETER name="[test:lpNamePCRF]_[urlPCRF([indexLP])]" localHost="[hostPCRF([indexLP])]" localPort="[portPCRF([indexLP])]"/>
    </for>

<!--
From 3GPP TS 29.214 V10.3.0 : AAR is sent by the AF to the PCRF in order to provide it with the Session Information
<AA-Answer> ::= < Diameter Header: 265, PXY, 16777236 > 
		< Session-Id >
		{ Auth-Application-Id } 
		{ Origin-Host } 
		{ Origin-Realm } 
		[ Result-Code ] 
		[ Experimental-Result ] 
	   *[ Access-Network-Charging-Identifier ] 
		[ Access-Network-Charging-Address ] 
		[ Acceptable-Service-Info ] 
		[ IP-CAN-Type ] 
		[ RAT-Type ] 
	   *[ Supported-Features ] 
	   *[ Class ] 
		[ Error-Message ] 
		[ Error-Reporting-Host ] 
	   *[ Failed-AVP ] 
		[ Origin-State-Id ] 
	   *[ Redirect-Host ] 
		[ Redirect-Host-Usage ] 
		[ Redirect-Max-Cache-Time ] 
	   *[ Proxy-Info ] 
	   *[ AVP ] 
-->

    <!-- Attente d'une requete AARequest -->
    <receiveMessageDIAMETER name="ReceiveRequestAAR" 
        request="true" type="AA" timeout="0">
        <parameter name="[lastListenpointName]" operation="protocol.setFromMessage" value="listenpoint.name"/>
        <parameter name="[test:lastRemoteHost_[framedIPAddress]]" operation="protocol.setFromMessage" value="channel.remoteHost"/>
        <parameter name="[test:lastRemotePort_[framedIPAddress]]" operation="protocol.setFromMessage" value="channel.remotePort"/>
        <parameter name="[lastCommandCode]" operation="protocol.setFromMessage" value="header.command"/>
        <parameter name="[lastApplicationId]" operation="protocol.setFromMessage" value="header.applicationId"/>
        <parameter name="[lastHopByHop]" operation="protocol.setFromMessage" value="header.hopByHop"/>
        <parameter name="[lastEndToEnd]" operation="protocol.setFromMessage" value="header.endToEnd"/>
        <parameter name="[lastAuthAppliId]" operation="protocol.setFromMessage" value="avp.Auth-Application-Id.value"/>
        <parameter name="[test:lastSessionId_[framedIPAddress]]" operation="protocol.setFromMessage" value="avp.Session-Id.value"/>
        <parameter name="[test:lastUserName_[framedIPAddress]]" operation="protocol.setFromMessage" value="avp.443.444.value"/>
        <parameter name="[test:lastDestHost_[framedIPAddress]]" operation="protocol.setFromMessage" value="avp.Destination-Host.value"/>
        <parameter name="[test:lastDestRealm_[framedIPAddress]]" operation="protocol.setFromMessage" value="avp.Destination-Realm.value"/>
    </receiveMessageDIAMETER>

    <!-- Calculate the remote URL to send the DIAMETER response -->
    <parameter name="[remoteURL]" operation="set" value="diam://[lastRemoteHost_[framedIPAddress]]:[lastRemotePort_[framedIPAddress]]"/>
    <if>
      <condition>
        <test parameter="[lastRemoteHost_[framedIPAddress]]" condition="list.isEmpty"/>
      </condition>
      <then>
          <log type="Main" level="WARN">lastRemoteHost=null</log>
          <parameter name="[remoteURL]" operation="set" value="[urlAF(0)]"/>
      </then>
    </if>

    <!-- Simulation du temps de reponse -->
    <pause name="response time" seconds="[responseTime]"/>

    <!-- IP-CAN-Type: 3GPP-GPRS|DOCSIS|xDSL|WiMAX|3GPP2|3GPP-EPS|Non-3GPP-EPS -->
    <parameter name="[IP-CAN-Type]" operation="set" value="3GPP-EPS"/>

    <!-- RAT-Type: WLAN|VIRTUAL|UTRAN|GERAN|GAN|HSPA_EVOLUTION|EUTRAN|CDMA2000_1X|HRPD|UMB|EHRPD -->
    <parameter name="[RAT-Type]" operation="set" value="UTRAN"/>

    <!-- Envoi de la reponse AAAnswer-->
    <sendMessageDIAMETER name="SendAnswerAAA" listenpoint="[lastListenpointName]"
        remoteURL="[remoteURL]">
        <header request="false" command="[lastCommandCode]" applicationId="[lastApplicationId]" 
                hopByHop="[lastHopByHop]" endToEnd="[lastEndToEnd]" 
                proxiable="true" error="false" retransmit="false"/>
        <avp code="Session-Id" value="[test:lastSessionId_[framedIPAddress]]"/>
        <avp code="Auth-Application-Id" value="[lastAuthAppliId]"/>
        <avp code="Origin-Host" value="[test:lastDestHost_[framedIPAddress]]"/>
        <avp code="Origin-Realm" value="[test:lastDestRealm_[framedIPAddress]]"/>
        <avp code="Result-Code" value="[responseCode]"/>
        <!--avp code="Experimental-Result">
            <avp code="Vendor-Id" value="[vendorID]"/>
            <avp code="Experimental-Result-Code" value="2001" vendorId="[vendorID]"/>
        </avp-->
        <avp code="IP-CAN-Type" value="[IP-CAN-Type]"/>
        <avp code="RAT-Type" value="[RAT-Type]"/>
    </sendMessageDIAMETER>

    <!-- Attente d'une requete STRequest -->
    <receiveMessageDIAMETER name="Receive Request STR"
        request="true" type="Session-Termination:275" timeout="0">
        <parameter name="[lastCommandCode]" operation="protocol.setFromMessage" value="header.command"/>
        <parameter name="[lastApplicationId]" operation="protocol.setFromMessage" value="header.applicationId"/>
        <parameter name="[lastHopByHop]" operation="protocol.setFromMessage" value="header.hopByHop"/>
        <parameter name="[lastEndToEnd]" operation="protocol.setFromMessage" value="header.endToEnd"/>
        <parameter name="[lastAuthAppliId]" operation="protocol.setFromMessage" value="avp.Auth-Application-Id.value"/>
        <parameter name="[test:lastSessionId_[framedIPAddress]]" operation="protocol.setFromMessage" value="avp.Session-Id.value"/>
        <parameter name="[test:lastUserName_[framedIPAddress]]" operation="protocol.setFromMessage" value="avp.443.444.value"/>
        <parameter name="[test:lastDestHost_[framedIPAddress]]" operation="protocol.setFromMessage" value="avp.Destination-Host.value"/>
        <parameter name="[test:lastDestRealm_[framedIPAddress]]" operation="protocol.setFromMessage" value="avp.Destination-Realm.value"/>
    </receiveMessageDIAMETER>

    <!-- Simulation du temps de reponse -->
    <pause name="response time" seconds="[responseTime]"/>

<!--
From RFC 3588 September 2003 :
Session-Termination-Answer  ::= < Diameter Header: 275, PXY >
                                < Session-Id >
                                { Result-Code }
                                { Origin-Host }
                                { Origin-Realm }
                                [ User-Name ]
                              * [ Class ]
                                [ Error-Message ]
                                [ Error-Reporting-Host ]
                              * [ Failed-AVP ]
                                  Failed-AVP ::= < AVP Header: 279 >
                                              1* {AVP}
                                [ Origin-State-Id ]
                              * [ Redirect-Host ]
                                [ Redirect-Host-Usage ]
                                [ Redirect-Max-Cache-Time ]
                              * [ Proxy-Info ]
                                  Proxy-Info ::= < AVP Header: 284 >
                                                 { Proxy-Host }
                                                 { Proxy-State }
                                               * [ AVP ]
                              * [ AVP ]
-->

    <!-- Envoi d'une reponse STAnswer -->
    <sendMessageDIAMETER name="Send Answer STA" listenpoint="[lastListenpointName]">
        <header request="false" command="[lastCommandCode]" applicationId="Diameter Common Messages" 
                hopByHop="[lastHopByHop]" endToEnd="[lastEndToEnd]" 
                proxiable="true" error="false" retransmit="false"/>
        <!-- The Session-Id AVP is used to identify a specific session. -->
        <avp code="Session-Id" mandatory="true" type="UTF8String" value="[lastSessionId_[framedIPAddress]]"/>
        <!-- The Result-Code AVP indicates whether a particular request was completed successfully or whether an error occurred. -->
        <avp code="Result-Code" mandatory="true" type="Unsigned32" value="DIAMETER_SUCCESS"/>
        <!--avp code="Experimental-Result">
            <avp code="Vendor-Id" value="[vendorID]"/>
            <avp code="Experimental-Result-Code" value="2001" vendorId="[vendorID]"/>
        </avp-->

        <!-- The Origin-Host AVP identifies the endpoint that originated the Diameter message. -->
        <avp code="Origin-Host" mandatory="true" type="DiameterIdentity" value="[test:lastDestHost_[framedIPAddress]]"/>
        <!-- The Origin-Realm AVP contains the Realm of the originator of any Diameter message. -->
        <avp code="Origin-Realm" mandatory="true" type="DiameterIdentity" value="[test:lastDestReal_[framedIPAddress]]"/>

        <!-- The User-Name AVP contains the User-Name, in a format consistent with the Network Access Identifier (NAI) specification. -->
        <avp code="User-Name" mandatory="false" type="UTF8String" value="ToBeCompleted"/>

        <!-- The Class AVP is used to by Diameter servers to return state information to the access device. -->
        <avp code="Class" mandatory="false"  type="OctetString" value="ToBeCompleted"/>
        <avp code="Class" mandatory="false"  type="OctetString" value="ToBeCompleted"/>

        <!-- The Error-Message AVP MAY accompany a Result-Code AVP as a human readable error message. -->
        <avp code="Error-Message" mandatory="false" type="UTF8String" value="ToBeCompleted"/>
        <!-- The Error-Reporting-Host AVP contains the identity of the Diameter host that sent the Result-Code AVP to a value other than 2001 (Success). -->
        <avp code="Error-Reporting-Host" mandatory="false" type="DiameterIdentity" value="aaa[s]:// FQDN [ :port ] [ ;transport=tcp/sctp/udp ] [ ;protocol=diameter/radius/tacacs+ ]"/>

        <!-- The Failed-AVP AVP provides debugging information in cases where a request is rejected or not fully processed due to erroneous information in a specific AVP. -->
<!--
          <avp code="Failed-AVP">
            <avp code="???" mandatory="true/false" private="true/false" type="OctetString / Integer32 / Integer64 / Unsigned32 / Unsigned64 / Float32 / Float64 / Grouped / Address / Time / UTF8String / DiameterIdentity / DiameterURI / Enumerated / IPFilterRule / QoSFilterRule" value="???"/>
          </avp>
          <avp code="Failed-AVP">
            <avp code="???" mandatory="true/false" private="true/false" type="OctetString / Integer32 / Integer64 / Unsigned32 / Unsigned64 / Float32 / Float64 / Grouped / Address / Time / UTF8String / DiameterIdentity / DiameterURI / Enumerated / IPFilterRule / QoSFilterRule" value="???"/>
          </avp>
-->

        <!-- The Origin-State-Id AVP is a monotonically increasing value that is advanced whenever a Diameter entity restarts with loss of previous state. -->
        <avp code="Origin-State-Id" mandatory="false" type="Unsigned32" value="0"/>

          <!-- One or more of instances of this AVP MUST be present if the answer message's 'E' bit is set and the Result-Code AVP is set to DIAMETER_REDIRECT_INDICATION. -->
          <avp code="Redirect-Host" mandatory="false" type="DiameterURI" value="ToBeCompleted"/>
          <avp code="Redirect-Host" mandatory="false" type="DiameterURI" value="ToBeCompleted"/>
          <!-- The Redirect-Host-Usage AVP dictates how the routing entry resulting from the Redirect-Host is to be used. -->
          <!-- Possible enumerated values : DONT_CACHE(0) / ALL_SESSION(1) / ALL_REALM(2) / REALM_AND_APPLICATION(3) / ALL_APPLICATION(4) / ALL_HOST(5) / ALL_USER(6). -->
          <avp code="Redirect-Host-Usage" mandatory="false" type="Enumerated" value="Don't Care"/>
          <!-- The Redirect-Max-Cache-Time AVP MUST be present in answer messages whose 'E' bit is set, the Result-Code AVP is set to DIAMETER_REDIRECT_INDICATION and the Redirect-Host-Usage AVP set to a non-zero value. -->
          <avp code="Redirect-Max-Cache-Time" mandatory="false" type="Unsigned32" value="0"/>              

          <!-- The Proxy-Host AVP contains the identity of the host that added the Proxy-Info AVP. -->
          <!-- The Proxy-State AVP contains state local information. -->
          <avp code="Proxy-Info">
             <avp code="Proxy-Host" mandatory="true" private="false" type="DiameterIdentity" value="ToBeCompleted"/>
             <avp code="Proxy-State" mandatory="true"  private="false" type="OctetString" value="ToBeCompleted"/>
          </avp>
          <avp code="Proxy-Info">
             <avp code="Proxy-Host" mandatory="true"  private="false" type="DiameterIdentity" value="ToBeCompleted"/>
             <avp code="Proxy-State" mandatory="true"  private="false" type="OctetString" value="ToBeCompleted"/>
          </avp>
    </sendMessageDIAMETER>

    <finally>
          <!--removeListenpointDIAMETER name="lp_server"/-->
    </finally>
    
</scenario>
