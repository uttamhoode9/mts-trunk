<!--
Function description: Lib_Subscriber

Traitement des UA SIP pour simulation de scenarios Enabler

Input parameters:


	
Output parameters :

-->


<stats>
    <counter name="ActiveSession" shortDesc="Act Sess" description="Active session" longDesc="Count of active sessions"/>	
    <counter name="INVITEout" shortDesc="INV_out" description="INVITE outgoing" longDesc="Send an outgoing INVITE"/>        	
		<counter name="INVITE2xxin" shortDesc="INV2xx_in" description="INVITE/2xx incoming" longDesc="Receive an incoming INVITE/2xx OK"/>        
		<counter name="ACKout" shortDesc="ACK_out" description="ACK outgoing" longDesc="Send an outgoing ACK"/>        	   
		<counter name="BYEout" shortDesc="BYE_out" description="BYE outgoing" longDesc="Send an outgoing BYE"/>        	   		
		<counter name="BYExxxin" shortDesc="BYExxx_in" description="BYE/xxx incoming" longDesc="Receive an incoming BYE/XXX OK"/>			
</stats>

<stats>
        	<counter name="INVITEin" shortDesc="INV_in" description="INVITE incoming" longDesc="Receive an incoming INVITE"/>
		<counter name="ACKin" shortDesc="ACK_in" description="ACK incoming" longDesc="Receive an incoming ACK"/>        
		<counter name="BYEin" shortDesc="BYE_in" description="BYE incoming" longDesc="Receive an incoming BYE"/>			
</stats>


	<parameter name="[indexUser]" operation="set" value="0"/>    			

	<!-- calculate the range of user from the csv files -->
	
	
	<parameter name="[RangeNumberUser]" operation="size" value="[inviteeTab]"/>    		
  <parameter name="[TempRangeNumberUser]" operation="size" value="[inviterTab]"/>
  <parameter name="[Temp2RangeNumberUser]" operation="size" value="[inviterTVTab]"/>   		
	
  <if>
	    <condition>
		<test parameter="[TempRangeNumberUser]" condition="lowerThan" value="[RangeNumberUser]"/>
	    </condition>
	    <then>
	    	<parameter name="[RangeNumberUser]" operation="set" value="[TempRangeNumberUser]"/>
	    </then>
	</if>
	<if>
	    <condition>
		<test parameter="[Temp2RangeNumberUser]" condition="lowerThan" value="[RangeNumberUser]"/>
	    </condition>
	    <then>
	    	<parameter name="[RangeNumberUser]" operation="set" value="[Temp2RangeNumberUser]"/>
	    </then>
	</if>
	
	
	<parameter name="[RangeNumberUser]" operation="substract" value="[RangeNumberUser]" value2="1"/>    	

<!-- SWESWE -->
	<parameter name="[TempDuration]" operation="set" value="[TryingDuration]"/>    	  	
	<parameter name="[TempDuration]" operation="add" value="[TempDuration]" value2="[CallDurationSec]"/>    	
	<parameter name="[TempDuration]" operation="add" value="[TempDuration]" value2="10"/>    	

	
	<!-- start main loop -->	
	<label name="begin"/>
	
	<parameter name="[received]" operation="set" value="false"/>		
	<receiveMessage name="wait_SIP_request" timeout="[TempDuration]" failedOnTimeout="false">
		<parameter name="[received]" operation="set" value="true"/>	
		<parameter name="[lastMethod]" operation="setFromMessage" value="message:type"/>	
		<parameter name="[lastIsRequest]" operation="setFromMessage" value="message:request"/>  		
		<parameter name="[lastResult]" operation="setFromMessage" value="message:result"/>  				
		<parameter name="[lastFirstline]" operation="setFromMessage" value="firstline"/>  	
		<parameter name="[lastTo]" operation="setFromMessage" value="header:To"/>  	
		<parameter name="[lastToUser]" operation="setFromMessage" value="header:To:Address:URI:User"/>  	
	  	<parameter name="[lastFrom]" operation="setFromMessage" value="header:From"/>  	
		<parameter name="[lastFromUser]" operation="setFromMessage" value="header:From:Address:URI:User"/>	
	  	<parameter name="[lastFromTag]" operation="setFromMessage" value="header:From:parameter:tag"/>  	  	
	  	<parameter name="[lastCallId]" operation="setFromMessage" value="header:Call-ID"/>		  		  	
	  	<parameter name="[lastCSeq]" operation="setFromMessage" value="header:CSeq"/>
    		<parameter name="[lastCSeqNumber]" operation="setFromMessage" value="header:CSeqNumber"/>   	  	
	  	<parameter name="[lastVia]" operation="setFromMessage" value="header:Via"/>    	
	  	<parameter name="[lastRoute]" operation="setFromMessage" value="header:Route"/>
		<parameter name="[lastRouteUser]" operation="setFromMessage" value="header:Route:Address:URI:User"/>      		  		  	
	  	<parameter name="[lastRecordRoute]" operation="setFromMessage" value="header:Record-Route"/>		  	
	  	<parameter name="[lastContact]" operation="setFromMessage" value="header:Contact"/>		  		  	
    		<parameter name="[lastContactURI]" operation="setFromMessage" value="header:Contact:Address:URI"/>		  		  	
	  	<parameter name="[lastMax-Forwards]" operation="setFromMessage" value="header:Max-Forwards"/>		  		  	
		<parameter name="[lastHeaderOthers]" operation="setFromMessage" value="header:Others"/>		  		  		  	
	  	<parameter name="[lastContent]" operation="setFromMessage" value="content"/>		  		  	
	  	<parameter name="[lastServiceTrigger]" operation="setFromMessage" value="header:ServiceTrigger"/>		  		  		  	
	  	<parameter name="[lastMessage]" operation="setFromMessage" value="message"/>		  		  		  		  	
	</receiveMessage>


<!--
Contournement pb AS FT lors des tests
--> 
	<parameter name="[lastRouteUser]" operation="set" value="12345678"/>


	<if>
	    <condition>
		    <test parameter="[received]" condition="equals" value="false"/>		  		  		    		  		  	
	    </condition>
	    <then>
	       <exit name="exit" failed="false"/>
	    </then>	    
	</if>
	
	<if>
	    <condition>
		<test parameter="[lastIsRequest]" condition="equals" value="true"/>		  		  		    
	    	<test parameter="[lastMethod]" condition="equals" value="INVITE"/>		  		  	
	    </condition>
	    <then>
		<goto  name="goto_recINVITE" label="recINVITE" state="true"/>	    	
	    </then>
	</if>

	<if>
	    <condition>
		  <test parameter="[lastIsRequest]" condition="equals" value="true"/>		  		  		    
	    <test parameter="[lastMethod]" condition="equals" value="ACK"/>		  		  	
	    </condition>
	    <then>
	  	<stats>
  		    <counter name="ACKin"><increase>1</increase></counter>
    		</stats>
    		
    <!-- SWESWE
    Envoi BYE par le subs_A du scenario 2 qd ACK est recu cote SUBS_A dans le scenario 2 (temp_value_1)
    ou bien si AUTRE_CAS (temp_value_2)
    
    -->
    

<parameter name="[temp_value1]" operation="set" value="false"/>
<parameter name="[temp_value2]" operation="set" value="false"/>

<if>
<condition>
<test parameter="[WhichSide]" condition="equals" value="SubsASide_scen_2"/>	  		  		    		  		  	
</condition>
	<then>
  <parameter name="[temp_value1]" operation="set" value="true"/>
  <parameter name="[ByeDelay]" operation="set" value="[CallDurationSec]"/>
  </then>
</if>

<parameter name="[SendTheBye]" operation="set" value="false"/>
<parameter name="[SendTheBye]" operation="or" value="[temp_value1]" value2="[temp_value2]"/>
    
 	  <if>
	    <condition>
		<test parameter="[SendTheBye]" condition="equals" value="true"/>		  		  		    		  		  	
	    </condition>
	    <then>
  	<parameter name="[newCseqNumber]" operation="identifier" value="nextInteger" value2="10000000"/>
	  <parameter name="[newBranchId]" operation="identifier" value="newString" value2="10"/>
	
    <sendRequestSIP name="Send BYE" delay="[ByeDelay]" providerName="provider">
    

        <![CDATA[
BYE sip:[Host-Tester]:[Port-Subs_B] SIP/2.0
To: [lastFrom]
From: [lastTo]
Call-ID: [lastCallId]
CSeq: [newCseqNumber] BYE
Max-Forwards: 70
Via: SIP/2.0/UDP [Host-Tester]:[provider_Port];branch=z9hG4bK[newBranchId]
Route: <sip:[Host-Enabler]:[Port-Enabler];lr;call=orig>
Contact: <sip:[lastFromUser(0)]@[Host-Tester]:[Port-Subs_A];transport=udp>
Content-Length: 0
        
]]></sendRequestSIP>

</then></if>
	    
    <!-- FIN SWESWE
    Envoi BYE par le subs_A du scenario 2 qd ACK est recu cote SUBS_A dans le scenario 2 (temp_value_1)
    ou bien si AUTRE_CAS (temp_value_2)
    -->     
  	    	    	
		<goto  name="goto_begin" label="begin" state="true"/>	    	    		
	    </then>
	</if>

	<if>
	    <condition>
	    	<test parameter="[received]" condition="equals" value="true"/>		  		  		    
		<test parameter="[lastIsRequest]" condition="equals" value="false"/>		  		  		    		
	    	<test parameter="[lastMethod]" condition="equals" value="INVITE"/>
	    	<test parameter="[lastResult]" condition="matches" value="[2-9][0-9][0-9]"/>	    		    	
	    </condition>
	    <then>
		<goto  name="goto_Request" label="recINVITE23456xx" state="true"/>	    	
	    </then>
	</if>

	<if>
	    <condition>
	    	<test parameter="[received]" condition="equals" value="true"/>		  		  		    	    
		<test parameter="[lastIsRequest]" condition="equals" value="true"/>		  		  		    
	    </condition>
	    <then>
		<goto  name="goto_recOTHERS" label="recOTHERS" state="true"/>	    	
	    </then>
	</if>

	<if>
	    <condition>
	    	<test parameter="[received]" condition="equals" value="true"/>		  		  		    
		<test parameter="[lastIsRequest]" condition="equals" value="false"/>		  		  		    		
	    </condition>
	    <then>
		<goto  name="goto_recOTHERSxxx" label="recOTHERSxxx" state="true"/>	    	
	    </then>
	</if>

        <goto  name="goto_begin" label="begin" state="true"/>	    	                        
	<!-- end main loop -->	
		
	<label name="recINVITE"/>	
	
  	<stats>
  	    <counter name="INVITEin"><increase>1</increase></counter>
    	</stats>	    	    	

  	<parameter name="[newToTag]" operation="identifier" value="newString" value2="10"/>
  	
 	<sendResponseSIP name="Send 100 Trying" delay="0" providerName="provider">
<![CDATA[
SIP/2.0 100 Trying
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [lastCSeq]
Via: [lastVia]
Content-Length: 0

]]>			
  	</sendResponseSIP>



<!-- 
SWESWE
Scenario 2: Non envoi du 180 sur Re-Invite recu par Subs_A et content empty
Scenario 2: Non envoi du 180 sur Re-Invite recu par Subs_B et invite avec video
-->

<!--parameter name="[ParamTest]" operation="set"    value=":" />
		<parameter name="[ParamTest]" operation="concat" value="[ParamTest]" value2="[Port-Subs_B]" /-->

<parameter name="[temp_value1]" operation="set" value="false"/>
<parameter name="[temp_value2]" operation="set" value="false"/>

<if>
<condition>
  <test parameter="[WhichSide]" condition="equals" value="SubsBSide_scen_2"/>
  <!--test parameter="[lastFirstline]" condition="contains" value="[ParamTest]"/-->	 
  <test parameter="[lastContent]" condition="contains" value="video"/>	  		  		    		  		  	
</condition>
	<then>
  <parameter name="[temp_value1]" operation="set" value="true"/>
  </then>
</if>


<if>
<condition>
  <test parameter="[WhichSide]" condition="equals" value="SubsASide_scen_2"/>
  <test parameter="[lastContent]" condition="isEmpty"/>	  		  		    		  		  	
</condition>
	<then>
  <parameter name="[temp_value2]" operation="set" value="true"/>
  </then>
</if>

<parameter name="[DoNotSend180]" operation="or" value="[temp_value1]" value2="[temp_value2]"/>

<if>
<condition>
<test parameter="[DoNotSend180]" condition="equals" value="true"/>
</condition>
<then>
</then>
<else>
  
        <sendResponseSIP name="Send 180 Ringing" delay="[TryingDuration]" providerName="provider">
<![CDATA[
SIP/2.0 180 Ringing
To: [lastTo];tag=[newToTag]
From: [lastFrom]
Call-ID: [lastCallId]
Contact: <sip:[lastRouteUser(0)]@[Adresse-Tester];transport=udp>
CSeq: [lastCSeq]
Via: [lastVia]
Record-Route: [lastRecordRoute]
Allow: ACK, BYE, CANCEL, INFO, INVITE, OPTIONS, PRACK, REFER, NOTIFY
P-Charging-Vector: icid-value=ffdd90da03ec4107ba5c96d362dfd
P-Charging-Function-Addresses: ccf="aaa://devitimmm1.sip.pfdev.fr:3868;transport=tcp";ccf="aaa://devitimmm1.sip.pfdev.fr:3868;transport=tcp"
Content-Length: 0

]]>			
        </sendResponseSIP>
</else></if> 
<!-- 
FIN SWESWE
Scenario 2: Non envoi du 180 sur Re-Invite recu par Subs_A et content empty
Scenario 2: Non envoi du 180 sur Re-Invite recu par Subs_B et invite avec video
-->


  	<parameter name="[indexUser]" operation="add" value="[indexUser]" value2="1"/>    			
       	<if>
	    <condition>
		<test parameter="[indexUser]" condition="greaterThan" value="[RangeNumberUser]"/>       	     
    	    </condition>
    	    <then>
		<parameter name="[indexUser]" operation="set" value="0"/>    				    	
	    </then>
	</if>
	
	<parameter name="[tempPortRTP]" operation="multiply" value="[indexUser]" value2="2"/>
	<parameter name="[portRTP]" operation="add" value="[RangePortRTP-UAS]" value2="[tempPortRTP]"/>
	  			

<!--


SWESWE: Beginning of section for SDP200okChanges according to considered scenario


-->

<!--
SDPChanges Scenario 1, Subscriber_B side
-->
<if>
<condition>
<test parameter="[WhichSide]" condition="equals" value="SubsBSide_scen_1"/>	 	    		    	
</condition><then>

<sendResponseSIP name="Send 200 OK" delay="[RingingDuration]" providerName="provider">
<![CDATA[
SIP/2.0 200 OK
From: [lastFrom]
To: [lastTo];tag=[newToTag]
Call-ID: [lastCallId]
CSeq: [lastCSeq]
Via: [lastVia]
Allow: ACK, BYE, CANCEL, INFO, INVITE, OPTIONS, PRACK, REFER, NOTIFY
Accept:multipart/mixed,application/media_control+xml,application/sdp
Contact: <sip:[lastRouteUser(0)]@[Adresse-Tester];transport=udp>
Record-Route: [lastRecordRoute]
P-Charging-Vector: icid-value=ffdd90da03ec4107ba5c96d362dfd;orig-ioi=sip.pfdev.fr;term-ioi=sip.pfdev.fr
P-Charging-Function-Addresses: ccf="aaa://devitimmm1.sip.pfdev.fr:3868;transport=tcp";ccf="aaa://devitimmm1.sip.pfdev.fr:3868;transport=tcp"
Content-Type: application/sdp
Content-Length: x

v=0
o=[lastRouteUser(0)] 2211961014 2211961014 IN IP4 [Host-Tester]
s=VOIP P170S 01.31
c=IN IP4 [Host-Tester]
t=0 0
m=audio [portRTP] RTP/AVP 8 101
a=rtpmap:8 PCMA/8000/1
a=rtpmap:101 telephone-event/8000
a=fmtp:101 0-15
a=sendrecv
			
]]>			
</sendResponseSIP> 	    
            
</then></if>

<!--
SDPChanges Scenario 2, Subscriber_A side
-->
<if>
<condition>
<test parameter="[WhichSide]" condition="equals" value="SubsASide_scen_2"/>	 	    		    	
</condition><then>

<sendResponseSIP name="Send 200 OK" delay="[RingingDuration]" providerName="provider">
<![CDATA[
SIP/2.0 200 OK
From: [lastFrom]
To: [lastTo];tag=[newToTag]
Call-ID: [lastCallId]
CSeq: [lastCSeq]
Via: [lastVia]
Allow: ACK, BYE, CANCEL, INFO, INVITE, OPTIONS, PRACK, REFER, NOTIFY
Accept:multipart/mixed,application/media_control+xml,application/sdp
Contact: <sip:[lastRouteUser(0)]@[Adresse-Tester];transport=udp>
Record-Route: [lastRecordRoute]
P-Charging-Vector: icid-value=ffdd90da03ec4107ba5c96d362dfd;orig-ioi=sip.pfdev.fr;term-ioi=sip.pfdev.fr
P-Charging-Function-Addresses: ccf="aaa://devitimmm1.sip.pfdev.fr:3868;transport=tcp";ccf="aaa://devitimmm1.sip.pfdev.fr:3868;transport=tcp"
Content-Type: application/sdp
Content-Length: x

v=0
o=[lastRouteUser(0)] 2211961014 2211961014 IN IP4 [Host-Tester]
s=VOIP P160SLD 02.11.08
c=IN IP4 [Host-Tester]
t=0 0
m=audio [portRTP] RTP/AVP 0 18 4
a=rtpmap:0 PCMU/8000/1
a=rtpmap:18 G729/8000/1
a=fmtp:18 annexb=no
a=rtpmap:4 G723/8000/1
a=sendrecv
			
]]>			
</sendResponseSIP> 	                
</then></if>

<!--
SDPChanges Scenario 2, Subscriber_A_TV side
-->
<if>
<condition>
<test parameter="[WhichSide]" condition="equals" value="SubsATV_scen_2"/>	 	    		    	
</condition><then>

  <parameter name="[portRTPVideo]" operation="add" value="[RangePortsupVideo-SubsA_TV]" value2="[tempPortRTP]"/> 

<sendResponseSIP name="Send 200 OK" delay="[RingingDuration]" providerName="provider">
<![CDATA[
SIP/2.0 200 OK
From: [lastFrom]
To: [lastTo];tag=[newToTag]
Call-ID: [lastCallId]
CSeq: [lastCSeq]
Via: [lastVia]
Allow: ACK, BYE, CANCEL, INFO, INVITE, OPTIONS, PRACK, REFER, NOTIFY
Accept:multipart/mixed,application/media_control+xml,application/sdp
Contact: <sip:[lastRouteUser(0)]@[Host-Tester]:[Port-Subs_A_TV];transport=udp>
Record-Route: [lastRecordRoute]
P-Charging-Vector: icid-value=ffdd90da03ec4107ba5c96d362dfd;orig-ioi=sip.pfdev.fr;term-ioi=sip.pfdev.fr
P-Charging-Function-Addresses: ccf="aaa://devitimmm1.sip.pfdev.fr:3868;transport=tcp";ccf="aaa://devitimmm1.sip.pfdev.fr:3868;transport=tcp"
Content-Type: application/sdp
Content-Length: x

v=0
o=[lastRouteUser(0)] 2211961014 2211961014 IN IP4 [Host-Tester]
s=VOIP P160SLD 02.11.08
c=IN IP4 [Host-Tester]
b=AS:256
t=0 0
m=audio [portRTP] RTP/AVP 102 120 9 8 0 18 4 116
a=rtpmap:102 X-G72x1/16000
a=sendrecv
a=rtpmap:120 X-FT-SCA729/16000
a=rtpmap:9 G722/8000
a=rtpmap:8 PCMA/8000
a=rtpmap:0 PCMU/8000
a=rtpmap:18 G729/8000
a=fmtp:18 annexb=yes
a=rtpmap:4 G723/8000
a=rtpmap:116 telephone-event/8000
a=rtpmap:116 0-15
m=video [portRTPVideo] RTP/AVP 96 97 34 31
b=TIAS:256000
b=AS:256
a=rtpmap:96 H264/90000
a=maxprate:26.0
a=fmtp:96 profile-level-id=428014
a=sendrecv
a=rtpmap:97 H263-1998/90000
a=fmtp:97 CIF=1;QCIF=1;I=1;J=1;T=1;N=4;K=1
a=34 H263/90000
a=fmtp:34 CIF=1;QCIF=1
a=rtpmap:31 H261/90000
a=fmtp:31 CIF=1;QCIF=1
a=rtcp-fb: ccm fir
m=data 6004 RTP/AVP 115
a=rtpmap:115 X-ATOR/1000
a=sendrecv
			
]]>			
</sendResponseSIP> 	                
</then></if>

<!--
SDPChanges Scenario 2, SubscriberB side, 2 cases - refer below
-->
<if>
<condition>
<test parameter="[WhichSide]" condition="equals" value="SubsBSide_scen_2"/>   		    	
</condition><then>

  <if>
  <condition>
  <test parameter="[lastContent]" condition="contains" value="video"/>    		    	
  </condition><then>

<!--
SDPChanges Scenario 2, SubscriberB side, Second Invite
-->

  <parameter name="[portRTPVideo]" operation="add" value="[RangePortsupVideo-SubsB]" value2="[tempPortRTP]"/>

<sendResponseSIP name="Send 200 OK" delay="[RingingDuration]" providerName="provider">
<![CDATA[
SIP/2.0 200 OK
From: [lastFrom]
To: [lastTo];tag=[newToTag]
Call-ID: [lastCallId]
CSeq: [lastCSeq]
Via: [lastVia]
Allow: ACK, BYE, CANCEL, INFO, INVITE, OPTIONS, PRACK, REFER, NOTIFY
Accept:multipart/mixed,application/media_control+xml,application/sdp
Contact: <sip:[lastRouteUser(0)]@[Host-Tester]:[Port-Subs_B];transport=udp>
Record-Route: [lastRecordRoute]
P-Charging-Vector: icid-value=ffdd90da03ec4107ba5c96d362dfd;orig-ioi=sip.pfdev.fr;term-ioi=sip.pfdev.fr
P-Charging-Function-Addresses: ccf="aaa://devitimmm1.sip.pfdev.fr:3868;transport=tcp";ccf="aaa://devitimmm1.sip.pfdev.fr:3868;transport=tcp"
Content-Type: application/sdp
Content-Length: x

v=0
o=[lastRouteUser(0)] 2211961014 2211961014 IN IP4 [Host-Tester]
s=VOIP P160SLD 02.11.08
c=IN IP4 [Host-Tester]
b=AS:256
t=0 0
m=audio [portRTP] RTP/AVP 8 101
a=rtpmap:8 PCMA/8000
a=sendrecv
a=rtpmap:101 telephone-event/8000
a=fmtp:101 0-15
m=video [portRTPVideo] RTP/AVP 96 97 34 31
b=TIAS:256000
b=AS:256
a=rtpmap:96 H264/90000
a=maxprate:26.0
a=fmtp:96 profile-level-id=428014
a=sendrecv
a=rtpmap:97 H263-1998/90000
a=fmtp:97 CIF=1;QCIF=1;I=1;J=1;T=1;N=4;K=1
a=rtpmap:34 H263/90000
a=fmtp:34 CIF=1;QCIF=1
a=fmtp:34 CIF=1;QCIF=1
a=rtpmap:31 H261/90000
a=fmtp:31 CIF=1;QCIF=1
a=rtcp-fb: ccm fir
			
]]>
		
</sendResponseSIP> 

</then><else>

<!--
SDPChanges Scenario 2, SubscriberB side, Initial Invite
-->
<sendResponseSIP name="Send 200 OK" delay="[RingingDuration]" providerName="provider">
<![CDATA[
SIP/2.0 200 OK
From: [lastFrom]
To: [lastTo];tag=[newToTag]
Call-ID: [lastCallId]
CSeq: [lastCSeq]
Via: [lastVia]
Allow: ACK, BYE, CANCEL, INFO, INVITE, OPTIONS, PRACK, REFER, NOTIFY
Accept:multipart/mixed,application/media_control+xml,application/sdp
Contact: <sip:[lastRouteUser(0)]@[Host-Tester]:[Port-Subs_B];transport=udp>
Record-Route: [lastRecordRoute]
P-Charging-Vector: icid-value=ffdd90da03ec4107ba5c96d362dfd;orig-ioi=sip.pfdev.fr;term-ioi=sip.pfdev.fr
P-Charging-Function-Addresses: ccf="aaa://devitimmm1.sip.pfdev.fr:3868;transport=tcp";ccf="aaa://devitimmm1.sip.pfdev.fr:3868;transport=tcp"
Content-Type: application/sdp
Content-Length: x

v=0
o=[lastRouteUser(0)] 2211961014 2211961014 IN IP4 [Host-Tester]
s=VOIP P160SLD 02.11.08
c=IN IP4 [Host-Tester]
b=AS:256
t=0 0
m=audio [portRTP] RTP/AVP 8 101
a=rtpmap:8 PCMA/8000
a=rtpmap:101 telephone-event/8000
a=fmtp:101 0-15
a=sendrecv
			
]]>

</sendResponseSIP> 

</else></if>

</then></if>

<!--




SWESWE: End of section for SDP200okChanges according to considered scenario



-->

	<goto  name="goto_begin" label="begin" state="true"/>	    	

	<label name="recINVITE23456xx"/>	

	<if>
	    <condition>
	    	<test parameter="[lastResult]" condition="matches" value="[3-9][0-9][0-9]"/>	    		    	
	    </condition>
	    <then>
	    	<log type="Main" level="ERROR">
		<![CDATA[	    	
	    	StatusCode = #[lastResult] for the call from "[lastFromUser]" to "[lastToUser]" 
message : [lastMessage]
		]]>		
		</log>
	    </then>
	</if>
	
  	<stats>
  	    	<counter name="ACKout"><increase>1</increase></counter>
    	</stats>	    	    			
    
      	<parameter name="[newBranchId]" operation="identifier" value="newString" value2="10"/>
      	
  	<sendRequestSIP name="Send ACK" delay="0" providerName="provider">
<![CDATA[
ACK sip:[Host-Enabler] SIP/2.0
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [lastCSeqNumber] ACK
Max-Forwards: 70
Via: SIP/2.0/UDP [Adresse-Tester];branch=z9hG4bK[newBranchId]
Route: <sip:[lastToUser]@[Adresse-Enabler];lr;call=orig>
Route: <sip:[lastToUser]@[Adresse-Tester];lr>
Route: <sip:[lastToUser]@[Adresse-Tester];lr>
Contact: <sip:[lastFromUser(0)]@[Adresse-Tester];transport=udp>
User-Agent: XMLLoader
Content-Length: 0

]]>
  	</sendRequestSIP>

	<if>
	    <condition>
	    	<test parameter="[lastResult]" condition="matches" value="[3-9][0-9][0-9]"/>	    		    	
	    </condition>
	    <then>
	  	<stats>
  		    <counter name="ActiveSession"><decrease>1</decrease></counter>  	
    		</stats>	    	    		  
		<goto  name="goto_begin" label="begin" state="true"/>	    	                
	    </then>
	</if>


  	<stats>
  	    	<counter name="INVITE2xxin"><increase>1</increase></counter>  	
  	    	<counter name="BYEout"><increase>1</increase></counter>
    	</stats>	    	    			

<!-- 
SWESWE: Condition d'envoi du BYE apres un ACK
-->

<if>
<condition>
<test parameter="[WhichSide]" condition="equals" value="SubsASide_scen_1"/>	  		  		    		  		  	
</condition>
	<then>
  
<parameter name="[newBranchId]" operation="identifier" value="newString" value2="10"/>
<parameter name="[newCseqNumber]" operation="identifier" value="nextInteger" value2="10000000"/>
    

  	
  	  	<sendRequestSIP name="Send BYE" delay="[CallDurationSec]" providerName="provider"> 
<![CDATA[
BYE sip:[Host-Enabler] SIP/2.0
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [newCseqNumber] BYE
Max-Forwards: 70
Via: SIP/2.0/UDP [Adresse-Tester];branch=z9hG4bK[newBranchId]
Route: <sip:[lastToUser]@[Adresse-Enabler];lr;call=orig>
Route: <sip:[lastToUser]@[Adresse-Tester];lr>
Route: <sip:[lastToUser]@[Adresse-Tester];lr>
Contact: <sip:[lastFromUser(0)]@[Adresse-Tester];transport=udp>
Content-Length: 0

]]>
  	</sendRequestSIP>
  	
</then>
</if>

<!-- 
FIN SWESWE: Condition d'envoi du BYE apres un ACK
-->
                
	<goto  name="goto_begin" label="begin" state="true"/>	    	                
	
	<label name="recOTHERS"/>	

	<if>
	    <condition>
	    	<test parameter="[lastMethod]" condition="equals" value="BYE"/>
	    </condition>
	    <then>
	  	<stats>
  		    <counter name="BYEin"><increase>1</increase></counter>
    		</stats>	    	    	
	    </then>
	</if>
  
    	<parameter name="[newToTag]" operation="identifier" value="newString" value2="10"/>
    	
        <sendResponseSIP name="Send 200 OK" delay="0" providerName="provider">
<![CDATA[
SIP/2.0 200 OK
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [lastCSeq]
Via: [lastVia]
Content-Length: 0

]]>
        </sendResponseSIP>

	<goto  name="goto_begin" label="begin" state="true"/>	    	

        <label name="recOTHERSxxx"/>	

  	<stats>
  	    <counter name="ActiveSession"><decrease>1</decrease></counter>  	
  	    <counter name="BYExxxin"><increase>1</increase></counter>
    	</stats>	    	    	
	
	<goto  name="goto_begin" label="begin" state="true"/>