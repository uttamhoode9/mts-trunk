<?xml version="1.0" encoding="UTF-8"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->

<scenario>

<stats>
    <counter name="ActiveSession" shortDesc="Act Sess" description="Active session" longDesc="Count of active sessions"/>	
    <counter name="INVITEout" shortDesc="INV_out" description="INVITE outgoing" longDesc="Send an outgoing INVITE"/>        	
		<counter name="INVITE2xxin" shortDesc="INV2xx_in" description="INVITE/2xx incoming" longDesc="Receive an incoming INVITE/2xx OK"/>        
		<counter name="ACKout" shortDesc="ACK_out" description="ACK outgoing" longDesc="Send an outgoing ACK"/>        	   
		<counter name="BYEout" shortDesc="BYE_out" description="BYE outgoing" longDesc="Send an outgoing BYE"/>        	   		
		<counter name="BYExxxin" shortDesc="BYExxx_in" description="BYE/xxx incoming" longDesc="Receive an incoming BYE/XXX OK"/>			
</stats>

<openProviderSIP name="open SIP provider" providerName="provider" localHost="[Host-Tester]" localPort="[Port-loader]" transport="UDP"/>    		



<!-- calculate the range of user from the csv files -->

<parameter name="[RangeNumberUser]" operation="size" value="[inviteeTab]"/>    		
<parameter name="[TempRangeNumberUser]" operation="size" value="[inviterTab]"/>
<parameter name="[Temp2RangeNumberUser]" operation="size" value="[inviterTVTab]"/>   		
	
  <if>
	    <condition>
		<test parameter="[TempRangeNumberUser]" condition="lowerThan" value="[RangeNumberUser]"/>
	    </condition>
	    <then>
	    	<parameter name="[RangeNumberUser]" operation="set" value="[TempRangeNumberUser]"/>
	    </then>
	</if>
	<if>
	    <condition>
		<test parameter="[Temp2RangeNumberUser]" condition="lowerThan" value="[RangeNumberUser]"/>
	    </condition>
	    <then>
	    	<parameter name="[RangeNumberUser]" operation="set" value="[Temp2RangeNumberUser]"/>
	    </then>
	</if>

<parameter name="[RangeNumberUser]" operation="substract" value="[RangeNumberUser]" value2="1"/>

<!--
SWESWE Phase d abonnement des appelants au service de notification de l Enabler
Execute uniquement la premiere fois
-->

<if>
<condition>
<test parameter="[test:PremiereExecution]" condition="equals" value="true"/>
</condition>
<then>

<parameter name="[test:PremiereExecution]" operation="set" value="false"/>
<parameter name="[CompteurBoucle]" operation="set" value="0"/>
<parameter name="[MaxBoucle]" operation="set" value="1"/>
<!-- SWESWE Valeur a positionner pour les tests de charge
-->

<parameter name="[MaxBoucle]" operation="set" value="[RangeNumberUser]"/>


<while>
	<condition>
		<test parameter="[CompteurBoucle]" condition="lowerThan" value="[MaxBoucle]"/>
  	</condition>
<do>

<parameter name="[CompteurBoucle]" operation="add" value="[CompteurBoucle]" value2="1"/>    			


<openConnectionHTTP connectionName="SOAP_Subscription" localHost="[Host-Tester]" remoteURL="http://[Host-Enabler]:[Port-Subscription_Enabler]"/> 


<!-- un nv correlator pour chaque abonne-->
<parameter name="[CorelatorIMSL]" operation="set" value="toto" />
<parameter name="[CorelatorIMSL]" operation="concat" value="[CorelatorIMSL]" value2="[CompteurBoucle]" />


<!-- parameter name="[SubscriberToSubscribe]" operation="set" value="33975630255"/-->
<parameter name="[SubscriberToSubscribe]" operation="set" value="[inviterTab([CompteurBoucle])]"/>
<parameter name="[SubscriberToSubscribe]" operation="concat" value="33"      value2="[SubscriberToSubscribe]" />

<sendRequestHTTP name="Send POST" server="http://[Host-Enabler]:[Port-Subscription_Enabler]" delay="0">

<![CDATA[
POST /north/services/CallNotificationManager HTTP/1.1
Content-Type: text/xml;charset=UTF-8
SOAPAction: ""
User-Agent: IMSLoader
Host: [Host-Tester]
Content-Length: 1194

<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:loc="http://www.csapi.org/schema/parlayx/call_notification/notification_manager/v3_1/local">
<soapenv:Header/>
<soapenv:Body>
<loc:startCallNotification>
<loc:reference>
<endpoint>http://[Host-Tester]:[Port-AS]/mockCallNotification</endpoint>
<interfaceName>CallNotification</interfaceName>
<correlator>[CorelatorIMSL]</correlator>
</loc:reference>
<loc:addresses>sip:+[SubscriberToSubscribe]@[Host-Tester]</loc:addresses>
<loc:criteria>Answer</loc:criteria><loc:criteria>Disconnected</loc:criteria><loc:criteria>CalledNumber</loc:criteria><loc:criteria>NewTerminal</loc:criteria><loc:criteria>TerminalDisconnected</loc:criteria>
<loc:addressDirection>All</loc:addressDirection>
</loc:startCallNotification>
</soapenv:Body>
</soapenv:Envelope>
]]>
	
</sendRequestHTTP>


<receiveResponseHTTP result="200" timeout="5"/>

<!--
<pause name="pause"     seconds="5"  state="true"/>
-->

</do></while>



<closeConnectionHTTP connectionName="SOAP_Subscription"/>

</then></if>

<!--
Notification de FIN de phase d initialisation vers tous les nodes simule et vers le bouchon
-->
<pause name="pause"     seconds="6"  state="true"/>

<parameter name="[test:FIN_Init_Loader_vers_AS]" operation="semaphore.notify" value="1"/>
<parameter name="[test:FIN_Init_Loader_vers_SubsA]" operation="semaphore.notify" value="1"/>
<parameter name="[test:Init_Loader_vers_SubsB]" operation="semaphore.notify" value="1"/>
<parameter name="[test:FIN_Init_Loader_vers_SubsATV]" operation="semaphore.notify" value="1"/>
<parameter name="[test:FIN_Init_Loader_vers_Bouchon]" operation="semaphore.notify" value="1"/>



<!--
SWESWE Fin de phase d abonnement des appelants au service de notification de l Enabler
Execute uniquement la premiere fois
-->

  				               	  		       	       	        
<stats>
	  <counter name="ActiveSession"><increase>1</increase></counter>  	
    <counter name="INVITEout"><increase>1</increase></counter>
</stats>	    	    			
	
<parameter name="[test:indexUserMutex]" operation="semaphore.wait"/>		
<parameter name="[test:indexUser]" operation="add" value="[test:indexUser]" value2="1"/>    			
  <if>
	    <condition>
		<test parameter="[test:indexUser]" condition="greaterThan" value="[RangeNumberUser]"/>       	     
    	    </condition>
    	    <then>
		<parameter name="[test:indexUser]" operation="set" value="0"/>    				    	
	    </then>
	</if>
	

<parameter name="[tempIndexUser]" operation="set" value="[test:indexUser]"/>		
<parameter name="[test:indexUserMutex]" operation="semaphore.notify"/>		

<parameter name="[tempPortRTP]" operation="multiply" value="[tempIndexUser]" value2="2"/>
<parameter name="[portRTP]" operation="add" value="[RangePortRTP-UAC]" value2="[tempPortRTP]"/>    			

<parameter name="[tempIndexUser]" operation="add" value="[RangeIndexUser]" value2="[tempIndexUser]"/>
<parameter name="[inviteeName]" operation="set" value="[inviteeTab([tempIndexUser])]"/>    	
<parameter name="[inviterName]" operation="set" value="[inviterTab([tempIndexUser])]"/>
	
<parameter name="[newFromTag]" operation="identifier" value="newString" value2="10"/>
<parameter name="[newCallId]" operation="identifier" value="nextInteger" value2="10000000"/>
<parameter name="[newCseqNumber]" operation="identifier" value="nextInteger" value2="10000000"/>
<parameter name="[newBranchId]" operation="identifier" value="newString" value2="10"/> 
	
	
	  		
	<sendRequestSIP name="Send INVITE" providerName="provider">
<![CDATA[		
INVITE sip:0[inviteeName]@[Host-Tester]:[Port-Subs_B] SIP/2.0
To: <sip:0[inviteeName]@[Host-Tester]:[Port-Subs_B]>
From: "+33[inviterName]" <sip:+33[inviterName]@[Host-Tester]>;tag=[newFromTag]
Call-ID: [newCallId]-[inviterName]@[Adresse-Tester]
CSeq: [newCseqNumber] INVITE
Max-Forwards: 70
Via: SIP/2.0/UDP [Adresse-Tester];branch=z9hG4bK[newBranchId]
Route: <sip:+33[inviteeName]@[Adresse-Enabler];lr;call=orig>
Route: <sip:+33[inviteeName]@[Host-Tester]:[Port-Subs_B];lr>
Route: <sip:+33[inviteeName]@[Host-Tester]:[Port-Subs_B];lr>
Record-Route: <sip:+33[inviteeName]@[Adresse-Tester];maddr=[Host-Tester];lr>
Contact: <sip:+33[inviterName]@[Adresse-Tester];transport=udp>
Allow: ACK, BYE, CANCEL, INVITE, NOTIFY, REFER, DO, UPDATE, OPTIONS, SUBSCRIBE, INFO
Supported: timer, replaces
P-Asserted-Identity: "+33[inviterName]" <sip:+33[inviterName]@sip.pfdev.fr>
P-Asserted-Identity: tel:+33[inviterName]
P-Charging-Vector: icid-value=ffdd90da03ec4107ba5c96d362dfd;orig-ioi=sip.pfdev.fr
P-Charging-Function-Addresses: ccf="aaa://devitimmm1.sip.pfdev.fr:3868;transport=tcp";ccf="aaa://devitimmm1.sip.pfdev.fr:3868;transport=tcp"
Session-Expires: 86400
Min-SE: 86400
Content-Type: application/sdp
User-Agent: XMLLoader
Content-Length: x

v=0
o=+33[inviterName] 2211961014 2211961014 IN IP4 [Host-Tester]
s=VOIP P160SLD 02.11.08
c=IN IP4 [Host-Tester]
t=0 0
m=audio [portRTP] RTP/AVP 0 18 4
a=rtpmap:0 PCMU/8000/1
a=rtpmap:18 G729/8000/1
a=fmtp:18 annexb=no
a=rtpmap:4 G723/8000/1
a=sendrecv

]]>			
	</sendRequestSIP>
	             	        	        	        
</scenario>
