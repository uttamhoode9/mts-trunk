<?xml version="1.0" encoding="UTF-8"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->

<scenario>

	<stats>
		<counter name="ActiveSession" shortDesc="Act Sess" description="Active session" longDesc="Count of active sessions"/>	
		<counter name="INVITEout" shortDesc="INV_out" description="INVITE outgoing" longDesc="Send an outgoing INVITE"/>        	
		<counter name="INVITESessAudit" shortDesc="INV_audit" description="INVITE Session Audit" longDesc="INVITE send for the Session Audit"/>   	
		<counter name="INVITE2xxin" shortDesc="INV2xx_in" description="INVITE/2xx incoming" longDesc="Receive an incoming INVITE/2xx OK"/>        
		<counter name="ACKout" shortDesc="ACK_out" description="ACK outgoing" longDesc="Send an outgoing ACK"/>        	   
		<counter name="BYEout" shortDesc="BYE_out" description="BYE outgoing" longDesc="Send an outgoing BYE"/>        	   		
		<counter name="BYExxxin" shortDesc="BYExxx_in" description="BYE/xxx incoming" longDesc="Receive an incoming BYE/XXX OK"/>			
		<counter name="INVITElost" shortDesc="INV_lost" description="Lost INVITE" longDesc="INVITE send but not received"/>
		<counter name="ACKlost" shortDesc="ACK_lost" description="Lost ACK" longDesc="ACK send but not received"/>        		
		<counter name="BYElost" shortDesc="BYE_lost" description="Lost BYE" longDesc="BYE send but not received"/>			
	</stats>

	<createListenpointSIP name="provider" localHost="[IMSLoader-SIP-Host]" localPort="[IMSLoader-SIP-Port]" transport="UDP"/>

	<parameter name="[indexUser]" operation="set" value="0"/>    			

	<!-- calculate the range of user from the csv files -->
	<parameter name="[RangeNumberUser]" operation="list.size" value="[inviteeTab]"/>    		
	<parameter name="[TempRangeNumberUser]" operation="list.size" value="[inviterTab]"/>    		
	<if>
		<condition>
			<test parameter="[TempRangeNumberUser]" condition="number.lowerThan" value="[RangeNumberUser]"/>
		</condition>
		<then>
			<parameter name="[RangeNumberUser]" operation="set" value="[TempRangeNumberUser]"/>
		</then>
	</if>

	<parameter name="[RangeNumberUser]" operation="number.substract" value="[RangeNumberUser]" value2="1"/>

	<!-- start main loop -->
	<label name="begin"/>
	
	<parameter name="[received]" operation="set" value="false"/>		
	<receiveMessageSIP name="wait_SIP_request" timeout="[timeoutResponder]" failedOnTimeout="false">
		<parameter name="[received]"		operation="set" value="true"/>	
		<parameter name="[lastMethod]"		operation="protocol.setFromMessage" value="message:type"/>	
		<parameter name="[lastIsRequest]"	operation="protocol.setFromMessage" value="message:request"/>  		
		<parameter name="[lastResult]"		operation="protocol.setFromMessage" value="message:result"/>  				  	
		<parameter name="[lastTo]"			operation="protocol.setFromMessage" value="header:To"/>
		<parameter name="[lastToUser]"		operation="protocol.setFromMessage" value="header:To:Address:URI:User"/>  	
		<parameter name="[lastToURI]"		operation="protocol.setFromMessage" value="header:To:Address:URI"/>  	
	  	<parameter name="[lastFrom]"		operation="protocol.setFromMessage" value="header:From"/>  	
		<parameter name="[lastFromUser]"	operation="protocol.setFromMessage" value="header:From:Address:URI:User"/>	
	  	<parameter name="[lastToTag]"		operation="protocol.setFromMessage" value="header:To:parameter:tag"/>  	  	
	  	<parameter name="[lastCallId]"		operation="protocol.setFromMessage" value="header:Call-ID"/>		  		  	
	  	<parameter name="[lastCSeq]"		operation="protocol.setFromMessage" value="header:CSeq"/>
		<parameter name="[lastCSeqNumber]"	operation="protocol.setFromMessage" value="header:CSeq:Number"/>   	  	
	  	<parameter name="[lastVia]"			operation="protocol.setFromMessage" value="header:Via"/>  
		<parameter name="[lastViaWlsscid]"	operation="protocol.setFromMessage" value="header:Via:parameter:wlsscid"/>  		  	
		<parameter name="[lastViaBranch]"	operation="protocol.setFromMessage" value="header:Via:parameter:branch"/>  		  	
		<parameter name="[lastRouteUser]"	operation="protocol.setFromMessage" value="header:Route:Address:URI:User"/>
		<parameter name="[lastContactURI]"	operation="protocol.setFromMessage" value="header:Contact:Address:URI"/>
	  	<parameter name="[lastPAssertedIdentity]"	operation="protocol.setFromMessage" value="header:P-Asserted-Identity"/>		  		  
	  	<parameter name="[lastMessage]"		operation="protocol.setFromMessage" value="message"/>		  		  		  		  	
	</receiveMessageSIP>

	<if>
		<condition>
			<test parameter="[received]" condition="string.equals" value="false"/>		  		  		    		  		  	
		</condition>
		<then>
			<exit name="exit" failed="false"/>
		</then>	    
	</if>
	
	<!-- receive initial INVITE request message -->
	<if>
		<condition>
			<test parameter="[lastIsRequest]" condition="string.equals" value="true"/>		  		  		    
			<test parameter="[lastMethod]" condition="string.equals" value="INVITE"/>		  		  	
			<test parameter="[lastToTag]" condition="list.isEmpty"/>
		</condition>
		<then>
			<goto  name="goto_recINVITE" label="recINVITE" state="true"/>	    	
		</then>
	</if>

	<!-- receive session audit INVITE request message -->
	<if>
		<condition>
			<test parameter="[lastIsRequest]" condition="string.equals" value="true"/>		  		  		    
			<test parameter="[lastMethod]" condition="string.equals" value="INVITE"/>
			<not><test parameter="[lastToTag]" condition="list.isEmpty"/></not>		  		  	
		</condition>
		<then>
			<goto  name="goto_recINVITE" label="recINVITESessAudit" state="true"/>	    	
		</then>
	</if>
	
	<!-- receive initial ACK request message -->
	<if>
		<condition>
			<test parameter="[lastIsRequest]" condition="string.equals" value="true"/>		  		  		    
			<test parameter="[lastMethod]" condition="string.equals" value="ACK"/>
			<not><test parameter="[Context_SessAudit_[lastCallId]]" condition="list.exists"/></not>
		</condition>
		<then>
			<stats>
				<counter name="ACKlost"><decrease>1</decrease></counter>
			</stats>	    	    	
			<goto  name="goto_begin" label="begin" state="true"/>	    	    		
		</then>
	</if>

	<!-- receive session audit ACK request message -->
	<if>
		<condition>
			<test parameter="[lastIsRequest]" condition="string.equals" value="true"/>		  		  		    
			<test parameter="[lastMethod]" condition="string.equals" value="ACK"/>
			<test parameter="[Context_SessAudit_[lastCallId]]" condition="list.exists"/>
		</condition>
		<then>
			<goto  name="goto_begin" label="begin" state="true"/>	    	    		
		</then>
	</if>

	<!-- receive final [2-6]XX (exclude provisional one) response message for the INVITE request message -->
	<if>
		<condition>
			<test parameter="[lastIsRequest]" condition="string.equals" value="false"/>		  		  		    		
			<test parameter="[lastMethod]" condition="string.equals" value="INVITE"/>
			<test parameter="[lastResult]" condition="number.greaterEqualThan" value="200"/>	    		    	
		</condition>
		<then>
			<goto  name="goto_Request" label="recINVITE23456xx" state="true"/>	    	
		</then>
	</if>

	<!-- receive OTHER request message (BYE, CANCEL, ...) -->
	<if>
		<condition>		  		  		    	    
			<test parameter="[lastIsRequest]" condition="string.equals" value="true"/>	    	  		  		    
		</condition>
		<then>
			<goto  name="goto_recOTHERS" label="recOTHERS" state="true"/>	    	
		</then>
	</if>

	<!-- receive response message for the OTHER request message (BYE, CANCEL, ...) -->
	<if>
		<condition>		  		  		    
			<test parameter="[lastIsRequest]" condition="string.equals" value="false"/>    		  		  		    		
		</condition>
		<then>
			<goto  name="goto_recOTHERSxxx" label="recOTHERSxxx" state="true"/>	    	
		</then>
	</if>

	<goto  name="goto_begin" label="begin" state="true"/>	    	                        
	<!-- end main loop -->	
		
	<!-- jump for receive initial INVITE request message -->
	<label name="recINVITE"/>	
	
	<stats>
		<counter name="INVITElost"><decrease>1</decrease></counter>
	</stats>	    	    	

	<parameter name="[newToTag]" operation="string.random" value="10"/>
  	
	<sendMessageSIP name="Send 100 Trying" delay="0" listenpoint="provider" remoteHost="[AS-SIP-Host]" remotePort="[AS-SIP-Port]">
<![CDATA[
SIP/2.0 100 Trying
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [lastCSeq]
Via: [lastVia]
Content-Length: 0

]]>
	</sendMessageSIP>

	<sendMessageSIP name="Send 180 Ringing" delay="[TryingDuration]" listenpoint="provider" remoteHost="[AS-SIP-Host]" remotePort="[AS-SIP-Port]">
<![CDATA[
SIP/2.0 180 Ringing
To: <[lastTo]>;tag=[newToTag]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [lastCSeq]
Content-Length: 0
Via: SIP/2.0/UDP [IMSLoader-SIP-Adresse(0)];wlsscid=[lastViaWlsscid(0)];maddr=[IMSLoader-SIP-Host(0)];branch=[lastViaBranch]
Record-Route: <sip:3Zqkv7%0Baqqhqaaaadysip%3A%2B33975632351%40[userDomain]@[IMSLoader-SIP-Adresse];maddr=[IMSLoader-SIP-Host];lr>
Contact: <sip:[lastToUser(0)]-tb74j8hs10ffe@[IMSLoader-SIP-Adresse];transport=udp>
Allow: INVITE, ACK, CANCEL, BYE, NOTIFY, OPTIONS, REFER, UPDATE
P-Asserted-Identity: [lastPAssertedIdentity]
User-Agent: IMSLoader V4.6.1
P-Charging-Vector: icid-value=eqrc7g46o1823o87ihckjqk63rr4nida92k2jr86ehc03n46k9cs2pc6o9c6jp07o1g2jr86ehc03n46k9cs2pc6o1;orig-ioi=[userDomain];term-ioi=[userDomain]
P-Charging-Function-Addresses: ccf="aaa://pcfa2.[userDomain]:3868;transport=tcp"
]]>			
	</sendMessageSIP>


	<parameter name="[indexUser]" operation="number.add" value="[indexUser]" value2="1"/>    			
	<if>
		<condition>
			<test parameter="[indexUser]" condition="number.greaterThan" value="[RangeNumberUser]"/>       	     
		</condition>
		<then>
			<parameter name="[indexUser]" operation="set" value="0"/>    				    	
		</then>
	</if>
	
	<parameter name="[tempPortRTP]" operation="number.multiply" value="[indexUser]" value2="2"/>
	<parameter name="[portRTP]" operation="number.add" value="[RangePortRTP-UAS]" value2="[tempPortRTP]"/>    			
  
	<sendMessageSIP name="Send 200 OK" delay="[RingingDuration]" listenpoint="provider" remoteHost="[AS-SIP-Host]" remotePort="[AS-SIP-Port]">
<![CDATA[
SIP/2.0 200 OK
To: <[lastTo]>;tag=[newToTag]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [lastCSeq]
Content-Length: x
Via: SIP/2.0/UDP [IMSLoader-SIP-Adresse(0)];wlsscid=[lastViaWlsscid(0)];maddr=[IMSLoader-SIP-Host(0)];branch=[lastViaBranch]
Record-Route: <sip:3Zqkv7%0Baqqhqaaaadysip%3A%2B33975632351%40[userDomain]@[IMSLoader-SIP-Adresse];maddr=[IMSLoader-SIP-Host];lr>
Contact: <sip:[lastToUser(0)]-tb74j8hs10ffe@[IMSLoader-SIP-Adresse];transport=udp>
Content-Type: application/sdp
Allow: INVITE, ACK, CANCEL, BYE, NOTIFY, OPTIONS, REFER, UPDATE
P-Asserted-Identity: sip:[lastToUser]@[userDomain]
P-Asserted-Identity: tel:[lastToUser]
User-Agent: IMSLoader V4.6.1
P-Charging-Vector: icid-value=eqrc7g46o1823o87ihckjqk63rr4nida92k2jr86ehc03n46k9cs2pc6o9c6jp07o1g2jr86ehc03n46k9cs2pc6o1;term-ioi=[userDomain]
P-Charging-Function-Addresses: ccf="aaa://pcfa2.[userDomain]:3868;transport=tcp"

v=0
o=[lastToUser] 2211961014 2211961014 IN IP4 [IMSLoader-SIP-Host]
s=VOIP P160SLD 02.11.08
c=IN IP4 [IMSLoader-SIP-Host]
t=0 0
m=audio [portRTP] RTP/AVP 0 18 4
a=rtpmap:0 PCMU/8000/1
a=rtpmap:18 G729/8000/1
a=fmtp:18 annexb=no
a=rtpmap:4 G723/8000/1
a=sendrecv
			
]]>			
	</sendMessageSIP>

	<goto  name="goto_begin" label="begin" state="true"/>	    	
	<!-- end main loop -->
	
	<!-- jump for receive session audit INVITE request message -->
	<label name="recINVITESessAudit"/>	
	  
	<parameter name="Context_SessAudit_[lastCallId]" operation="list.set" value="true"/>
	<stats>
		<counter name="INVITESessAudit"><increase>1</increase></counter>
	</stats>	    	    	
		  	  
	<sendMessageSIP name="Send 200 OK" listenpoint="provider" remoteHost="[AS-SIP-Host]" remotePort="[AS-SIP-Port]">
<![CDATA[
SIP/2.0 200 OK
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [lastCSeq]
Content-Length: x
Via: [lastVia]
Record-Route: <sip:3Zqkv7%0BaGqiqU5TQnysip%3A+33975621722%40[userDomain]@[IMSLoader-SIP-Adresse];maddr=[IMSLoader-SIP-Adresse];lr>
Contact: <sip:[lastToUser(0)]@[IMSLoader-SIP-Adresse]>
Content-Type: application/sdp
Allow: ACK, BYE, CANCEL, INVITE, NOTIFY, REFER, DO, UPDATE, OPTIONS, SUBSCRIBE, INFO
P-Asserted-Identity: [lastPAssertedIdentity]
P-Charging-Vector: icid-value=eqrc7g46o1823o87ihckjqk63rr4nida92k2jr86ehc03n46k9cs2pc6o9c6jp07o1g2jr86ehc03n46k9cs2pc6o1;term-ioi=[userDomain]
P-Charging-Function-Addresses: ccf="aaa://pcfa1.[userDomain]:3868;transport=tcp"

v=0
o=[lastToUser] 2211961014 2211961014 IN IP4 [IMSLoader-SIP-Host]
s=VOIP P160SLD 02.11.08
c=IN IP4 [IMSLoader-SIP-Host]
t=0 0
m=audio [portRTP] RTP/AVP 0 18 4
a=rtpmap:0 PCMU/8000/1
a=rtpmap:18 G729/8000/1
a=fmtp:18 annexb=no
a=rtpmap:4 G723/8000/1
a=sendrecv
			
]]>			
	</sendMessageSIP>

	<goto  name="goto_begin" label="begin" state="true"/>	    	
	<!-- end main loop -->
	
	<!-- jump for receive final [2-6]XX (exclude provisional one) response message for the INVITE request message -->	
	<label name="recINVITE23456xx"/>	

	<if>
		<condition>
			<test parameter="[lastResult]" condition="number.greaterEqualThan" value="300"/>	    		    	
		</condition>
		<then>
			<log type="Main" level="WARN">
<![CDATA[	    	
StatusCode = #[lastResult] for the call from "[lastFromUser]" to "[lastToUser]" 
message : [lastMessage]
]]>		
			</log>
		</then>
	</if>
	
	<stats>
		<counter name="ACKout"><increase>1</increase></counter>
		<counter name="ACKlost"><increase>1</increase></counter>
	</stats>	    	    			
    
	<parameter name="[newBranchId]" operation="string.random" value="10"/>

	<if>
		<condition>
			<test parameter="[lastContactURI]" condition="list.isempty"/>
		</condition>
		<then>
			<parameter name="[lastContactURI]" operation="set" value="[lastToURI]"/>
		</then>
	</if>


      	
	<sendMessageSIP name="Send ACK" delay="0" listenpoint="provider" remoteHost="[AS-SIP-Host]" remotePort="[AS-SIP-Port]">
<![CDATA[
ACK [lastContactURI] SIP/2.0
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [lastCSeqNumber] ACK
Max-Forwards: 8
Via: SIP/2.0/UDP [IMSLoader-SIP-Adresse];branch=z9hG4bK[newBranchId]
Contact: <sip:[IMSLoader-SIP-Adresse]>
User-Agent: XMLLoader
Content-Length: 0

]]>
	</sendMessageSIP>

	<if>
		<condition>
			<test parameter="[lastResult]" condition="string.matches" value="[3-9][0-9][0-9]"/>	    		    	
		</condition>
		<then>
			<stats>
				<counter name="ActiveSession"><decrease>1</decrease></counter>  	
			</stats>	    	    		  
			<goto  name="goto_begin" label="begin" state="true"/>	    	                
		</then>
	</if>

	<stats>
		<counter name="INVITE2xxin"><increase>1</increase></counter>  	
		<counter name="BYEout"><increase>1</increase></counter>
		<counter name="BYElost"><increase>1</increase></counter>
	</stats>	    	    			

	<parameter name="[newBranchId]" operation="string.random" value="10"/>
	<parameter name="[newCseqNumber]" operation="number.add" value="[lastCSeqNumber]" value2="1"/>

	<if>
		<condition>
			<test parameter="[lastContactURI]" condition="list.isempty"/>
		</condition>
		<then>
			<parameter name="[lastContactURI]" operation="set" value="[lastToURI]"/>
		</then>
	</if>

    
	<sendMessageSIP name="Send BYE" delay="[CallDuration]" listenpoint="provider" remoteHost="[AS-SIP-Host]" remotePort="[AS-SIP-Port]"> 
<![CDATA[
BYE [lastContactURI] SIP/2.0
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [newCseqNumber] BYE
Max-Forwards: 8
Via: SIP/2.0/UDP [IMSLoader-SIP-Adresse];branch=z9hG4bK[newBranchId]
Contact: <sip:[IMSLoader-SIP-Adresse]>
User-Agent: XMLLoader
Content-Length: 0

]]>
	</sendMessageSIP>
                
	<goto  name="goto_begin" label="begin" state="true"/>	    	                
	<!-- end main loop -->
	
	<!-- jump for receive OTHER request message (BYE, CANCEL, ...) -->
	<label name="recOTHERS"/>	

	<if>
		<condition>
			<test parameter="[lastMethod]" condition="string.equals" value="BYE"/>
		</condition>
		<then>
			<stats>
				<counter name="BYElost"><decrease>1</decrease></counter>
			</stats>	    	    	
		</then>
	</if>
  
	<parameter name="[newToTag]" operation="string.random" value="10"/>
    	
	<sendMessageSIP name="Send 200 OK" delay="0" listenpoint="provider" remoteHost="[AS-SIP-Host]" remotePort="[AS-SIP-Port]">
<![CDATA[
SIP/2.0 200 OK
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [lastCSeq]
Via: [lastVia]
Content-Length: 0

]]>
	</sendMessageSIP>

	<goto  name="goto_begin" label="begin" state="true"/>	    	

	<!-- receive response message for the OTHER request message (BYE, CANCEL, ...) -->
	<label name="recOTHERSxxx"/>	

	<if>
		<condition>
			<test parameter="[lastMethod]" condition="string.equals" value="BYE"/>
		</condition>
		<then>
			<stats>
				<counter name="ActiveSession"><decrease>1</decrease></counter>  	
				<counter name="BYExxxin"><increase>1</increase></counter>
			</stats>	    	    	
		</then>
	</if>
	
	<goto  name="goto_begin" label="begin" state="true"/>	    	                	        	        
	<!-- end main loop -->
</scenario>
