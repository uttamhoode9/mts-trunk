<!--
To use this part of XML code in a scenario,
- input parameters must be defined and setted locally (by the caller scenario).
- output parameters may be used in the scenario after the "call".

Input parameters :
- [RADIUSsocketOpen]   : 
- [source_ip]          : 
- [nas_port]           : 
- [secret]             : 
- [radius_ip]          : 
- [radius_auth_port]   : 
- [msisdn]             : 
- [radius_acct_port]   : 
- [nas_ip_address]     : 
- [calling_station_id] : 
- [called_station_id]  : 
- [3gpp_charging_id]   : 
- [3gpp_sgsn_address]  : 
- [nas_identifier]     : 
- [HTTPconnectionOpen] : 
- [protocol]           : 
- [server]             : 
- [http_port]          : 
- [resources_size]     : 
- [resources]          : 

Output parameters :
- [RADIUSsocketName]   : 
- [RADIUSsocketOpen]   : 
- [HTTPconnectionName] : 
- [HTTPconnectionOpen] : 

-->

      <!-- open RADIUS Connection -->
      <parameter name="[RADIUSsocketName]" operation="set" value="client_[testcase:index]_http"/>
      <openSocketRadius socketName="[RADIUSsocketName]" localHost="[source_ip]" localPort="[nas_port]" secret="[secret]"/>
      <parameter name="[RADIUSsocketOpen]" operation="set" value="true"/>

      <!-- send Radius Access-Request -->
      <sendRequestRadius socketName="[RADIUSsocketName]" remoteHost="[radius_host_http]" remotePort="[radius_port_http_auth]">
        <!-- Header -->
        <header code="1"/>

        <!-- AVPs -->
        <!-- User-Name (1) -->
        <avp code="1" value="[msisdn]"/>

        <!-- User-Password (2) -->
        <avp code="2" value="User-Password"/>

        <!-- Nas-IP-Address (4) -->
        <avp code="4" value="[source_ip]"/>

        <!-- Code: Nas-Port (5) -->
        <avp code="5" value="[nas_port]"/>

        <!-- Calling-Station-Id (31) -->
        <avp code="31" value=""/>

        <!-- Called-Station-Id (30) -->
        <avp code="30" value=""/>
      </sendRequestRadius>
      <receiveResponseRadius socketName="[RADIUSsocketName]"/>

      <!--pause name="temps d'attente" milliseconds="50" /-->

      <!-- send Radius Accounting-Request Start -->
      <parameter name="[timestamp]" operation="setFromSystem" value="Timestamp" value2="1970"/>
      <parameter name="[timestamp]" operation="divide" value="[timestamp]" value2="1000"/>
      <sendRequestRadius socketName="[RADIUSsocketName]" remoteHost="[radius_host_http]" remotePort="[radius_port_http_acct]">
        <!-- Header -->
        <header code="4"/>

        <!-- AVPs -->
        <!--Acct-Status-Type(40) -->
        <avp code="40" value="Start"/>

        <!-- User-Name (1) -->
        <avp code="1" value="[msisdn]"/>

        <!-- NAS-IP-Address(4) -->
        <avp code="4" value="[nas_ip_address]"/>

        <!-- NAS-Port(5) -->
        <avp code="5" value="[nas_port]"/>

        <!-- Framed-IP-Address(8) -->
        <avp code="8" value="[source_ip]"/>

        <!-- Calling-Station-Id(31) -->
        <avp code="31" value="[calling_station_id]"/>

        <!-- Called-Station-Id(30) -->
        <avp code="30" value="[called_station_id]"/>

        <!-- Acct-Session-Id(44) -->
        <avp code="44" value="[Acct-Session-Id]"/>

        <!-- Event-Timestamp(55) -->
        <avp code="55" value="[timestamp]"/>

        <!-- Framed-Protocol(7) -->
        <avp code="7" value="GPRS-PDP-Context"/>

        <!-- Vendor-Specific(26) 3GPP-Charging-ID -->
        <avp code="26" value="3GPP">
          <avp code="2" value="[3gpp_charging_id]"/>
        </avp>

        <!-- Vendor-Specific(26) 3GPP-SGSN-Address -->
        <avp code="26" value="3GPP">
          <avp code="6" value="[3gpp_sgsn_address]"/>
        </avp>

        <!-- NAS-Identifier(32) -->
        <avp code="32" value="[nas_identifier]"/>
      </sendRequestRadius>
      <receiveResponseRadius socketName="[RADIUSsocketName]"/>
      <!--pause name="temps d'attente" milliseconds="10" /-->

      <!-- Changement de socket pour browsing -->
      <!-- open HTTP Connection -->
      <parameter name="[HTTPconnectionName]" operation="set" value="connection_http_[testcase:index]"/>
      <openConnectionHTTP connectionName="[HTTPconnectionName]" localHost="[source_ip]" remoteURL="[protocol]://[server]:[http_port]"/>
      <parameter name="[HTTPconnectionOpen]" operation="set" value="true"/>
    
      <parameter name="[j]" operation="set" value="0"/>
      <parameter name="[close_http]" operation="set" value="true"/>
      <while>
        <condition>
          <test parameter="[j]" condition="lowerThan" value="[resources_size]"/>
        </condition>
        <do>
          <!-- send HTTP Request -->
          <parameter name="[resource]" operation="set" value="[resources([j])]"/>
          <parameter name="[uid]" operation="identifier" value="nextInteger" value2=""/>
          <sendRequestHTTP connectionName="[HTTPconnectionName]">
<![CDATA[GET [resource] HTTP/1.1
Host: [server]
Accept-charset: text/html
Content-Type: text/html
Content-Encoding: utf-8;iso-8859
User-Agent: XMLLoader
Test-Header: [uid]
]]>
          </sendRequestHTTP>
          <receiveResponseHTTP>
              <parameter name="[result]" operation="setFromMessage" value="message:result" />
          </receiveResponseHTTP>
          
          <if>
            <condition>
                <test parameter="[result]" condition="equals" value="302" />
            </condition>
            <then>
                <parameter name="[j]" operation="set" value="[resources_size]"/>
                <parameter name="[close_http]" operation="set" value="false"/>
            </then>
            <else>
                <!-- Next HTTP resource -->
                <parameter name="[j]" operation="add" value="[j]" value2="1"/>
            </else>
          </if>
          
        </do>
      </while>

      <if>
        <condition>
            <test parameter="[close_http]" condition="equals" value="true" />
        </condition>
        <then>
            <!-- close HTTP Connection -->
            <closeConnectionHTTP connectionName="[HTTPconnectionName]"/>
            <parameter name="[HTTPconnectionOpen]" operation="set" value="false"/>
        </then>
      </if>
      

      <!-- send Radius Accounting-Request Stop -->
      <parameter name="[timestamp]" operation="setFromSystem" value="Timestamp" value2="1970"/>
      <parameter name="[timestamp]" operation="divide" value="[timestamp]" value2="1000"/>
      <sendRequestRadius socketName="[RADIUSsocketName]" remoteHost="[radius_host_http]" remotePort="[radius_port_http_acct]">
        <!-- Header -->
        <header code="4"/>

        <!-- AVPs -->
        <!--Acct-Status-Type(40) -->
        <avp code="40" value="Stop"/>

        <!-- User-Name (1) -->
        <avp code="1" value="[msisdn]"/>

        <!-- NAS-IP-Address(4) -->
        <avp code="4" value="[nas_ip_address]"/>

        <!-- NAS-Port(5) -->
        <avp code="5" value="[nas_port]"/>

        <!-- Framed-IP-Address(8) -->
        <avp code="8" value="[source_ip]"/>

        <!-- Calling-Station-Id(31) -->
        <avp code="31" value="[calling_station_id]"/>

        <!-- Called-Station-Id(30) -->
        <avp code="30" value="[called_station_id]"/>

        <!-- Acct-Session-Id(44) -->
        <avp code="44" value="[Acct-Session-Id]"/>

        <!-- Event-Timestamp(55) -->
        <avp code="55" value="[timestamp]"/>

        <!-- Framed-Protocol(7) -->
        <avp code="7" value="GPRS-PDP-Context"/>

        <!-- Vendor-Specific(26) 3GPP-Charging-ID -->
        <avp code="26" value="3GPP">
          <avp code="2" value="[3gpp_charging_id]"/>
        </avp>

        <!-- Vendor-Specific(26) 3GPP-SGSN-Address -->
        <avp code="26" value="3GPP">
          <avp code="6" value="[3gpp_sgsn_address]"/>
        </avp>

        <!-- NAS-Identifier(32) -->
        <avp code="32" value="[nas_identifier]"/>
      </sendRequestRadius>
      <receiveResponseRadius socketName="[RADIUSsocketName]"/>

      <!-- close RADIUS Connection -->
      <closeSocketRadius socketName="[RADIUSsocketName]"/>
      <parameter name="[RADIUSsocketOpen]" operation="set" value="false"/>
