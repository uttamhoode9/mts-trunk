##########################################################################################################
# Http Protocol Config file                                                                              #
##########################################################################################################

#####################################################
# Common settings                                   #
#####################################################


#####################################################
# Http server                                       #
#####################################################

#
# Http server port
#
server.HTTP_PORT=8000

#
# Https server port
#
server.HTTPS_PORT=443

#####################################################
# Http client                                       #
#####################################################

#
# Default protocol to use if not specified into the server attribute
# Possible values : http, https
#
client.DEFAULT_PROTOCOL=https

#
# Default Http server port
#
client.DEFAULT_HTTP_PORT=8000

#
# Default Https client port
#
client.DEFAULT_HTTPS_PORT=443

#######################################################
# route
#######################################################

# The tool automatically routes a received response to the scenario which has sent the corresponding request.
# The transactionID is used internally to make the corresponding between requests and responses.
# This parameter is used to get the transactionID from the message given a list of paths (separated 
# by ',' character). The paths are defined with the setFromMessage operation and are of course 
# protocol dependant
# type string
route.TRANSACTION_ID = 

# The tool automatically routes a received request to the scenario given in the 'destScenario' parameter 
# of the sending tag (sendRequestXXX) in the same testcase. In this case, the tool is simulating a 
# client and server at the same time.
# The messageID is used internally to make the corresponding between requests which are sent by 
# the tool and the same requests the tool has received 
# This parameter is used to get the messageID from the message given a list of paths (separated 
# by ',' character). The path are defined with the setFromMessage operation and are protocol of 
# course dependant
# type string
route.MESSAGE_ID = 

# The tool routes a received request to the scenario given by its name. In this case, the tool is 
# simulating a pure server.
# This parameter is used to get the scenario name as mentioned in the test file from the message 
# given a list of paths (separated by ',' character). The path are defined with the setFromMessage 
# operation and are of course protocol dependant
# type string
route.SCENARIO_NAME = message:protocol

#######################################################

# Time of life the messages and transactions (in s)
MESSAGE_TIME_LIFE = 30


#####################################################
# Certificate for Https                             #
#####################################################

#
# Path to the certificate
#
cert.DIRECTORY=../conf/certificate/mySrvKeystore

#
# Password of the certificate (empty = no password)
#
cert.PASSWORD=password

#
# Algorithm used
#
cert.ALGORITHM=SunX509

#
# SSL version
#
cert.SSL_VERSION=SSLv3
