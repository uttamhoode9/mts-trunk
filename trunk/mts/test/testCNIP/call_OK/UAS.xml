<?xml version="1.0" encoding="UTF-8"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->

<scenario>

  <receiveMessageSIP name="Wait INVITE" type="INVITE">
    <parameter name="[lastTo]" operation="protocol.setFromMessage" value="header:To"/>       
	<parameter name="[lastToUser]" operation="protocol.setFromMessage" value="header:To:Address:URI:User"/>	
    <parameter name="[lastFrom]" operation="protocol.setFromMessage" value="header:From"/>   
	<parameter name="[lastFromUser]" operation="protocol.setFromMessage" value="header:From:Address:URI:User"/>	
    <parameter name="[lastCallId]" operation="protocol.setFromMessage" value="header:Call-ID"/>
    <parameter name="[lastCseq]" operation="protocol.setFromMessage" value="header:CSeq"/>
    <parameter name="[lastVia]" operation="protocol.setFromMessage" value="header:Via"/>
    <parameter name="[contact]" operation="protocol.setFromMessage" value="header:Contact"/>
    <parameter name="[MaxForwards]" operation="protocol.setFromMessage" value="header:Max-Forwards"/>
    <parameter name="[localTag]" operation="string.random" value="10"/>
    <parameter name="[RecordRoute]" operation="protocol.setFromMessage" value="header:Record-Route"/>              
	<parameter name="[lastPAssertedIdentity]" operation="protocol.setFromMessage" value="header:P-Asserted-Identity"/>
  </receiveMessageSIP>

  <!-- test si le display name du header From est celui attendu -->
  <parameter name="[lastFromDisplayName]" operation="protocol.setFromAddress" value="[lastFrom]" value2="displayName"/>	
  <test parameter="[lastFromDisplayName]" condition="string.equals" value="user[inviterName]"/>

  <sendMessageSIP name="Send 100 Trying" remoteHost="[Host-Server]" remotePort="[Port-Server]">
<![CDATA[
SIP/2.0 100 Trying
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [lastCseq]
Via: [lastVia]
Content-Length: 0

]]>			
  </sendMessageSIP>

  <pause name="Pause before 180 OK" seconds="0.1"/>
  
  <parameter name="[newToTag]" operation="string.random" value="10"/>
  <sendMessageSIP name="Send 180 Ringing" remoteHost="[Host-Server]" remotePort="[Port-Server]">
<![CDATA[
SIP/2.0 180 Ringing
To: [lastTo];tag=[newToTag]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [lastCseq]
Content-Length: 0
Via: [lastVia]
Record-Route: <sip:3Zqkv7%0BaGqiqU5TPKqsip%3A+33975621722%40sip.mobistar.com@scscf.sip.mobistar.fr:7050;lr;maddr=[Address-Tester]>
Record-Route: <sip:3Zqkv7%0BaGqiqU5TPL4sip%3A+33975621721%40sip.mobistar.com@scscf.sip.mobistar.fr:7070;lr;maddr=[Address-Tester]>
Contact: <sip:[lastFromUser(0)]@[Address-Server]>
Allow: ACK, BYE, CANCEL, INFO, INVITE, OPTIONS, PRACK, REFER, NOTIFY, UPDATE
P-Asserted-Identity: [lastPAssertedIdentity]
P-Charging-Vector: icid-value=eqrc7g46o1823o87ihckjqk63rr4nida92k2jr86ehc03n46k9cs2pc6o9c6jp07o1g2jr86ehc03n46k9cs2pc6o1;orig-ioi=sip.mobistar.fr;term-ioi=sip.mobistar.fr
P-Charging-Function-Addresses: ccf="aaa://pcfa2.sip.mobistar.fr:3868;transport=tcp"
]]>
  </sendMessageSIP>

  <pause name="Pause before 200 OK" seconds="0.0"/>
  
  <sendMessageSIP name="Send 200 OK" remoteHost="[Host-Server]" remotePort="[Port-Server]">
<![CDATA[
SIP/2.0 200 OK
To: [lastTo];tag=[newToTag]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [lastCseq]
Content-Length: x
Via: [lastVia]
Record-Route: <sip:3Zqkv7%0BaGqiqU5TQnysip%3A+33975621722%40sip.mobistar.com@scscf.sip.mobistar.fr:7070;maddr=[Address-Tester];lr>
Contact: <sip:[lastFromUser(0)]@[Address-Server]>
Content-Type: application/sdp
Allow: ACK, BYE, CANCEL, INVITE, NOTIFY, REFER, DO, UPDATE, OPTIONS, SUBSCRIBE, INFO
Require: timer
Supported: timer, replaces
P-Asserted-Identity: [lastPAssertedIdentity]
Session-Expires: 86400;refresher=uac
P-Charging-Vector: icid-value=eqrc7g46o1823o87ihckjqk63rr4nida92k2jr86ehc03n46k9cs2pc6o9c6jp07o1g2jr86ehc03n46k9cs2pc6o1;orig-ioi=sip.mobistar.fr;term-ioi=sip.mobistar.fr
P-Charging-Function-Addresses: ccf="aaa://pcfa1.sip.mobistar.fr:3868;transport=tcp"

v=0
o=[lastToUser] 2211961014 2211961014 IN IP4 [Host-Tester]
s=VOIP P160SLD 02.11.08
c=IN IP4 [Host-Tester]
t=0 0
m=audio 10000 RTP/AVP 0 18 4
a=rtpmap:0 PCMU/8000/1
a=rtpmap:18 G729/8000/1
a=fmtp:18 annexb=no
a=rtpmap:4 G723/8000/1
a=sendrecv			
]]>
  </sendMessageSIP>

  <receiveMessageSIP name="Wait ACK" request="true" type="ACK">
  </receiveMessageSIP>

  <receiveMessageSIP name="Wait BYE" request="true" type="BYE">
    <parameter name="[lastTo]" operation="protocol.setFromMessage" value="header:To"/>         
    <parameter name="[lastFrom]" operation="protocol.setFromMessage" value="header:From"/>       
    <parameter name="[lastCallId]" operation="protocol.setFromMessage" value="header:Call-ID"/>          
    <parameter name="[lastCseq]" operation="protocol.setFromMessage" value="header:CSeq"/>       
    <parameter name="[lastVia]" operation="protocol.setFromMessage" value="header:Via"/> 
  </receiveMessageSIP>
  
  <sendMessageSIP name="Send 200 OK" remoteHost="[Host-Server]" remotePort="[Port-Server]">
<![CDATA[
SIP/2.0 200 OK
To: [lastTo]
From: [lastFrom]
Call-ID: [lastCallId]
CSeq: [lastCseq]
Via: [lastVia]
Content-Length: 0
]]>
  </sendMessageSIP>

</scenario>
