<?xml version="1.0" encoding="UTF-8"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->

<scenario>

	<createListenpointRTPFLOW name="invitee" localHost="[remoteHostRTP(0)]" localPort="[remotePortRTP]" />

	<parameter name="[testcase:SEM1]" operation="system.semaphorenotify" />
			  
    <receiveMessageRTPFLOW listenpoint="invitee" type="PCMA:8" timeout="30">    
        <parameter name="[mark]" operation="protocol.setFromMessage" value="header.mark"/>
        <parameter name="[ssrc]" operation="protocol.setFromMessage" value="header.ssrc"/>        
        <parameter name="[seqnum]" operation="protocol.setFromMessage" value="header.seqnum"/>
        <parameter name="[timestamp]" operation="protocol.setFromMessage" value="header.timestamp"/>
        <parameter name="[packetNumber]" operation="protocol.setFromMessage" value="flow.packetNumber"/>
        <parameter name="[flowPayload]" operation="protocol.setFromMessage" value="flow.payload.text"/>
    </receiveMessageRTPFLOW>

    <test parameter="[ssrc]" condition="number.equals" value="10"/>

    <test parameter="[mark(0)]" condition="number.equals" value="1"/>
    <test parameter="[mark(1)]" condition="number.equals" value="0"/>
    <test parameter="[mark(2)]" condition="number.equals" value="1"/>
    <test parameter="[mark(3)]" condition="number.equals" value="0"/>
    <test parameter="[mark(4)]" condition="number.equals" value="1"/>

    <!-- BUG should be that -->
    <!--test parameter="[seqnum(0)]" condition="number.equals" value="65534"/>
    <test parameter="[seqnum(1)]" condition="number.equals" value="65535"/>
    <test parameter="[seqnum(2)]" condition="number.equals" value="0"/>
    <test parameter="[seqnum(3)]" condition="number.equals" value="1"/>
    <test parameter="[seqnum(4)]" condition="number.equals" value="2"/-->

    <test parameter="[seqnum(0)]" condition="number.equals" value="65534"/>
    <test parameter="[seqnum(1)]" condition="number.equals" value="0"/>
    <test parameter="[seqnum(2)]" condition="number.equals" value="1"/>
    <test parameter="[seqnum(3)]" condition="number.equals" value="65535"/>
    <test parameter="[seqnum(4)]" condition="number.equals" value="2"/>

    <test parameter="[timestamp(0)]" condition="number.equals" value="123"/>
    <test parameter="[timestamp(1)]" condition="number.equals" value="132"/>
    <test parameter="[timestamp(2)]" condition="number.equals" value="141"/>
    <test parameter="[timestamp(3)]" condition="number.equals" value="150"/>
    <test parameter="[timestamp(4)]" condition="number.equals" value="159"/>

    <test parameter="[packetNumber]" condition="number.equals" value="5"/>
    <test parameter="[flowPayload(0)]" condition="string.equals" value="Packet #1"/>
    <test parameter="[flowPayload(1)]" condition="string.equals" value="Packet #2"/>
    <test parameter="[flowPayload(2)]" condition="string.equals" value="Packet #3"/>
    <test parameter="[flowPayload(3)]" condition="string.equals" value="Packet #4"/>
    <test parameter="[flowPayload(4)]" condition="string.equals" value="Packet #5"/>

    <parameter name="[testcase:SEM1]" operation="system.semaphorenotify" />

    <receiveMessageRTPFLOW listenpoint="invitee" type="PCMA:8" timeout="30">
        <parameter name="[seqnum]" operation="protocol.setFromMessage" value="header.seqnum"/>
        <parameter name="[ssrc]" operation="protocol.setFromMessage" value="header.ssrc"/>        
        <parameter name="[timestamp]" operation="protocol.setFromMessage" value="header.timestamp"/>
        <parameter name="[packetNumber]" operation="protocol.setFromMessage" value="flow.packetNumber"/>        
        <parameter name="[flowPayload]" operation="protocol.setFromMessage" value="flow.payload.text"/>
    </receiveMessageRTPFLOW>

    <test parameter="[packetNumber]" condition="number.equals" value="9"/>
    <test parameter="[ssrc]" condition="number.equals" value="123456"/>
    
    <finally>
		<removeListenpointRTPFLOW name="invitee" />
	</finally>
    
</scenario>
