<?xml version="1.0" encoding="UTF-8"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->

<scenario>

	<createListenpointRTPFLOW name="invitee" localHost="[remoteHostRTP]" localPort="[remotePortRTP]">
	 	<flow endTimerSilentFlow="1.25"/>
	 </createListenpointRTPFLOW>
	<parameter name="[testcase:SEM1]" operation="system.semaphorenotify" />

    <receiveMessageRTPFLOW listenpoint="invitee" type="PCMA:8" timeout="30">
        <parameter name="[payloadText]" operation="protocol.setFromMessage" value="flow.payload.text"/>
        <parameter name="[payloadBinary]" operation="protocol.setFromMessage" value="flow.payload.binary"/>
        <parameter name="[packetNb1]" operation="protocol.setFromMessage" value="flow.packetNumber"/>
    </receiveMessageRTPFLOW>    
    <test parameter="[packetNb1]" condition="string.equals" value="7"/>
    <test parameter="[payloadText(0)]" condition="string.equals" value="Packet RTP1"/>
    <test parameter="[payloadText(1)]" condition="string.equals" value="Packet RTP2"/>
    <test parameter="[payloadText(2)]" condition="string.equals" value="Packet RTP3"/>
    <test parameter="[payloadText(3)]" condition="string.equals" value="Packet RTP4"/>  
    <test parameter="[payloadText(4)]" condition="string.equals" value="00000000000"/>  
    <test parameter="[payloadText(5)]" condition="string.equals" value="22222222222"/>  
    <test parameter="[payloadText(6)]" condition="string.equals" value="Packet RTP5"/>  
    
    <receiveMessageRTPFLOW listenpoint="invitee" type="PCMA:8" timeout="30">
        <parameter name="[payloadText]" operation="protocol.setFromMessage" value="flow.payload.text"/>
        <parameter name="[payloadBinary]" operation="protocol.setFromMessage" value="flow.payload.binary"/>
        <parameter name="[packetNb2]" operation="protocol.setFromMessage" value="flow.packetNumber"/>
    </receiveMessageRTPFLOW>
    <test parameter="[packetNb2]" condition="string.equals" value="9"/>
    <test parameter="[payloadText(0)]" condition="string.equals" value="Packet RTP6"/>
    <test parameter="[payloadText(1)]" condition="string.equals" value="Packet RTP7"/>
    <test parameter="[payloadText(2)]" condition="string.equals" value="00000000000"/>  
    <test parameter="[payloadText(3)]" condition="string.equals" value="77000000000"/>  
    <test parameter="[payloadText(4)]" condition="string.equals" value="00000000000"/>  
    <test parameter="[payloadText(5)]" condition="string.equals" value="00000000000"/>  
    <test parameter="[payloadText(6)]" condition="string.equals" value="88888888888"/>  
    <test parameter="[payloadText(7)]" condition="string.equals" value="Packet RTP8"/>
    <test parameter="[payloadText(8)]" condition="string.equals" value="Packet RTP9"/>  
    
    <!--pause name="wait end flow" seconds="10"/-->
    
    <finally>
	<removeListenpointRTPFLOW name="invitee" />
    </finally>

</scenario>
