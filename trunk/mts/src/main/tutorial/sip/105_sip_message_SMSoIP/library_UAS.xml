<?xml version="1.0" encoding="UTF-8"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->
<!-- useful link to check message encoding http://www.smartposition.nl/resources/sms_pdu.html -->
<!-- wireshark is able to decode the message and to show in a readable way -->

<scenario>
        
<function name="receive_message">
  <do>
    <createListenpointSIP name="[scenarioName]" localHost="[localHostSIP]" localPort="[Port-User2]" transport="[Transport]"/>
    
    <!-- receive RP-DATA -->
		<receiveMessageSIP name="Wait MESSAGE" listenpoint="[scenarioName]" request="true" type="MESSAGE">
    		<parameter name="[to]" operation="protocol.setFromMessage" value="header.To"/>
    		<parameter name="[toURI]" operation="protocol.setFromMessage" value="header.To.Address.URI"/>
        <parameter name="[fromHost]" operation="protocol.setFromMessage" value="header.From.Address.URI.host"/>
        <parameter name="[fromPort]" operation="protocol.setFromMessage" value="header.From.Address.URI.port"/>
        <parameter name="[from]" operation="protocol.setFromMessage" value="header.From"/>
    		<parameter name="[fromURI]" operation="protocol.setFromMessage" value="header.From.Address.URI"/>
        <parameter name="[callId]" operation="protocol.setFromMessage" value="header.Call-ID"/>
    		<parameter name="[cSeq]" operation="protocol.setFromMessage" value="header.CSeq"/>
    		<parameter name="[via]" operation="protocol.setFromMessage" value="header.Via"/>
        <parameter name="[strContent]" operation="protocol.setFromMessage" value="content"/>
		</receiveMessageSIP>
    
    <parameter name="[binContent]" operation="string.toBinary" value="[strContent]"/>

    <parameter name="[index]" operation="set" value="0"/>
    <parameter name="[RP-DATA_BIN]" operation="binary.subBinary" value="[binContent]" value2="[index]" value3="1"/>
    <test parameter="[RP-DATA_BIN]" condition="binary.equals" value="01"/>
    
    <parameter name="[index]" operation="number.add" value="[index]" value2="1"/>
    <parameter name="[RP-Message-Reference_BIN]" operation="binary.subBinary" value="[binContent]" value2="[index]" value3="1"/>
    <test parameter="[RP-Message-Reference_BIN]" condition="binary.equals" value="00"/>

    <parameter name="[index]" operation="number.add" value="[index]" value2="1"/>
    <parameter name="[RP-Originator-Address_LENBIN]" operation="binary.subBinary" value="[binContent]" value2="[index]" value3="1"/>
    <parameter name="[RP-Originator-Address_LEN]" operation="binary.toNumber" value="[RP-Originator-Address_LENBIN]"/>
    <parameter name="[index]" operation="number.add" value="[index]" value2="1"/>
    <parameter name="[RP-Originator-Address_BIN]" operation="binary.subBinary" value="[binContent]" value2="[index]" value3="[RP-Originator-Address_LEN]"/>
    <parameter name="[RP-Originator-Address_XML]" operation="binary.asnToXml" value="82[RP-Originator-Address_LENBIN][RP-Originator-Address_BIN]" value2="com.devoteam.srit.xmlloader.sigtran.ap.map.Sm_RP_OA" value3="map/dictionary_MAP .xml"/>

    <parameter name="[RP-OA-Extension]" operation="string.xpath" value="[RP-Originator-Address_XML]" value2="//field[@name='extension']"/> 
    <parameter name="[RP-OA-Extension]" operation="string.xpath" value="[RP-OA-Extension]" value2="//@value"/>
    <test parameter="[RP-OA-Extension]" condition="string.equals" value="no extension:1"/>
        
    <parameter name="[RP-OA-NatureOfAddress]" operation="string.xpath" value="[RP-Originator-Address_XML]" value2="//field[@name='nature of address']"/> 
    <parameter name="[RP-OA-NatureOfAddress]" operation="string.xpath" value="[RP-OA-NatureOfAddress]" value2="//@value"/>
    <test parameter="[RP-OA-NatureOfAddress]" condition="string.equals" value="international number:1"/>

    <parameter name="[RP-OA-NumberingPlan]" operation="string.xpath" value="[RP-Originator-Address_XML]" value2="//field[@name='numbering plan']"/> 
    <parameter name="[RP-OA-NumberingPlan]" operation="string.xpath" value="[RP-OA-NumberingPlan]" value2="//@value"/>
    <test parameter="[RP-OA-NumberingPlan]" condition="string.equals" value="ISDN/Telephony Numbering Plan (Rec ITU-T E.164):1"/>

    <parameter name="[RP-OA-Digits]" operation="string.xpath" value="[RP-Originator-Address_XML]" value2="//field[@name='digits']"/> 
    <parameter name="[RP-OA-Digits]" operation="string.xpath" value="[RP-OA-Digits]" value2="//@value"/>
    <test parameter="[RP-OA-Digits]" condition="string.equals" value="[MSISDN-SMSC]"/>

    <parameter name="[index]" operation="number.add" value="[index]" value2="[RP-Originator-Address_LEN]"/>
    <parameter name="[RP-Destination-Address_LENBIN]" operation="binary.subBinary" value="[binContent]" value2="[index]" value3="1"/>
    <parameter name="[RP-Destination-Address_LEN]" operation="binary.toNumber" value="[RP-Destination-Address_LENBIN]"/> 
    <parameter name="[index]" operation="number.add" value="[index]" value2="1"/>
    <parameter name="[RP-Destination-Address_BIN]" operation="binary.subBinary" value="[binContent]" value2="[index]" value3="[RP-Destination-Address_LEN]"/>
    <test parameter="[RP-Destination-Address_BIN]" condition="binary.equals" value=""/>
    <parameter name="[RP-Destination-Address_XML]" operation="binary.asnToXml" value="84[RP-Destination-Address_LENBIN][RP-Destination-Address_BIN]" value2="com.devoteam.srit.xmlloader.sigtran.ap.map.Sm_RP_DA" value3="map/dictionary_MAP .xml"/>

    <parameter name="[index]" operation="number.add" value="[index]" value2="[RP-Destination-Address_LEN]"/>    
    <parameter name="[RP-UserData_LENBIN]" operation="binary.subBinary" value="[binContent]" value2="[index]" value3="1"/>
    <parameter name="[RP-UserData_LEN]" operation="binary.toNumber" value="[RP-UserData_LENBIN]"/>
    <!-- sometimes the length is encoded on 2 bytes (comes probably from BER ANS.1 encoding) -->
    <parameter name="[bugLength]" operation="binary.toNumber" value="[RP-UserData_LEN]"/>
    <if>
      <condition>
        <test parameter="[bugLength]" condition="number.greaterThan" value="127" />
      </condition>
      <then>
        <parameter name="[RP-UserData_LENBIN]" operation="set" value="81[RP-UserData_LENBIN]"/>
      </then>
    </if>   
    <parameter name="[index]" operation="number.add" value="[index]" value2="1"/>
    <parameter name="[RP-UserData_BIN]" operation="binary.subBinary" value="[binContent]" value2="[index]" value3="[RP-UserData_LEN]"/>
    <parameter name="[RP-UserData_XML]" operation="binary.asnToXml" value="04[RP-UserData_LENBIN][RP-UserData_BIN]" value2="com.devoteam.srit.xmlloader.sigtran.ap.map.Sm_RP_UI" value3="map/dictionary_MAP .xml"/>

    <parameter name="[RP-UD-TP-RP]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='TP-RP']"/> 
    <parameter name="[RP-UD-TP-RP]" operation="string.xpath" value="[RP-UD-TP-RP]" value2="//@value"/>
    <test parameter="[RP-UD-TP-RP]" condition="string.equals" value="TP Reply Path parameter is not set in this SMS SUBMIT/DELIVER:0"/>
    <parameter name="[RP-UD-TP-UDHI]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='TP-UDHI']"/> 
    <parameter name="[RP-UD-TP-UDHI]" operation="string.xpath" value="[RP-UD-TP-UDHI]" value2="//@value"/>
    <test parameter="[RP-UD-TP-UDHI]" condition="string.equals" value="[RP-UD-TP-User-Data-Header-Indicator]"/>
    <parameter name="[RP-UD-TP-SRI]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='TP-SRI']"/> 
    <parameter name="[RP-UD-TP-SRI]" operation="string.xpath" value="[RP-UD-TP-SRI]" value2="//@value"/>
    <test parameter="[RP-UD-TP-SRI]" condition="string.equals" value="A status report is not requested:0"/>
    <parameter name="[RP-UD-TP-LP]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='TP-LP']"/> 
    <parameter name="[RP-UD-TP-LP]" operation="string.xpath" value="[RP-UD-TP-LP]" value2="//@value"/>
    <test parameter="[RP-UD-TP-LP]" condition="string.equals" value="The message has not been forwarded and is not a spawned message:0"/>
    <parameter name="[RP-UD-TP-MMS]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='TP-MMS']"/> 
    <parameter name="[RP-UD-TP-MMS]" operation="string.xpath" value="[RP-UD-TP-MMS]" value2="//@value"/>
    <test parameter="[RP-UD-TP-MMS]" condition="string.equals" value="No more messages are waiting for the MS in this SC:1"/>
    <parameter name="[RP-UD-TP-MTI]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='TP-MTI']"/> 
    <parameter name="[RP-UD-TP-MTI]" operation="string.xpath" value="[RP-UD-TP-MTI]" value2="//@value"/>
    <test parameter="[RP-UD-TP-MTI]" condition="string.equals" value="SMS-DELIVER / SMS-DELIVER-REPORT:0"/>

    <parameter name="[RP-UD-TP-OA-Extension]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='extension']"/> 
    <parameter name="[RP-UD-TP-OA-Extension]" operation="string.xpath" value="[RP-UD-TP-OA-Extension]" value2="//@value"/>
    <test parameter="[RP-UD-TP-OA-Extension]" condition="string.equals" value="no extension:1"/>
    <parameter name="[RP-UD-TP-OA-NatureOfAddress]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='nature of address']"/> 
    <parameter name="[RP-UD-TP-OA-NatureOfAddress]" operation="string.xpath" value="[RP-UD-TP-OA-NatureOfAddress]" value2="//@value"/>
    <test parameter="[RP-UD-TP-OA-NatureOfAddress]" condition="string.equals" value="international number:1"/>
    <parameter name="[RP-UD-TP-OA-NumberingPlan]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='numbering plan']"/> 
    <parameter name="[RP-UD-TP-OA-NumberingPlan]" operation="string.xpath" value="[RP-UD-TP-OA-NumberingPlan]" value2="//@value"/>
    <test parameter="[RP-UD-TP-OA-NumberingPlan]" condition="string.equals" value="ISDN/Telephony Numbering Plan (Rec ITU-T E.164):1"/>
    <parameter name="[RP-UD-TP-OA-Digits]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='digits']"/> 
    <parameter name="[RP-UD-TP-OA-Digits]" operation="string.xpath" value="[RP-UD-TP-OA-Digits]" value2="//@value"/>
    <parameter name="[MSISDN-User1WithoutPlus]" operation="string.subString" value="[MSISDN-User1]" value2="1"/>
    <test parameter="[RP-UD-TP-OA-Digits]" condition="string.equals" value="[MSISDN-User1WithoutPlus]"/>

    <parameter name="[RP-UD-TP-PID-Assignment]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='assignment']"/> 
    <parameter name="[RP-UD-TP-PID-Assignment]" operation="string.xpath" value="[RP-UD-TP-PID-Assignment]" value2="//@value"/>
    <test parameter="[RP-UD-TP-PID-Assignment]" condition="string.equals" value="Assigns bits 0..5 as defined below:0"/>
    
    <parameter name="[RP-UD-TP-PID-TelematicInterworking]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='telematic interworking']"/> 
    <parameter name="[RP-UD-TP-PID-TelematicInterworking]" operation="string.xpath" value="[RP-UD-TP-PID-TelematicInterworking]" value2="//@value"/>
    <test parameter="[RP-UD-TP-PID-TelematicInterworking]" condition="string.equals" value="no interworking, but SME to SME protocol:0"/>

    <parameter name="[RP-UD-TP-PID-TelematicDevices]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='telematic devices']"/> 
    <parameter name="[RP-UD-TP-PID-TelematicDevices]" operation="string.xpath" value="[RP-UD-TP-PID-TelematicDevices]" value2="//@value"/>
    <test parameter="[RP-UD-TP-PID-TelematicDevices]" condition="string.equals" value="implicit device type is specific to this SC,:0"/>
    
    <parameter name="[RP-UD-TP-DCS-CodingGroupBits]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='Coding Group Bits']"/> 
    <parameter name="[RP-UD-TP-DCS-CodingGroupBits]" operation="string.xpath" value="[RP-UD-TP-DCS-CodingGroupBits]" value2="//@value"/>
    <test parameter="[RP-UD-TP-DCS-CodingGroupBits]" condition="string.equals" value="General Data Coding indication:0"/>

    <parameter name="[RP-UD-TP-DCS-Compression]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='Compression']"/> 
    <parameter name="[RP-UD-TP-DCS-Compression]" operation="string.xpath" value="[RP-UD-TP-DCS-Compression]" value2="//@value"/>
    <test parameter="[RP-UD-TP-DCS-Compression]" condition="string.equals" value="the text is uncompressed:0"/>

    <parameter name="[RP-UD-TP-DCS-Bit1Significance]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='Bit 1 significance']"/> 
    <parameter name="[RP-UD-TP-DCS-Bit1Significance]" operation="string.xpath" value="[RP-UD-TP-DCS-Bit1Significance]" value2="//@value"/>
    <test parameter="[RP-UD-TP-DCS-Bit1Significance]" condition="string.equals" value="bits 1 to 0 are reserved and have no message class meaning:0"/>

    <parameter name="[RP-UD-TP-DCS-Alphabet]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='Alphabet']"/> 
    <parameter name="[RP-UD-TP-DCS-Alphabet]" operation="string.xpath" value="[RP-UD-TP-DCS-Alphabet]" value2="//@value"/>
    <test parameter="[RP-UD-TP-DCS-Alphabet]" condition="string.equals" value="[smsAlphabet]"/>

    <parameter name="[RP-UD-TP-DCS-MessageClass]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='Message Class']"/> 
    <parameter name="[RP-UD-TP-DCS-MessageClass]" operation="string.xpath" value="[RP-UD-TP-DCS-MessageClass]" value2="//@value"/>
    <test parameter="[RP-UD-TP-DCS-MessageClass]" condition="string.equals" value="Class 0:0"/>

    <parameter name="[RP-UD-TP-SCTS]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='TP-SCTS']"/> 
    <parameter name="[RP-UD-TP-SCTS]" operation="string.xpath" value="[RP-UD-TP-SCTS]" value2="//@value"/>
    <test parameter="[RP-UD-TP-SCTS]" condition="string.equals" value="67072712345678"/>
    
    <parameter name="[RP-UD-TP-UDL]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='TP-UDL']"/> 
    <parameter name="[RP-UD-TP-UDL]" operation="string.xpath" value="[RP-UD-TP-UDL]" value2="//@value"/>
    <!--test parameter="[RP-UD-TP-UDL]" condition="string.equals" value="[smsTextLength]"/-->
    <parameter name="[RP-UD-TP-UD]" operation="string.xpath" value="[RP-UserData_XML]" value2="//field[@name='TP-UD']"/> 
    <parameter name="[RP-UD-TP-UD]" operation="string.xpath" value="[RP-UD-TP-UD]" value2="//@value"/>
    <!--test parameter="[RP-UD-TP-UD]" condition="binary.equals" value="[smsBinary]"/-->
    
    <!-- return the [receivedSmsText] output parameter -->
    <parameter name="[receivedSmsBinary]" operation="set" value="[RP-UD-TP-UD]"/>
    
    <parameter name="[localTag]" operation="string.random" value="10"/>
		<sendMessageSIP name="Send 202 Accepted" listenpoint="[scenarioName]">
<![CDATA[SIP/2.0 202 Accepted 
To: [to];tag=[localTag]
From: [from]
Call-ID: [callId]
Via: [via]
CSeq: [cSeq]
Content-Length: 0
]]>		
    </sendMessageSIP>
    
    <!-- send RP-ACK -->
    <parameter name="[binMAPMessage]" operation="set" value="020b41020000"/>
    <!-- send RP-ERROR -->
    <!--parameter name="[binMAPMessage]" operation="set" value="0408016F"/-->
    <parameter name="[strMAPMessage]" operation="binary.toString" value="[binMAPMessage]"/> 

    <parameter name="[inviteeName1]" operation="set" value="[MSISDN-User1]"/>
    <parameter name="[clientName]" operation="set" value="[MSISDN-User2]"/>
    <parameter name="[localTag]" operation="string.random" value="10"/>
    <parameter name="[newBranchId]" operation="string.random" value="10"/>
    <parameter name="[newCallId]" operation="number.random" value="10000000"/>
    <parameter name="[newCseqNumber]" operation="number.random" value="10000000"/>

		<sendMessageSIP name="Send MESSAGE" listenpoint="[scenarioName]" remoteHost="[remoteHostSIP]" remotePort="[remotePortSIP]">
<![CDATA[MESSAGE [fromURI] SIP/2.0
To: [fromURI]
From: [toURI];tag=[localTag]
Via: SIP/2.0/[transportResponse] [remoteHostSIP]:[Port-User2];branch=z9hG4bK[newBranchId];id=[clientName]
Call-ID: [newCallId]
CSeq: [newCseqNumber] MESSAGE
Contact: <sip:[inviteeName1]@[localHostSIP]:[Port-User2]>
Max-Forwards: 70
User-Agent: MTS v6.0.3_beta : Multiprotocol Test Suite
Expires: 0
Content-Type: application/vnd.3gpp.sms
Content-Length: x

[strMAPMessage]]]></sendMessageSIP>

		<receiveMessageSIP name="Wait 200 OK" listenpoint="[scenarioName]" request="false" type="MESSAGE" result="200">
		</receiveMessageSIP>
    
  </do>
  <output>
    <parameter name="[function:receivedSmsBinary]"/>
  </output>
</function>

</scenario>
