<?xml version="1.0" encoding="UTF-8"?>

<scenario>
    <openChannelSCTP name="channel" localHost="[localHostSCTP]" localPort="[localPortSCTP]" remoteHost="[remoteHostSCTP]" remotePort="[remotePortSCTP]"  num_ostreams="7" max_instreams="6" />
    
    <!--receiveMessageSCTP request="true" type="INIT-ACK" timeout="5"/-->

    <sendMessageSCTP channel="channel" stream="2" ssn="0" flags="0" 
                     ppid="1" context="0" ttl="0" 
                     tsn= "0" cumtsn=  "0" aid="0">
        <data format="binary">h41:1 h441:1 b01000001:1 d0000065:1 65</data>
    </sendMessageSCTP>
     
   <receiveMessageSCTP request="true" type="DATA" timeout="5">
    </receiveMessageSCTP>

    <parameter name="[stream]" operation="protocol.setFromMessage" value="header.stream"/>
    <test parameter="[stream]" condition="number.equals" value="2" />
    <parameter name="[ssn]" operation="protocol.setFromMessage" value="header.ssn"/>
    <!--test parameter="[ssn]" condition="number.equals" value="0" /-->
    <parameter name="[flags]" operation="protocol.setFromMessage" value="header.flags"/>
    <test parameter="[flags]" condition="number.equals" value="0" />
    <parameter name="[ppid]" operation="protocol.setFromMessage" value="header.ppid"/>
    <!--test parameter="[ppid]" condition="number.equals" value="1" /-->
    <parameter name="[context]" operation="protocol.setFromMessage" value="header.context"/>
    <test parameter="[context]" condition="number.equals" value="0" />
    <parameter name="[ttl]" operation="protocol.setFromMessage" value="header.ttl"/>
    <test parameter="[ttl]" condition="number.equals" value="0" />
    <parameter name="[tsn]" operation="protocol.setFromMessage" value="header.tsn"/>
    <!--test parameter="[tsn]" condition="number.equals" value="0" /-->
    <parameter name="[cumtsn]" operation="protocol.setFromMessage" value="header.cumtsn"/>
    <test parameter="[cumtsn]" condition="number.equals" value="0" />
    <parameter name="[aid]" operation="protocol.setFromMessage" value="header.aid"/>
    <!--test parameter="[aid]" condition="number.equals" value="0" /-->

    <parameter name="[sourceHost]" operation="protocol.setFromMessage" value="header.sourceHost"/>
    <test parameter="[sourceHost]" condition="string.equals" value="[localHostSCTP]" />
    <parameter name="[sourcePort]" operation="protocol.setFromMessage" value="header.sourcePort"/>
    <test parameter="[sourcePort]" condition="string.equals" value="[localPortSCTP]" />
    
    <parameter name="[contents]" operation="protocol.setFromMessage" value="data.text" />
    <test parameter="[contents]" condition="string.equals" value="AAAAA" />

    <finally>

        <closeChannelSCTP name="SCTPConnection"/>
        
        <receiveMessageSCTP request="true" type="ABORT-ACK" timeout="5"/>
	
    </finally>

</scenario>
