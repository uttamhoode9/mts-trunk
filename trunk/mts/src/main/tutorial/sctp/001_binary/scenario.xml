<?xml version="1.0" encoding="UTF-8"?>

<scenario>
    <openConnectionSCTP connectionName="SCTPConnection" localHost="[localHost]" localPort="[localPort]" remoteHost="[remoteHost]" remotePort="[remotePort]"  ostreams="7" instreams="6" />
    
    <receiveMessageSCTP type="INIT-ACK"/>

    <sendDataSCTP connectionName="SCTPConnection">
        <data format="binary">h41:1 h441:1 b01000001:1 d0000065:1 65</data>
    </sendDataSCTP>
     
   <receiveDataSCTP>
        <parameter name="[stream]" operation="protocol.setFromMessage" value="header.stream"/>
        <parameter name="[ssn]" operation="protocol.setFromMessage" value="header.ssn"/>
        <parameter name="[ppid]" operation="protocol.setFromMessage" value="header.ppid"/>
        <parameter name="[tsn]" operation="protocol.setFromMessage" value="header.tsn"/>
        <parameter name="[aid]" operation="protocol.setFromMessage" value="header.aid"/>

     	<parameter name="[sourceHost]" operation="protocol.setFromMessage" value="header.sourceHost"/>
        <parameter name="[sourcePort]" operation="protocol.setFromMessage" value="header.sourcePort"/>
  
        <parameter name="[contents]" operation="protocol.setFromMessage" value="data.text" />
    </receiveDataSCTP>

    <test parameter="[stream]" condition="number.equals" value="1" />
    <!--test parameter="[ssn]" condition="number.equals" value="255" /-->
    <test parameter="[ppid]" condition="number.equals" value="987654321" />
    <!--test parameter="[tsn]" condition="number.equals" value="1234567890" /-->
    <test parameter="[aid]" condition="number.equals" value="33554432" />

    <test parameter="[sourceHost]" condition="string.equals" value="[localHost]" />
    <test parameter="[sourcePort]" condition="string.equals" value="[localPort]" />
    <test parameter="[contents]" condition="string.equals" value="AAAAA" />

    <finally>

	<closeConnectionSCTP connectionName="SCTPConnection"/>

	<receiveMessageSCTP type="ABORT-ACK"/>
	
    </finally>

</scenario>
