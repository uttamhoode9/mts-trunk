<?xml version="1.0" encoding="UTF-8"?>

<!-- scenario server-->
<scenario>

    <!-- attend message capability -->
    <receiveMessageIMAP request="true">
        <parameter name="[tag]" operation="protocol.setFromMessage" value="request.tag" />      
        <parameter name="[connection]" operation="protocol.setFromMessage" value="channel.name" />
        <parameter name="[command]" operation="protocol.setFromMessage" value="request.command" />        
        <test parameter="[command]" condition="string.equals" value="CAPABILITY"/>
    </receiveMessageIMAP>
    
    <!-- envoi reponse capability-->
    <sendMessageIMAP name="Send CAPABILITY" channel="[connection]">
<![CDATA[
* CAPABILITY IMAP4rev1 STARTTLS AUTH=PLAIN
[tag] OK CAPABILITY completed
]]>
    </sendMessageIMAP>
    
    <!-- attend message login-->
    <receiveMessageIMAP request="true">
        <parameter name="[tag]" operation="protocol.setFromMessage" value="request.tag" />
        <parameter name="[argument]" operation="protocol.setFromMessage" value="request.arguments" />
        <parameter name="[command]" operation="protocol.setFromMessage" value="request.command" />        
        <test parameter="[command]" condition="string.equals" value="LOGIN"/>        
    </receiveMessageIMAP>

    <!-- envoi reponse final login-->
    <sendMessageIMAP name="Send LOGIN" channel="[connection]">
<![CDATA[
[tag] OK LOGIN completed
]]>
    </sendMessageIMAP>
    
    <!-- attend message noop-->
    <receiveMessageIMAP request="true">
        <parameter name="[tag]" operation="protocol.setFromMessage" value="request.tag" />
        <parameter name="[command]" operation="protocol.setFromMessage" value="request.command" />        
        <test parameter="[command]" condition="string.equals" value="NOOP"/>        
    </receiveMessageIMAP>

    <!-- envoi reponse final noop-->
    <sendMessageIMAP name="Send NOOP" channel="[connection]">
<![CDATA[
[tag] OK NOOP completed
]]>
    </sendMessageIMAP>

    <!-- attend message logout-->
    <receiveMessageIMAP request="true">
        <parameter name="[tag]" operation="protocol.setFromMessage" value="request.tag" />
        <parameter name="[command]" operation="protocol.setFromMessage" value="request.command" />        
        <test parameter="[command]" condition="string.equals" value="LOGOUT"/>        
    </receiveMessageIMAP>

    <!-- envoi reponse logout-->
    <sendMessageIMAP name="Send LOGOUT" channel="[connection]">
<![CDATA[
* BYE You are the best!!
[tag] OK LOGOUT completed
]]>
    </sendMessageIMAP>

    <parameter name="[testcase:SEM]" operation="system.semaphorewait"/>
    <closeChannelIMAP name="[connection]"/>

    <!-- attend message login-->
    <receiveMessageIMAP request="true">
        <parameter name="[tag]" operation="protocol.setFromMessage" value="request.tag" />
        <parameter name="[connection]" operation="protocol.setFromMessage" value="channel.name" />
    </receiveMessageIMAP>

    <sendMessageIMAP name="Send LOGIN continuation" channel="[connection]">
<![CDATA[
+ ready for data
]]>
    </sendMessageIMAP>

    <receiveMessageIMAP request="true">
    </receiveMessageIMAP>

    <sendMessageIMAP name="Send LOGIN continuation" channel="[connection]">
<![CDATA[
+ ready for next data
]]>
    </sendMessageIMAP>

    <receiveMessageIMAP request="true">
        <parameter name="[arg]" operation="protocol.setFromMessage" value="request.arguments" />
    </receiveMessageIMAP>

    <!-- envoi reponse final login-->
    <sendMessageIMAP name="Send LOGIN" channel="[connection]">
<![CDATA[
* OK [ALERT] System shutdown in 10 minutes
[tag] OK LOGIN completed
]]>
    </sendMessageIMAP>

    <receiveMessageIMAP request="true">
        <parameter name="[arg]" operation="protocol.setFromMessage" value="request.arguments" />
    </receiveMessageIMAP>

</scenario>
