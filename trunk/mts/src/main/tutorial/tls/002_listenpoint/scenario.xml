<?xml version="1.0" encoding="UTF-8"?>

<scenario>

    <createListenpointTLS name="listenpointTLS" localHost="[remoteHostTLS]" localPort="11003"/>
	
    <openChannelTLS name="channelTLS" remoteHost="[remoteHostTLS]" remotePort="11004" />

    <receiveMessageTLS type="SYN-ACK" timeout="1">
        <parameter name="[channel]" operation="protocol.setFromMessage" value="channel.name"/>    
        <parameter name="[temp]" operation="protocol.setFromMessage" value="data.binary" />
        <parameter name="[contents]" operation="protocol.setFromMessage" value="data.text" />
        <test parameter="[contents]" condition="string.equals" value="" />
    </receiveMessageTLS>

    <sendMessageTLS channel="channelTLS">
        <data format="binary">h41:1 h441:1 b01000001:1 d0000065:1 65</data>
    </sendMessageTLS>

    <receiveMessageTLS channel="[channel]" type="SEQ-ACK" timeout="1">
        <parameter name="[temp]" operation="protocol.setFromMessage" value="data.binary" />
        <parameter name="[contents]" operation="protocol.setFromMessage" value="data.text" />
        <test parameter="[contents]" condition="string.equals" value="AAAAA" />
    </receiveMessageTLS>

    <finally>
    
	<closeChannelTLS name="channelTLS" />
	
	<receiveMessageTLS channel="channelTLS" type="FIN-ACK" timeout="1">
            <parameter name="[temp]" operation="protocol.setFromMessage" value="data.binary" />
            <parameter name="[contents]" operation="protocol.setFromMessage" value="data.text" />
            <test parameter="[contents]" condition="string.equals" value="" />
    	</receiveMessageTLS>
	
	<removeListenpointTLS name="listenpointTLS"/>
	
    </finally>
    
</scenario>
