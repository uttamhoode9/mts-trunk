<?xml version="1.0" encoding="UTF-8"?>

<scenario>

    <!-- test exists / create / delete -->
    <parameter name="[result1]" operation="string.tobinary"   value="123" />
    <parameter name="[result2]" operation="binary.parse"      value="h31 h32 h33" />
    <test parameter="[result1]" condition="binary.equals"     value="[result2]"/>
    
    <parameter name= "[result3]" operation ="binary.parse" value="10:4"/>
    <test parameter="[result3]" condition="binary.equals"     value="0000000a"/>
    
    <parameter name="[result2]" operation="binary.tostring"   value="[result1]" />
    <test parameter="[result2]" condition="string.equals"     value="123"/>
    
    <parameter name="[result2]" operation="binary.parse"      value="h32" />
    <test parameter="[result1]" condition="binary.contains"   value="[result2]"/>
    
    <parameter name="[length1]" operation="binary.length"      value="[result1]" />
    <test parameter="[length1]" condition="number.equals"   value="3"/>
    <parameter name="[length2]" operation="binary.length"      value="[result2]" />
    <test parameter="[length1]" condition="number.equals"   value="3"/>
    
    <parameter name="[result3]" operation="binary.indexof"    value="[result1]" value2="[result2]"/>
    <test parameter="[result3]" condition="string.equals"            value="1"/>
    
    <parameter name="[result4]" operation="binary.tobase64"   value="31323334" />
    <parameter name="[result5]" operation="binary.frombase64" value="[result4]" />
    
    <test parameter="[result5]" condition="binary.equals"     value="31323334"/>

    <parameter name="[result5]" operation="binary.indexof"    value="3132333431323334" value2="3233" value3="3"/>
    <test parameter="[result5]" condition="string.equals"    value="5"/>

    <parameter name="[result5]" operation="binary.subbinary"  value="3132333431323334" value2="5" value3="2"/>
    <test parameter="[result5]" condition="binary.equals"     value="3233"/>

    <parameter name="[result]"  operation="binary.random" value="8"/>
    <parameter name="[result6]" operation="set" value="09d81fa8" />

    <parameter name="[secret]" operation="string.tobinary" value="0123456789012345"/>
    <parameter name="[data]"   operation="string.tobinary" value="myDatas"/>
    <!-- do some padding to datas; need a multiple of 16 bytes -->
    <parameter name="[data.length]"   operation="string.length" value="[data]"/>
    <parameter name="[data.length]"   operation="number.divide" value="[data.length]" value2="2" />
    <parameter name="[data.overhead]"   operation="number.modulo" value="[data.length]" value2="16" />
    <if>
        <condition><test parameter="[data.overhead]" condition="number.greaterthan" value="0" /></condition>
        <then>
            <parameter name="[data.padding]" operation="number.substract" value="16" value2="[data.overhead]" />
            <parameter name="[data.padding]" operation="number.multiply" value="[data.padding]" value2="2" />
            <parameter name="[data.padding]" operation="list.set" value="0" value2="[data.padding]" />
            <parameter name="[data]" operation="set" value="[data][data.padding(0)]" />
        </then>
    </if>

    <parameter name="[binary]" operation="set" value="00000000000000000000000000000000"/>
    <parameter name="[encrypted]"  operation="binary.encrypt" value="[data]" value2="AES/CBC/NoPadding" value3="[secret]" value4="[binary]"/>
    <parameter name="[decrypted]"  operation="binary.decrypt" value="[encrypted]" value2="AES/CBC/NoPadding" value3="[secret]" value4="[binary]"/>
    <test parameter="[data]" condition="binary.equals"     value="[decrypted]"/>

    <parameter name="[binary]" operation="set" value="f0f1f2f3f4f5f6f7f8f9f9f9f9f8f7f6f5f4f3f2f2f0"/>
    <parameter name="[statMax]" operation="binary.statMax" value="[binary]"/>
    <test parameter="[statMax]" condition="binary.equals"     value="f9"/>
    <parameter name="[statMin]" operation="binary.statMin" value="[binary]"/>
    <test parameter="[statMin]" condition="binary.equals"     value="f0"/>
    <parameter name="[statAverage]" operation="binary.statAverage" value="[binary]"/>
    <test parameter="[statAverage]" condition="binary.equals"     value="f5"/>
    <parameter name="[statVariance]" operation="binary.statVariance" value="[binary]"/>
    <test parameter="[statVariance]" condition="number.equals"     value="9"/>
    <parameter name="[statDeviation]" operation="binary.statDeviation" value="[binary]"/>
    <test parameter="[statDeviation]" condition="number.equals"     value="3"/>
    <parameter name="[statPopular]" operation="binary.statPopular" value="[binary]"/>
    <test parameter="[statPopular]" condition="binary.equals"     value="f9"/>
    <parameter name="[statPopular]" operation="binary.statMaxFreq" value="[binary]"/>
    <test parameter="[statPopular]" condition="number.equals" value="0.181818"/>
    <parameter name="[binarytonumber]" operation="binary.toNumber" value="[result6]" />
    <test parameter="[binarytonumber]" condition="number.equals" value="165158824" />
    
    <parameter name="[binaryfromip]" operation="binary.fromIp" value="172.6.21.112" />
    <test parameter="[binaryfromip]" condition="string.equals" value="ac061570" />
    <parameter name="[binarytoip]" operation="binary.toIp" value="ac061570" />
    <test parameter="[binarytoip]" condition="string.equals" value="172.6.21.112" />
    
    <parameter name="[binaryfromip]" operation="binary.fromIp" value="[2a01:cf00:33:5::6e01]" />
    <test parameter="[binaryfromip]" condition="string.equals" value="2a01cf00003300050000000000006e01" />
    <parameter name="[binarytoip]" operation="binary.toIp" value="2a01cf00003300050000000000006e01" />
    <test parameter="[binarytoip]" condition="string.equals" value="[2a01:cf00:33:5::6e01]" />

    <parameter name="[diff01]" operation="set" value="0100010100000098020000080000006600060008000000650210007e000000010000000203020001090103070b044302000804430100085e625c4804000000016b1e281c060700118605010101a011600f80020780a1090607040000010015026c34a13202010102012e302a9f810407913366600567f98207913366317071f3041411080b913366600567f70000a906f3f97c3e9f03" />
    <parameter name="[diff02]" operation="set" value="0100010100000094020000080000006600060008000000650210007c000000010000000203020001090103070b044302000804430100085c625a4804000000016b1e281c060700118605010101a011600f80020780a1090607040000010015026c32a13002010102012e302884    07913366600567f98207913366317071f3041411080b913366600567f70000a906f3f97c3e9f03" />
    <parameter name="[result]" operation="set" value="              04                                      02                                                      02  02                                                                              02  02              021BXXXX                                                                              " />
    <!--parameter name="[result1]" operation="binary.difference" value="[diff01]" value2="[diff02]" />
    <test parameter="[result1]" condition="string.equals" value="[result]" /-->
    <!--parameter name="[result2]" operation="binary.difference" value="[diff02]" value2="[diff01]" />
    <test parameter="[result2]" condition="string.equals" value="[result]" /-->
    
    <parameter name="[diff01(0)]" operation="set" value="f0123456781200780090001155" />
    <parameter name="[diff01(1)]" operation="set" value="f0123456781200780090001155" />
    <parameter name="[diff02(0)]" operation="set" value="fedcba123456120078345678900011" />
    <parameter name="[diff02(1)]" operation="set" value="fedcba123456120078345678900011" />
    <parameter name="[result]" operation="set" value="0EXXXX      XX      34XXXX      XX" />
    <parameter name="[result1]" operation="binary.difference" value="[diff01]" value2="[diff02]" />
    <test parameter="[result1]" condition="string.equals" value="[result]" />
    <test parameter="[diff01]" condition="string.equals" value="f0    1234567812007800    90001155" />
    <test parameter="[diff02]" condition="string.equals" value="fedcba123456  120078345678900011  " />
    <parameter name="[result2]" operation="binary.difference" value="[diff02]" value2="[diff01]" />
    <test parameter="[result2]" condition="string.equals" value="[result]" />
    <test parameter="[diff01]" condition="string.equals" value="f0    1234567812007800    90001155" />
    <test parameter="[diff02]" condition="string.equals" value="fedcba123456  120078345678900011  " />

    <parameter name="[diff01]" operation="set" value="f0123456781200780090001155" />
    <parameter name="[diff02]" operation="set" value="fedcba123456120078345678900011" />
    <parameter name="[result1]" operation="binary.difference" value="[diff01]" value2="[diff02]" />
    <test parameter="[result1]" condition="string.equals" value="[result]" />
    <!--test parameter="[diff01]" condition="string.equals" value="f0    12    3450780090dc" />
    <test parameter="[diff02]" condition="string.equals" value="fedcba1200ff345678  9000" /-->
    <parameter name="[result2]" operation="binary.difference" value="[diff02]" value2="[diff01]" />
    <test parameter="[result2]" condition="string.equals" value="[result]" />
    <!--test parameter="[diff01]" condition="string.equals" value="f0    12    3450780090dc" />
    <test parameter="[diff02]" condition="string.equals" value="fedcba1200ff345678  9000" /-->
    
    <parameter name="[res]" operation="set" value="0EXXXX      XX      34XXXX      XX" />
    <parameter name="[res1]" operation="binary.difference" value="f0123456781200780090001155" value2="fedcba123456120078345678900011" />
    <test parameter="[res1]" condition="string.equals" value="[res]" />
    <parameter name="[res2]" operation="binary.difference" value="fedcba123456120078345678900011" value2="f0123456781200780090001155" />
    <test parameter="[res2]" condition="string.equals" value="[res]" />
    
    <parameter name="[xml]" operation="set">
<![CDATA[<Mo_forwardSM_Arg.Sequence>
   <sm_RP_DA.Choice>
      <serviceCentreAddressDA.C4.BoxedType><Bytes>
            <field name="extension" value="no extension:1" type="Enumeration" lengthBit="1"/>
            <field name="nature of address" value="international number:1" type="Enumeration" lengthBit="3"/>
            <field name="numbering plan" value="ISDN/Telephony Numbering Plan (Rec ITU-T E.164):1" type="Enumeration" lengthBit="4"/>
            <field name="digits" value="33660650769" type="Number_BCD" lengthBit="0"/>      
      </Bytes></serviceCentreAddressDA.C4.BoxedType>
   </sm_RP_DA.Choice>
   <sm_RP_OA.Choice>
      <msisdn.C2.BoxedType><Bytes>
            <field name="extension" value="no extension:1" type="Enumeration" lengthBit="1"/>
            <field name="nature of address" value="international number:1" type="Enumeration" lengthBit="3"/>
            <field name="numbering plan" value="ISDN/Telephony Numbering Plan (Rec ITU-T E.164):1" type="Enumeration" lengthBit="4"/>
            <field name="digits" value="33661307173" type="Number_BCD" lengthBit="0"/>
      </Bytes></msisdn.C2.BoxedType>
   </sm_RP_OA.Choice>
   <sm_RP_UI.BoxedType><Bytes>
      <element tag="Byte1" coding="V" description="First byte of the data" comment="">
        <field name="TP-RP" value="TP Reply Path parameter is not set in this SMS SUBMIT/DELIVER:0" type="enumeration" lengthBit="1" description="TP Reply Path"/>
        <field name="TP-UDHI" value="The TP UD field contains only the short message:0" type="enumeration" lengthBit="1" description="TP User Data Header Indicator" comment="Parameter indicating that the TP UD field contains a Header."/>
        <field name="TP-SRR" value="A status report is not requested:0" type="enumeration" lengthBit="1" description="TP Status Report Request" comment="Parameter indicating if the MS is requesting a status report."/>
        <field name="TP-VPF" value="TP VP field present - relative format:2" type="enumeration" lengthBit="2" description="TP Validity Period Format" comment="Parameter indicating whether or not the TP VP field is present."/>
        <field name="TP-RD" value="Instruct the SC to accept duplicates:0" type="enumeration" lengthBit="1" description="TP Reject Duplicates" comment="Parameter indicating whether or not the SC shall accept an SMS SUBMIT for an SM still held in the SC which has the same TP MR and the same TP DA as a previously submitted SM from the same OA."/>
        <field name="TP-MTI" value="SMS-SUBMIT / SMS-SUBMIT-REPORT:1" type="enumeration" lengthBit="2" description="TP Message Type Indicator" comment="Parameter describing the message type."/>
      </element>
      <element tag="TP-MR" coding="V" description="TP Message Reference" comment="Parameter identifying the SMS SUBMIT.">
        <field name="TP-MR" value="8" type="integer" lengthBit="8" description="TP Message Reference" comment="Parameter identifying the SMS SUBMIT."/>
      </element>
      <element tag="TP-DA" coding="DV" description="TP Destination Address" comment="Address of the destination SME.">
        <!--field name="length" value="11" type="integer" lengthBit="8" description="length"/-->
    		<field name="extension" value="no extension:1" type="enumeration" lengthBit="1" description="extension"/>
        <field name="nature of address" value="international number:1" type="enumeration" lengthBit="3" description="nature of address"/>
        <field name="numbering plan" value="ISDN/Telephony Numbering Plan (Rec ITU-T E.164):1" type="enumeration" lengthBit="4" description="numbering plan"/>
        <field name="digits" value="33660650767" type="number_bcd" description="digits"/>
      </element>
      <element tag="TP-PID" coding="V" description="TP Protocol Identifier" comment="Parameter identifying the above layer protocol, if any.">
    		<field name="assignment" value="Assigns bits 0..5 as defined below:0" type="enumeration" lengthBit="2" description="next bits assignment"/>
    		<field name="telematic interworking" value="no interworking, but SME to SME protocol:0" type="enumeration" lengthBit="1" description="telematic interworking"/>
    		<field name="telematic devices" value="implicit device type is specific to this SC,:0" type="enumeration" lengthBit="5" description="telematic devices"/>
      </element>
      <element tag="TP-DCS" coding="V" description="TP Data Coding Scheme" comment="Parameter identifying the coding scheme within the TP User Data.">
    		<field name="Coding Group Bits" value="General Data Coding indication:0" type="enumeration" lengthBit="2" description="Coding Group Bits"/>
    		<field name="Compression" value="the text is uncompressed:0" type="enumeration" lengthBit="1" description="Compression"/>
    		<field name="Bit 1 significance" value="bits 1 to 0 are reserved and have no message class meaning:0" type="enumeration" lengthBit="1" description="Bit 1 significance"/>
    		<field name="Alphabet" value="Default alphabet:0" type="enumeration" lengthBit="2" description="Alphabet"/>
    		<field name="Message Class" value="Class 0:0" type="enumeration" lengthBit="2" description="Message Class"/>
      </element>
      <element tag="TP-VP" coding="V" description="TP Validity Period" comment="Parameter identifying the time from where the message is no longer valid.">
        <field name="TP-VP" value="169" type="integer" lengthBit="8" description="TP Validity Period" comment="Parameter identifying the time from where the message is no longer valid."/>
      </element>
      <element tag="TP-UD" coding="LV" description="TP User Data" comment="">
        <!--field name="length" value="6" type="integer" lengthBit="8" description="length"/-->
        <field name="TP-UD" value="ssssss" type="string" lengthBit="0" description=""/>
      </element>
   </Bytes></sm_RP_UI.BoxedType>
   <extensionContainer.Sequence>
      <privateExtensionList.C0.BoxedType>
         <Collection>
            <PrivateExtension.Sequence>
               <extId><ObjectIdentifier>0.1.222.35.11.52.104.22.123</ObjectIdentifier></extId>
               <extType>04085c922b75c6ded44d</extType>
            </PrivateExtension.Sequence>
            <PrivateExtension.Sequence>
               <extId><ObjectIdentifier>0.1.245</ObjectIdentifier></extId>
               <extType>04063d8915be8dde</extType>
            </PrivateExtension.Sequence>
            <PrivateExtension.Sequence>
               <extId><ObjectIdentifier>0.1.274.17.8.71.43.36</ObjectIdentifier></extId>
               <extType>041026cf0456a92341cb4a61c30bd6afcda5</extType>
            </PrivateExtension.Sequence>
        </Collection>
      </privateExtensionList.C0.BoxedType>
      <pcsExtensions.C1.Sequence></pcsExtensions.C1.Sequence>
   </extensionContainer.Sequence>
   <imsi.BoxedType><Bytes>0412a7e4d2d8403c48e55e751d4f5f5ef0d57a55</Bytes></imsi.BoxedType>
</Mo_forwardSM_Arg.Sequence>]]></parameter>
    <parameter name="[asn]" operation="set" value="3081888407913366600567f98207913366317071f3041411080b913366600567f70000a9067373737373733048a0443015060901815e230b3468167b04085c922b75c6ded44d300d060301817504063d8915be8dde301c06080182121108472b24041026cf0456a92341cb4a61c30bd6afcda5a10004140412a7e4d2d8403c48e55e751d4f5f5ef0d57a55"/>
    
    <parameter name="[asnresult]" operation="binary.xmlToAsn" value="[xml]" value2="com.devoteam.srit.xmlloader.sigtran.ap.map.Mo_forwardSM_Arg" value3="map/dictionary_MAP .xml"/>
    <test parameter="[asnresult]" condition="binary.equals" value="[asn]" />
    <parameter name="[xmlresult]" operation="binary.asnToXml" value="[asn]" value2="com.devoteam.srit.xmlloader.sigtran.ap.map.Mo_forwardSM_Arg" value3="map/dictionary_MAP.xml"/>
    <parameter name="[xml]" operation="string.regexReplaces" value="[xml]" value2=" " value3=""/>
    <parameter name="[xmlresult]" operation="string.regexReplaces" value="[xmlresult]" value2=" " value3=""/>
    <test parameter="[xmlresult]" condition="string.equals" value="[xml]" />
    
</scenario>
