<?xml version="1.0" encoding="UTF-8"?>

<scenario>

	<parameter name="[string]" operation="set" value="aABb"/>           
	<test parameter="[string]" condition="string.equals" value="aABb" />
	<parameter name="[boolean]" value="[string]" operation="string.equals" value2="aABb" />
	<test parameter="[boolean]" condition="boolean.equals" value="true" />
	
	<test parameter="[string]" condition="string.equalsignorecase" value="AABB" />
	<parameter name="[boolean]" value="[string]" operation="string.equalsignorecase" value2="aabb" />
	<test parameter="[boolean]" condition="boolean.equals" value="true" />

	<parameter name="[result]" operation="string.tolowercase" value="[string]" />
	<test parameter="[result]" condition="string.equals" value="aabb" />

	<parameter name="[result]" operation="string.touppercase" value="[string]" />
	<test parameter="[result]" condition="string.equals" value="AABB" />

	<test parameter="[string]" condition="string.startswith" value="aA" />
	<test parameter="[string]" condition="string.endswith" value="Bb" />

	<parameter name="[result]" operation="string.length" value="[string]" />
	<test parameter="[result]" condition="number.equals" value="4" />

	<parameter name="[result]" operation="string.indexof" value="[string]" value2="AB"/>
	<test parameter="[result]" condition="number.equals" value="1" />

	<parameter name="[result]" operation="string.substring" value="[string]" value2="1" value3="2"/>
	<test parameter="[result]" condition="string.equals" value="AB" />
	<parameter name="[result]" operation="string.substring" value="[string]" value2="0" value3="1"/>
	<test parameter="[result]" condition="string.equals" value="aA" />
	<parameter name="[result]" operation="string.substring" value="[string]" value2="1"/>
	<test parameter="[result]" condition="string.equals" value="ABb" />
	<parameter name="[result]" operation="string.substring" value="[string]" value2="1" value3="100000"/>
	<test parameter="[result]" condition="string.equals" value="ABb" />

	<parameter name="[string]" operation="set">
	 1aABbxyz           
  </parameter>
  <test parameter="[string]" condition="string.matches" value="[aAbB]*" />
  <parameter name="[boolean]" value="[string]" operation="string.matches" value2="[:digit:]{1}[aAbB]{4}[:alnum:]{3}" />
	<test parameter="[boolean]" condition="boolean.equals" value="true" />
	
	<test parameter="[string]" condition="string.contains" value="AB" />
	<parameter name="[boolean]" value="[string]" operation="string.contains" value2="AB" />
	<test parameter="[boolean]" condition="boolean.equals" value="true" />
	
	<parameter name="[size]" operation="string.length" value="0123456789"/>
	<parameter name="[result]" operation="string.substring" value="0123456789" value2="2"/>
	<test parameter="[result]" condition="string.equals" value="23456789" />

	<parameter name="[size]" operation="string.length" value="0123456789"/>
	<parameter name="[result]" operation="string.substring" value="0123456789" value2="2" value3="[size]"/>
	<test parameter="[result]" condition="string.equals" value="23456789" />

	<parameter name="[size]" operation="string.length" value="0123456789"/>
	<parameter name="[result]" operation="string.substring" value="0123456789" value2="2" value3="99"/>
	<test parameter="[result]" condition="string.equals" value="23456789" />

	<parameter name="[result]" operation="string.regexmatches" value="123456789" value2="[2-8]*"/>
	<test parameter="[result]" condition="string.equals" value="2345678" />

	<parameter name="[content]" operation="set">
<![CDATA[
Response: TransactionID=1100000000 ExecutionStatus=6
TransparentData=""
CalculatedMoney.Currency=-
CalculatedMoney.Amount=1
ErrorList.noMoneyFlow=true
ErrorList.list={...}
]]>
	</parameter>
	<parameter name="[result]" operation="string.regexmatches" value="[content]" value2="Response:.*"/>
	<parameter name="[result]" operation="string.regexmatches" value="[result]" value2="ExecutionStatus=.*"/>
	<parameter name="[result]" operation="string.regexmatches" value="[result]" value2="=.*"/>		
	<parameter name="[result]" operation="string.substring" value="[result]" value2="1"/>		
	<test parameter="[result]" condition="string.equals" value="6" />

	<parameter name="[result]" operation="string.regexreplaces" value="123456789" value2="[2-8]*" value3=""/>
	<test parameter="[result]" condition="string.equals" value="19" />

	<parameter name="[result]" operation="string.random" value="10" />
	<parameter name="[number]" operation="string.length" value="[result]" />
	<test parameter="[number]" condition="number.equals" value="10" />

	<parameter name="[result]" operation="string.digest" value="mystring" value2="MD5" />
	<parameter name="[number]" operation="string.length" value="[result]" />
	<test parameter="[number]" condition="number.equals" value="32" />

	<parameter name="[string]" operation="list.set" value="valuesepvaluesepvalue" />
	<parameter name="[string]" operation="string.split" value="[string]" value2="sep" />
	<test parameter="[string]" condition="string.equals" value="value" />
	<test parameter="[string]" condition="list.size" value="3" />


	<!-- WWW-Authenticate: Digest realm="sip.mobistar.fr",domain="sip:ttcnserver@sip.mobistar.fr",nonce="1af6e6744f2880715614625e0da87566",stale=false,qop="auth",algorithm=MD5-->
	<!-- Authorization: Digest username="33975621672@sip.mobistar.com", realm="sip.mobistar.fr", nonce="1af6e6744f2880715614625e0da87566", algorithm=MD5, opaque="", uri="sip:sip.mobistar.com:5060", response="2f7b84fada58e09b82fd42e6cde8c3e5", cnonce="11fc4a0e", qof=auth, nc=00000001 -->

	<parameter name="[UserName]"   operation="set" value="33975621672@sip.mobistar.com" />
	<parameter name="[Realm]"      operation="set" value="sip.mobistar.fr" />
	<parameter name="[Password]"   operation="set" value="imt30imt30" />
	<parameter name="[Method]"     operation="set" value="REGISTER" />
	<parameter name="[URI]"        operation="set" value="sip:sip.mobistar.com:5060" />
	<parameter name="[Nonce]"      operation="set" value="1af6e6744f2880715614625e0da87566" />
	<parameter name="[NonceCount]" operation="set" value="00000001" />
	<parameter name="[CNonce]"     operation="set" value="11fc4a0e" />
	<parameter name="[QOp]"        operation="set" value="auth" />


	<parameter name="[HA1]" operation="string.digest" value="[UserName]:[Realm]:[Password]" value2="MD5" />
	<parameter name="[HA2]" operation="string.digest" value="[Method]:[URI]" value2="MD5" />
  <parameter name="[Response]" operation="string.digest" value="[HA1]:[Nonce]:[NonceCount]:[CNonce]:[QOp]:[HA2]" value2="MD5" />
  <test parameter="[Response]" condition="binary.equals" value="2f7b84fada58e09b82fd42e6cde8c3e5"/>

	<parameter name="[result]" operation="string.hmac" value="mystring" value2="HmacMD5" value3="mykey" />
	<parameter name="[number]" operation="string.length" value="[result]" />
	<test parameter="[number]" condition="number.equals" value="32" />

	<parameter name="[result]" operation="string.trim" value=" essai       " />
	<test parameter="[result]" condition="string.equals" value="essai" />

</scenario>
