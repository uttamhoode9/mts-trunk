<?xml version="1.0" encoding="ISO-8859-15"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->
<!-- name="Send 3GPP S6 Authentication (AIR/AIA)" -->

<scenario>

    <call name="diameter.openChannel_SendCER_RecCEA"/>

    <parameter name="[normalString]" operation="set"><![CDATA[ ²&amp;é&quot;&apos;(-è_çà)= azertyuiop^$qsdfghjklmù*&lt;wxcvbn,;:!]]></parameter>            
    <parameter name="[shiftString]" operation="set"><![CDATA[ 1234567890°+AZERTYUIOP¨£QSDFGHJKLM%œ&gt;WXCVBN?./§ ]]></parameter>        
    <parameter name="[altgrString]" operation="set"><![CDATA[ €¤~#{[|`\^@]} ]]></parameter>    
    <parameter name="[AccentString]" operation="set"><![CDATA[ âêûîôÂÊÛÎÔäëüïöÄËÜÏÖ ]]></parameter>    
    
    <parameter name="[binaryAll]" operation="set" value=""/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]000102030405060708090a0b0c0d0e0f"/>    
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]101112131415161718191a1b1c1d1e1f"/>    
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]202122232425262728292a2b2c2d2e2f"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]303132333435363738393a3b3c3d3e3f"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]404142434445464748494a4b4c4d4e4f"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]505152535455565758595a5b5c5d5e5f"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]606162636465666768696a6b6c6d6e6f"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]707172737475767778797a7b7c7d7e7f"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]808182838485868788898a8b8c8d8e8f"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]909192939495969798999a9b9c9d9e9f"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]a0a1a2a3a4a5a6a7a8a9aaabacadaeaf"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]b0b1b2b3b4b5b6b7b8b9babbbcbdbebf"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]c0c1c2c3c4c5c6c7c8c9cacbcccdcecf"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]d0d1d2d3d4d5d6d7d8d9dadbdcdddedf"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]e0e1e2e3e4e5e6e7e8e9eaebecedeeef"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]f0f1f2f3f4f5f6f7f8f9fafbfcfdfeff"/>                
        
    <!-- prepare the EAP data to send -->
    <parameter name="[messageEAP]" operation="set">
<![CDATA[
<element label="MessageEAP" coding="Message" value="" description="">
    <!-- Header => IETF RFC 3748 chapter 4.1 page 21 -->
    <element label="HeaderEAP" coding="V" description="">
      <field name="Code" value="Response:2" type="EnumLong" length="1" description=""/>          
      <field name="Id" value="1" length="1" type="Integer" description=""/>            
      <field name="Length" value="0" length="2" type="Integer" description=""/>
      <field name="Type" value="EAP-AKA:23" length="1" type="EnumLong" description=""/>
    </element>
    <element label="Message_EAP-AKA_23" coding="V" description="">                
      <field name="EAP AKA Subtype" value="AKA-Identity:5" length="1" type="EnumLong" description=""/>                      
      <field name="EAP AKA Reserved" value="0" length="2" type="Integer" description=""/>
    </element>   
    <!-- Message "UMTS Authentication and Key Agreement EAP_23 (EAP-AKA) => IETF RFC 4187 chapter 8.1 page 45 -->          
    <element tag="AT_IDENTITY:14" coding="EAPLength" description="">    
        <field name="Value" value="123456" type="String" description=""/>
    </element>               
    <element tag="AT_IDENTITY:14" coding="EAPLength" description="">    
        <field name="Value" value="1234567" type="String" description=""/>
    </element>
    <element tag="AT_IDENTITY:14" coding="EAPLength" description="">    
        <field name="Value" value="12345678" type="String" description=""/>
    </element>            
    <element tag="AT_IDENTITY:14" coding="EAPLength" description="">    
        <field name="Value" value="123456789" type="String" description=""/>
    </element>
    <element tag="AT_IDENTITY:14" coding="EAP" description=""> 
        <field name="Actual length" value="20" type="Integer" length="2" description=""></field>       
        <field name="Value" value="123456789abcde" type="String" description=""/>
    </element>
    <element tag="AT_IDENTITY:14" coding="EAP" description=""> 
        <field name="Actual length" value="8" type="Integer" length="2" description=""/>       
        <field name="Value" value="123456789abcd" type="String" description=""/>
    </element>                                    
    <element tag="AT_IDENTITY:14" coding="EAPLength" description="">    
        <!--field name="Value" value="[normalString]" type="String" description=""></field-->
        <field name="Value" value="[normalString]" type="String" description=""></field>
    </element>
    <element tag="AT_IDENTITY:14" coding="EAPLength" description="">    
        <field name="Value" value="[shiftString]" type="String" description=""></field>
    </element>                                                                                                                                                    
    <element tag="AT_IDENTITY:14" coding="EAPLength" description="">    
        <field name="Value" value="[altgrString]" type="String" description=""/>
    </element>
    <element tag="AT_IDENTITY:14" coding="EAPLength" description="">    
        <field name="Value" value="[accentString]" type="String" description=""/>
    </element>    
    <element tag="AT_IDENTITY:14" coding="EAPLength" description="">    
        <field name="Value" value="[binaryAll]" type="Binary" description=""/>
    </element>    
</element>
]]>
</parameter>
    <parameter name="[binInputEAP]" operation="binary.elementFromXml" value="[messageEAP]" value2="binary/dictionary_EAP.xml"/>
    
    <!-- check the EAP data to send -->
    <!--test parameter="[binInputEAP]" condition="binary.equals" value="0201002e041401020304050607080910111213141516171819206162636465666768696a4a494847464544434241"/-->

    <call name="diameter.SendDER_RecDEA">
      <input>     
        <parameter name="[function:binInputEAP]" value="[binInputEAP]" />
        <parameter name="[function:EAPType]" value="AKA-Identity:5"/>
        <parameter name="[function:EAPResult]" value="AKA-Identity:5"/>
      </input>
      <output> 
    		<parameter name="[binOutputEAP]" value="[function:binOutputEAP]" />
      </output>                      
    </call>    

    <!-- check the EAP data to send -->
    <parameter name="[xmlEAP]" operation="binary.elementToXml" value="[binOutputEAP]" value2="binary/dictionary_EAP.xml"/>
    <parameter name="[Code]" operation="string.xpath" value="[xmlEAP]" value2="//element[@label='HeaderEAP']/field[@name='Code']/attribute::value"/>
    <test parameter="[Code]" condition="string.equals" value="Response:2"/>
    <parameter name="[Id]" operation="string.xpath" value="[xmlEAP]" value2="//element[@label='HeaderEAP']/field[@name='Id']/attribute::value"/>
    <test parameter="[Id]" condition="number.equals" value="1"/>
    <parameter name="[Length]" operation="string.xpath" value="[xmlEAP]" value2="//element[@label='HeaderEAP']/field[@name='Length']/attribute::value"/>
    <test parameter="[Length]" condition="number.equals" value="512"/>
    <parameter name="[Type]" operation="string.xpath" value="[xmlEAP]" value2="//element[@label='HeaderEAP']/field[@name='Type']/attribute::value"/>
    <test parameter="[Type]" condition="string.equals" value="EAP-AKA:23"/>
    <parameter name="[EAP_AKA_Subtype]" operation="string.xpath" value="[xmlEAP]" value2="//element[@label='Message_EAP-AKA_23']/field[@name='EAP AKA Subtype']/attribute::value"/>
    <test parameter="[EAP_AKA_Subtype]" condition="string.equals" value="AKA-Identity:5"/>
    <parameter name="[EAP_AKA_Reserved]" operation="string.xpath" value="[xmlEAP]" value2="//element[@label='Message_EAP-AKA_23']/field[@name='EAP AKA Reserved']/attribute::value"/>
    <test parameter="[EAP_AKA_Reserved]" condition="string.equals" value="0"/>
    <parameter name="[IdentityValue]" operation="string.xpath" value="[xmlEAP]" value2="//element[@tag='AT_IDENTITY:14']/field[@name='Value']/attribute::value"/>
    <test parameter="[IdentityValue(0)]" condition="string.equals" value="123456"/>
    <test parameter="[IdentityValue(1)]" condition="string.equals" value="1234567"/>    
    <test parameter="[IdentityValue(2)]" condition="string.equals" value="12345678"/>
    <test parameter="[IdentityValue(3)]" condition="string.equals" value="123456789"/>        
    <test parameter="[IdentityValue(4)]" condition="string.equals" value="123456789abcde"/>
    <test parameter="[IdentityValue(5)]" condition="string.equals" value="12345678"/>        
    <parameter name="[normalString]" operation="string.regexreplaces" value="[normalString]" value2="&amp;gt;" value3="&gt;"/>    
    <parameter name="[normalString]" operation="string.regexreplaces" value="[normalString]" value2="&amp;lt;" value3="&lt;"/>
    <parameter name="[normalString]" operation="string.regexreplaces" value="[normalString]" value2="&amp;quot;" value3="&quot;"/>  
    <parameter name="[normalString]" operation="string.regexreplaces" value="[normalString]" value2="&amp;apos;" value3="&apos;"/>
    <parameter name="[normalString]" operation="string.regexreplaces" value="[normalString]" value2="&amp;amp;" value3="&amp;"/>                  
    <test parameter="[IdentityValue(6)]" condition="string.equals" value="[normalString]"/>
    <parameter name="[shiftString]" operation="string.regexreplaces" value="[shiftString]" value2="&amp;gt;" value3="&gt;"/>    
    <parameter name="[shiftString]" operation="string.regexreplaces" value="[shiftString]" value2="&amp;lt;" value3="&lt;"/>
    <parameter name="[shiftString]" operation="string.regexreplaces" value="[shiftString]" value2="&amp;quot;" value3="&quot;"/>  
    <parameter name="[shiftString]" operation="string.regexreplaces" value="[shiftString]" value2="&amp;apos;" value3="&apos;"/>
    <parameter name="[shiftString]" operation="string.regexreplaces" value="[shiftString]" value2="&amp;amp;" value3="&amp;"/>                              
    <test parameter="[IdentityValue(7)]" condition="string.equals" value="[shiftString]"/>
    <parameter name="[altgrString]" operation="string.regexreplaces" value="[altgrString]" value2="&amp;gt;" value3="&gt;"/>    
    <parameter name="[altgrString]" operation="string.regexreplaces" value="[altgrString]" value2="&amp;lt;" value3="&lt;"/>
    <parameter name="[altgrString]" operation="string.regexreplaces" value="[altgrString]" value2="&amp;quot;" value3="&quot;"/>  
    <parameter name="[altgrString]" operation="string.regexreplaces" value="[altgrString]" value2="&amp;apos;" value3="&apos;"/>
    <parameter name="[altgrString]" operation="string.regexreplaces" value="[altgrString]" value2="&amp;amp;" value3="&amp;"/>                                  
    <test parameter="[IdentityValue(8)]" condition="string.equals" value="[altgrString]"/>            
    <parameter name="[accentString]" operation="string.regexreplaces" value="[accentString]" value2="&amp;gt;" value3="&gt;"/>    
    <parameter name="[accentString]" operation="string.regexreplaces" value="[accentString]" value2="&amp;lt;" value3="&lt;"/>
    <parameter name="[accentString]" operation="string.regexreplaces" value="[accentString]" value2="&amp;quot;" value3="&quot;"/>  
    <parameter name="[accentString]" operation="string.regexreplaces" value="[accentString]" value2="&amp;apos;" value3="&apos;"/>
    <parameter name="[accentString]" operation="string.regexreplaces" value="[accentString]" value2="&amp;amp;" value3="&amp;"/>                                  
    <test parameter="[IdentityValue(9)]" condition="string.equals" value="[accentString]"/>    
    <test parameter="[IdentityValue(10)]" condition="binary.equals" value="[binaryAll]"/>               
    <parameter name="[stringAll]" operation="binary.ToString" value="[binaryAll]" value2="ISO-8859-15"/>        
    <parameter name="[stringAll]" operation="string.regexreplaces" value="[stringAll]" value2="&amp;gt;" value3="&gt;"/>    
    <parameter name="[stringAll]" operation="string.regexreplaces" value="[stringAll]" value2="&amp;lt;" value3="&lt;"/>
    <parameter name="[stringAll]" operation="string.regexreplaces" value="[stringAll]" value2="&amp;quot;" value3="&quot;"/>
    <parameter name="[stringAll]" operation="string.regexreplaces" value="[stringAll]" value2="&amp;apos;" value3="&apos;"/>    
    <parameter name="[stringAll]" operation="string.regexreplaces" value="[stringAll]" value2="&amp;amp;" value3="&amp;"/>    
    <parameter name="[IdentityValue9Str]" operation="binary.ToString" value="[IdentityValue(10)]" value2="ISO-8859-15"/>                                    
    <test parameter="[IdentityValue9Str]" condition="string.equals" value="[stringAll]"/>

    <parameter name="[Code]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.HeaderEAP.field.Code" value3="binary/dictionary_EAP.xml"/>
    <test parameter="[Code]" condition="string.equals" value="Response:2"/>    
    <parameter name="[Id]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.HeaderEAP.field.Id" value3="binary/dictionary_EAP.xml"/>
    <test parameter="[Id]" condition="number.equals" value="1"/>
    <parameter name="[Length]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.HeaderEAP.field.Length" value3="binary/dictionary_EAP.xml"/>
    <test parameter="[Length]" condition="number.equals" value="512"/>
    <parameter name="[Type]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.HeaderEAP.field.Type" value3="binary/dictionary_EAP.xml"/>    
    <test parameter="[Type]" condition="string.equals" value="EAP-AKA:23"/>
    <parameter name="[EAP_AKA_Subtype]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.Message_EAP-AKA_23.field.EAP AKA Subtype" value3="binary/dictionary_EAP.xml"/>    
    <test parameter="[EAP_AKA_Subtype]" condition="string.equals" value="AKA-Identity:5"/>
    <parameter name="[EAP_AKA_Subtype]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.Message_EAP-AKA_23.field.EAP AKA Reserved" value3="binary/dictionary_EAP.xml"/>    
    <test parameter="[EAP_AKA_Reserved]" condition="string.equals" value="0"/>
    <parameter name="[IdentityBin]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.AT_IDENTITY:14" value3="binary/dictionary_EAP.xml"/>    
    <test parameter="[IdentityBin(0)]" condition="binary.equals" value="0E0300063132333435360000"/>
    <test parameter="[IdentityBin(1)]" condition="binary.equals" value="0E0300073132333435363700"/>    
    <test parameter="[IdentityBin(2)]" condition="binary.equals" value="0E0300083132333435363738"/>
    <test parameter="[IdentityBin(3)]" condition="binary.equals" value="0E040009313233343536373839000000"/>
    <test parameter="[IdentityBin(4)]" condition="binary.equals" value="0E05000e31323334353637383961626364650000"/>            
    <test parameter="[IdentityBin(5)]" condition="binary.equals" value="0E0300083132333435363738"/>
    <parameter name="[normalBinary]" operation="string.ToBinary" value="[normalString]" value2="ISO-8859-15"/>    
    <test parameter="[IdentityBin(6)]" condition="binary.equals" value="0E0E0032[normalBinary]0000"/>
    <parameter name="[shiftBinary]" operation="string.ToBinary" value="[shiftString]" value2="ISO-8859-15"/>    
    <test parameter="[IdentityBin(7)]" condition="binary.equals" value="0E0e0031[shiftBinary]000000"/>
    <parameter name="[altgrBinary]" operation="string.ToBinary" value="[altgrString]" value2="ISO-8859-15"/>    
    <test parameter="[IdentityBin(8)]" condition="binary.equals" value="0E05000f[altgrBinary]00"/>
    <parameter name="[accentBinary]" operation="string.ToBinary" value="[accentString]" value2="ISO-8859-15"/>    
    <test parameter="[IdentityBin(9)]" condition="binary.equals" value="0E05000e[accentBinary]0000"/>                    
    <test parameter="[IdentityBin(10)]" condition="binary.equals" value="0E410100[binaryAll]"/>
    <parameter name="[Identity]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.AT_IDENTITY:14.field.Value" value3="binary/dictionary_EAP.xml"/>    
    <test parameter="[Identity(0)]" condition="string.equals" value="123456"/>
    <test parameter="[Identity(1)]" condition="string.equals" value="1234567"/>    
    <test parameter="[Identity(2)]" condition="string.equals" value="12345678"/>
    <test parameter="[Identity(3)]" condition="string.equals" value="123456789"/>
    <test parameter="[Identity(4)]" condition="string.equals" value="123456789abcde"/>
    <test parameter="[Identity(5)]" condition="string.equals" value="12345678"/>    
    <test parameter="[Identity(6)]" condition="string.equals" value="[normalString]"/>    
    <test parameter="[Identity(7)]" condition="string.equals" value="[shiftString]"/>
    <test parameter="[Identity(8)]" condition="string.equals" value="[altgrString]"/>
    <test parameter="[Identity(9)]" condition="string.equals" value="[accentString]"/>    
    <test parameter="[Identity(10)]" condition="string.equals" value="[stringAll]"/>
    <parameter name="[IdentityValue10bin]" operation="string.toBinary" value="[Identity(10)]" value2="ISO-8859-15"/>
    <test parameter="[IdentityValue10bin]" condition="binary.equals" value="[binaryAll]"/>    
                
    <parameter name="[IdentityOff]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.AT_IDENTITY:14.field.Value.offset" value3="binary/dictionary_EAP.xml"/>    
    <test parameter="[IdentityOff]" condition="number.equals" value="0"/>
    <parameter name="[IdentityLen]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.AT_IDENTITY:14.field.Value.length" value3="binary/dictionary_EAP.xml"/>    
    <test parameter="[IdentityLen]" condition="list.isEmpty"/>    
    <parameter name="[IdentityLen]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.AT_IDENTITY:14.field.Value.lengthBit" value3="binary/dictionary_EAP.xml"/>    
    <test parameter="[IdentityLen]" condition="list.isEmpty"/>    
    
    <!-- prepare the EAP data to send -->
    <parameter name="[messageEAP]" operation="set">
<![CDATA[
<element label="MessageEAP" coding="Message" value="" description="">
    <!-- Header => IETF RFC 3748 chapter 4.1 page 21 -->
    <element label="HeaderEAP" coding="V" description="">
      <field name="Code" value="Response:2" type="EnumLong" length="1" description=""/>          
      <field name="Id" value="1" length="1" type="Integer" description=""/>            
      <field name="Length" value="0" length="2" type="Integer" description=""/>          
      <field name="Type" value="MD5-Challenge:4" length="1" type="EnumLong" description=""/>
    </element> 
    <!-- Message "MD5-Challenge:4" => IETF RFC 3748 chapter 5.4 page 34 -->                  
    <element label="Message_MD5-Challenge_4" coding="V" description="">
        <element label="value" coding="LV" description="">
            <field name="value" value="0102030405060708091011121314151617181920" description=""/>
        </element>    
        <element label="name" coding="V" description="">
            <field name="name" value="abcdefghijJIHGFEDCBA" description=""/>
        </element>    
    </element>
</element>           
]]>
</parameter>
    <parameter name="[binInputEAP]" operation="binary.elementFromXml" value="[messageEAP]" value2="binary/dictionary_EAP.xml"/>
  
    <!-- check the EAP data to send -->
    <!--test parameter="[binInputEAP]" condition="binary.equals" value="0201002e041401020304050607080910111213141516171819206162636465666768696a4a494847464544434241"/-->
  
    <call name="diameter.SendDER_RecDEA">
      <input>     
        <parameter name="[function:binInputEAP]" value="[binInputEAP]" />
        <parameter name="[function:EAPType]" value="MD5-Challenge:4"/>
        <parameter name="[function:EAPResult]" value="MD5-Challenge:4"/>                
      </input>
      <output> 
    		<parameter name="[binOutputEAP]" value="[function:binOutputEAP]" />
      </output>                      
    </call>    

    <!-- check the EAP data to send -->
    <parameter name="[xmlEAP]" operation="binary.elementToXml" value="[binOutputEAP]" value2="binary/dictionary_EAP.xml"/>
    <parameter name="[Code]" operation="string.xpath" value="[xmlEAP]" value2="//element[@label='HeaderEAP']/field[@name='Code']/attribute::value"/>
    <test parameter="[Code]" condition="string.equals" value="Response:2"/>
    <parameter name="[Id]" operation="string.xpath" value="[xmlEAP]" value2="//element[@label='HeaderEAP']/field[@name='Id']/attribute::value"/>
    <test parameter="[Id]" condition="number.equals" value="1"/>
    <parameter name="[Length]" operation="string.xpath" value="[xmlEAP]" value2="//element[@label='HeaderEAP']/field[@name='Length']/attribute::value"/>
    <test parameter="[Length]" condition="number.equals" value="46"/>
    <parameter name="[Type]" operation="string.xpath" value="[xmlEAP]" value2="//element[@label='HeaderEAP']/field[@name='Type']/attribute::value"/>
    <test parameter="[Type]" condition="string.equals" value="MD5-Challenge:4"/>
    <parameter name="[MD5-value]" operation="string.xpath" value="[xmlEAP]" value2="//element[@label='Message_MD5-Challenge_4']/element[@label='value']/field[@name='value']/attribute::value"/>
    <test parameter="[MD5-value]" condition="binary.equals" value="0102030405060708091011121314151617181920"/>
    <parameter name="[MD5-name]" operation="string.xpath" value="[xmlEAP]" value2="//element[@label='Message_MD5-Challenge_4']/element[@label='name']/field[@name='name']/attribute::value"/>
    <test parameter="[MD5-name]" condition="string.equals" value="abcdefghijJIHGFEDCBA"/>

    <parameter name="[Code]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.HeaderEAP.field.Code" value3="binary/dictionary_EAP.xml"/>
    <test parameter="[Code]" condition="string.equals" value="Response:2"/>    
    <parameter name="[Id]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.HeaderEAP.field.Id" value3="binary/dictionary_EAP.xml"/>
    <test parameter="[Id]" condition="number.equals" value="1"/>
    <parameter name="[Length]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.HeaderEAP.field.Length" value3="binary/dictionary_EAP.xml"/>
    <test parameter="[Length]" condition="number.equals" value="46"/>
    <parameter name="[Type]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.HeaderEAP.field.Type" value3="binary/dictionary_EAP.xml"/>    
    <test parameter="[Type]" condition="string.equals" value="MD5-Challenge:4"/>
    <parameter name="[MD5-value]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.Message_MD5-Challenge_4.value.field.value" value3="binary/dictionary_EAP.xml"/>    
    <test parameter="[MD5-value]" condition="binary.equals" value="0102030405060708091011121314151617181920"/>
    <parameter name="[MD5-name]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.Message_MD5-Challenge_4.name.field.name" value3="binary/dictionary_EAP.xml"/>    
    <test parameter="[MD5-name]" condition="string.equals" value="abcdefghijJIHGFEDCBA"/>

    <!-- prepare the EAP data to send -->
    <parameter name="[messageEAP]" operation="set">
<![CDATA[
<element label="MessageEAP" coding="Message" value="" description="">
    <!-- Header => IETF RFC 3748 chapter 4.1 page 21 -->
    <element label="HeaderEAP" coding="V" description="">
      <field name="Code" value="Response:2" type="EnumLong" length="1" description=""/>          
      <field name="Id" value="1" length="1" type="Integer" description=""/>            
      <field name="Length" value="0" length="2" type="Integer" description=""/>          
      <field name="Type" value="Expanded Types:254" length="1" type="EnumLong" description=""/>
    </element> 
    <!-- Message Expanded Types:254 => IETF RFC 3748 chapter 5.7 page 38 -->                  
    <element label="Message_Expanded Types:254" coding="V" description="">
        <field name="Vendor-Id" value="10000000" type="Integer" length="3" description=""/>
        <field name="Vendor-Type" value="3000000000" type="Integer" length="4" description=""/>
        <field name="Vendor-Data" value="303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f" type="Binary" description=""/>                
    </element>
    <!--element label="Message_Expanded Types:254" coding="V" description="">
        <field name="Vendor-Id" value="10000000" type="Integer" length="3" description=""/>
        <field name="Vendor-Type" value="3000000000" type="Integer" length="4" description=""/>
        <field name="Vendor-Data" value="303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f" type="Binary" description=""/>                
    </element-->    
</element>
]]>
</parameter>
    <parameter name="[binInputEAP]" operation="binary.elementFromXml" value="[messageEAP]" value2="binary/dictionary_EAP.xml"/>
    
    <!-- check the EAP data to send -->
    <test parameter="[binInputEAP]" condition="binary.equals" value="0201002cfe989680b2d05e00303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f"/>

    <call name="diameter.SendDER_RecDEA">
      <input>     
        <parameter name="[function:binInputEAP]" value="[binInputEAP]" />
        <parameter name="[function:EAPType]" value="Expanded Types:254"/>
        <parameter name="[function:EAPResult]" value="Expanded Types:254"/>
      </input>
      <output> 
    		<parameter name="[binOutputEAP]" value="[function:binOutputEAP]" />
      </output>                      
    </call>    

    <!-- check the EAP data to send -->
    <parameter name="[xmlEAP]" operation="binary.elementToXml" value="[binOutputEAP]" value2="binary/dictionary_EAP.xml"/>
    <parameter name="[Code]" operation="string.xpath" value="[xmlEAP]" value2="//element[@label='HeaderEAP']/field[@name='Code']/attribute::value"/>
    <test parameter="[Code]" condition="string.equals" value="Response:2"/>
    <parameter name="[Id]" operation="string.xpath" value="[xmlEAP]" value2="//element[@label='HeaderEAP']/field[@name='Id']/attribute::value"/>
    <test parameter="[Id]" condition="number.equals" value="1"/>
    <parameter name="[Length]" operation="string.xpath" value="[xmlEAP]" value2="//element[@label='HeaderEAP']/field[@name='Length']/attribute::value"/>
    <test parameter="[Length]" condition="number.equals" value="44"/>
    <parameter name="[Type]" operation="string.xpath" value="[xmlEAP]" value2="//element[@label='HeaderEAP']/field[@name='Type']/attribute::value"/>
    <test parameter="[Type]" condition="string.equals" value="Expanded Types:254"/>
    <parameter name="[vendorId]" operation="string.xpath" value="[xmlEAP]" value2="//element[@label='Message_Expanded Types_254']/field[@name='Vendor-Id']/attribute::value"/>
    <test parameter="[vendorId]" condition="number.equals" value="10000000"/>
    <parameter name="[vendorType]" operation="string.xpath" value="[xmlEAP]" value2="//element[@label='Message_Expanded Types_254']/field[@name='Vendor-Type']/attribute::value"/>
    <test parameter="[vendorType]" condition="number.equals" value="3000000000"/>
    <parameter name="[vendorData]" operation="string.xpath" value="[xmlEAP]" value2="//element[@label='Message_Expanded Types_254']/field[@name='Vendor-Data']/attribute::value"/>
    <test parameter="[vendorData]" condition="binary.equals" value="303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f"/>

    <parameter name="[Code]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.HeaderEAP.field.Code" value3="binary/dictionary_EAP.xml"/>
    <test parameter="[Code]" condition="string.equals" value="Response:2"/>
    <parameter name="[Id]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.HeaderEAP.field.Id" value3="binary/dictionary_EAP.xml"/>
    <test parameter="[Id]" condition="number.equals" value="1"/>
    <parameter name="[Length]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.HeaderEAP.field.Length" value3="binary/dictionary_EAP.xml"/>
    <test parameter="[Length]" condition="number.equals" value="44"/>
    <parameter name="[Type]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.HeaderEAP.field.Type" value3="binary/dictionary_EAP.xml"/>
    <test parameter="[Type]" condition="string.equals" value="Expanded Types:254"/>
    <parameter name="[vendorId]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.Message_Expanded Types_254.field.Vendor-Id" value3="binary/dictionary_EAP.xml"/>    
    <test parameter="[vendorId]" condition="number.equals" value="10000000"/>    
    <parameter name="[vendorType]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.Message_Expanded Types_254.field.Vendor-Type" value3="binary/dictionary_EAP.xml"/>
    <test parameter="[vendorType]" condition="number.equals" value="3000000000"/>
    <parameter name="[vendorData]" operation="binary.elementSetFrom" value="[binOutputEAP]" value2="element.Message_Expanded Types_254.field.Vendor-Data" value3="binary/dictionary_EAP.xml"/>    
    <test parameter="[vendorData]" condition="binary.equals" value="303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f"/>

</scenario>
