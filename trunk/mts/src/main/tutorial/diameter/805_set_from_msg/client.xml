<?xml version="1.0" encoding="UTF-8"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->
<!-- name="Send 3GPP CX Multimedia Authentication request (MAR/MAA)" -->

<scenario>

    <call name="diameter.openChannel_SendCER_RecCEA"/>

    <parameter name="[normalString]" operation="set"><![CDATA[ ²&é"'(-è_çà)= azertyuiop^$qsdfghjklmù*<wxcvbn,;:!]]></parameter>            
    <parameter name="[shiftString]" operation="set"><![CDATA[ 1234567890°+AZERTYUIOP£QSDFGHJKLM%µ>WXCVBN?./§ ]]></parameter>        
    <parameter name="[altgrString]" operation="set"><![CDATA[ €~#{[|`\^@]} ]]></parameter>    
    <parameter name="[accentString]" operation="set"><![CDATA[ âêûîôÂÊÛÎÔäëüïöÄËÜÏÖ ]]></parameter>
    <parameter name="[testcase:allString]" operation="set">[normalString][shiftString][altgrString][accentString]</parameter>
    <parameter name="[testcase:allBinary_UTF-8]" operation="string.toBinary" value="[testcase:allString]" value2="UTF-8"/>
    <parameter name="[testcase:allString_ISO-8859-15]" operation="binary.toString" value="[testcase:allBinary_UTF-8]" value2="ISO-8859-15"/>
            
    <parameter name="[binaryAll]" operation="set" value=""/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]000102030405060708090a0b0c0d0e0f"/>    
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]101112131415161718191a1b1c1d1e1f"/>    
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]202122232425262728292a2b2c2d2e2f"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]303132333435363738393a3b3c3d3e3f"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]404142434445464748494a4b4c4d4e4f"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]505152535455565758595a5b5c5d5e5f"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]606162636465666768696a6b6c6d6e6f"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]707172737475767778797a7b7c7d7e7f"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]808182838485868788898a8b8c8d8e8f"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]909192939495969798999a9b9c9d9e9f"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]a0a1a2a3a4a5a6a7a8a9aaabacadaeaf"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]b0b1b2b3b4b5b6b7b8b9babbbcbdbebf"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]c0c1c2c3c4c5c6c7c8c9cacbcccdcecf"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]d0d1d2d3d4d5d6d7d8d9dadbdcdddedf"/>
    <parameter name="[binaryAll]" operation="set" value="[binaryAll]e0e1e2e3e4e5e6e7e8e9eaebecedeeef"/>
    <parameter name="[testcase:binaryAll]" operation="set" value="[binaryAll]f0f1f2f3f4f5f6f7f8f9fafbfcfdfeff"/>                
    <parameter name="[testcase:stringAll_UTF-8]" operation="binary.toString" value="[testcase:binaryAll]" value2="UTF-8"/>
    <parameter name="[testcase:stringAll_ISO-8859-15]" operation="binary.toString" value="[testcase:binaryAll]" value2="ISO-8859-15"/>
                
    <parameter name="[timeout]" operation="set" value="10" />
    <parameter name="[emptyList]" operation="list.create"/>
    <parameter name="[stateValue]" operation="set" value="true"/>

    <parameter name="[testcase:newHopByHop]" operation="set" value="111111111"/>
    <parameter name="[testcase:newEndToEnd]" operation="set" value="222222222"/>
    <parameter name="[testcase:newSessionId]" operation="set" value="12345678901234567890"/>
    <sendMessageDIAMETER name="SendRequestMAR" remoteURL="diameter://[remoteDIAM]" destScenario="server">
          <header request="true" command="Multimedia-Authentitcation" applicationId="4321"
                  hopByHop="[newHopByHop]" endToEnd="[newEndToEnd]"/>
          <avp code="Session-Id:263" value="[newSessionId]"/>
          		
          <avp code="Vendor-Specific-Application-Id:260">                                      
              <avp code="2999999990" mandatory="true" type="Unsigned32" value="111111111"/>             
              <avp code="Acct-Application-Id:259" value="4321"/>
              <avp code="2999999991" mandatory="true" type="Integer64" value="65432109876543210"/>
              <avp code="Auth-Application-Id:258" value="4321"/>
              <avp code="2999999992" mandatory="true" type="Float32" value="-1234567890e-12"/>
              <avp code="Vendor-Id:266" value="[vendorID]"/>
              <avp code="2999999993" mandatory="true" type="Float64" value="999999999e123"/>
          </avp>
          <avp code="Auth-Session-State:277" value="NO_STATE_MAINTAINED:1"/>
          
          <avp code="Origin-Host:264" value="1.1.1.1"/>
          <avp code="Origin-Realm:296" value="[localRealmDIAM]"/>
          <avp code="Destination-Host:293" value="2.2.2.2"/>	
          <avp code="Destination-Realm:283" value="[remoteRealmDIAM]"/>

          <avp code="Public-Identity:601" value="sip:+33875631975@sip.pfdev.fr" type="UTF8String" 
               vendorId="[vendorID]" mandatory="false" private="false"/>
          <avp code="Public-Identity" value="sip:+33333333333@sip.pfdev.fr" type="UTF8String" 
               vendorId="0" mandatory="false" private="false"/>
          <avp code="Public-Identity:601" type="UTF8String" value="[testcase:allString]"  
               vendorId="[vendorID]" mandatory="false" private="false"/>               
          <avp code="Public-Identity:601" type="Binary" value="[testcase:binaryAll]"  
               vendorId="[vendorID]" mandatory="false" private="false"/>               
          <avp code="Number-Authentication-Items" value="1" vendorId="TGPP"/>
          <!-- grouped AVP -->
          <avp code="Auth-Data-Item:1018" vendorId="0" state="true">
              <avp code="Item-Number:1021" value="0"/>
              <avp code="Authentication-Scheme:1020" value="DIGEST" vendorId="0"/>
              <avp code="Authenticate:1019" value="Digest username='33875631975@sip.pfdev.fr',realm='sip.pfdev.fr',cnonce='40b18ccf',nc=00000001,qop=auth,uri='sip:sip.pfdev.fr',nonce='21bc27679ddac8fd6c0088817c8ae385',response='38179d99cc34ce0ad002ac4d70e37c0a',algorithm=MD5"/>
              <avp code="Authentication-Context:1024" value="INVITE" vendorId="0"/>
          </avp>
          <!-- Bad grouped AVP -->
          <avp code="Auth-Data-Item:1018" vendorId="[vendorID]">
              <avp code="Item-Number" value="0" vendorId="3GPP"/>
              <avp code="Authentication-Scheme" value="808464432" vendorId="TGPP"/>
              <avp code="Authenticate" value="Digest username='33875631975@sip.pfdev.fr',realm='sip.pfdev.fr',cnonce='40b18ccf',nc=00000001,qop=auth,uri='sip:sip.pfdev.fr',nonce='21bc27679ddac8fd6c0088817c8ae385',response='38179d99cc34ce0ad002ac4d70e37c0a',algorithm=MD5" vendorId="[vendorID]"/>
              <avp code="Authentication-Context" value="INVITE" vendorId="10415"/>
          </avp>
          <avp code="2999999994" value="abcdefghijklmnopqrstuvwxyz" type="OctetString" vendorId="TGPP" state="true"/>
          <avp code="2999999995" value="AAAAAAAAAAaaaaaaaaaa" type="UTF8String" vendorId="TGPP" state="true"/>
          <avp code="2999999996" value="20/08/2015 11:26:59:999" type="Time" vendorId="TGPP" state="true"/>
          <avp code="2999999997" value="111.111.111.111" type="Address" vendorId="TGPP" state="true"/>
          <avp code="2999999998" value="010203040506070809101112123141516171819120" type="Binary" vendorId="TGPP" state="true"/>
          <avp code="2999999999" value="0123456789" type="UTF8String" vendorId="TGPP" state="true"/>
          <avp code="3000000000" value="34.34.34.34" type="address" vendorId="TGPP:10415" state="true"/>          
          <avp code="IMS-Information:876" vendorId="TGPP" state="true">
              <avp code="Event-Type:823" value="badValue1" vendorId="10415" state="false"/>
              <avp code="Role-Of-Node:829" value="[emptyList]" vendorId="3GPP:10415" state="false"/>
              <avp code="Node-Functionality:862" value="1212121" vendorId="3GPP" state="[stateValue]"/>
              <avp code="User-Session-ID:830" value="[emptyList]" vendorId="10415" state="[stateValue]"/>
              <avp code="Calling-Party-Address:831" value="badValue5" vendorId="TGPP:10415"/>
              <avp code="Called-Party-Address:832" value="[emptyList]" vendorId="TGPP"/>
          </avp>
          
          <!-- type = OctetString -->
          <avp code="CHAP-Password:3" type="OctetString" value="'&quot;+-*/&gt;&lt;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"/>
          <!-- type = UTF8String -->
          <avp code="User-Name:1" type="UTF8String" value="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"/>
          <!-- type = IPAddress -->
          <avp code="Framed-IP-Address" value="192.168.90.117"/>
          <avp code="8" type="IPAddress" value="[2a01:cf00:33:5::6e01]"/>
          <!-- type = Integer32 -->
          <avp code="Management-Privilege-Level" value="-2000000000"/>
          <avp code="136" type="Integer32" value="2000000000"/>
          <!-- type = Integer64 -->
          <!-- TODO -->
          <avp code="Value-Digits" type="Integer64" value="-2000000000000000000"/>
          <avp code="447" type="Integer64" value="2000000000000000000"/>
          <!-- type = Unsigned32 -->
          <avp code="NAS-Port" type="Unsigned32" value="4000000000"/>
          <avp code="5" type="Unsigned32" value="2000000000"/>
          <!-- type = Unsigned64 -->
          <avp code="Framed-Interface-Id" value="8000000000000000000"/>
          <avp code="96" type="Unsigned64" value="4000000000000000000"/>
          <!-- type = Time -->
          <avp code="Event-Timestamp" value="20/02/2011 17:35:56:555" vendorId="0"/>
          <avp code="55" type="Time" value="04/08/2015 11:12:59:123" vendorId="0"/>
          <!-- type = Float32 -->
          <avp code="Peak-Traffic-Rate:498" value="123456789012345678901234567890"/>
          <avp code="498" type="Float32" value="9.876543210e-45"/>
          <avp code="Peak-Traffic-Rate" value="1.234567890e38"/>
          <!-- type = Float64 -->
          <avp code="Cost" vendorId="Ericsson" value="1234567890123456789012345678901234567890123456789012345678901234567890"/>
          <avp code="603" type="Float64" value="-1e308"/>
          <avp code="Cost" type="Float64" value="-1e-323"/>
          <!-- type = Bad type -->
          <avp code="Subscription-Id-Type:555" value="3999999999" vendorId="Ericsson:193" />
          <avp code="555" type="Enumerated" value="End User PRIVATE (operator defined):4" vendorId="193" />
          <avp code="Subscription-Id-Type" type="octetstring" value="Bad type:999999999" vendorId="Ericsson" />
    </sendMessageDIAMETER>

    <receiveMessageDIAMETER name="Receive Answer (MAA)" request="false" type="Multimedia-Authentitcation:506" result="DIAMETER_SUCCESS:2001"  timeout="[timeout]">
        <parameter name="[result]" operation="protocol.setFromMessage" value="message.result"/>
    </receiveMessageDIAMETER>

    <parameter name="[listenpointName]" operation="protocol.setFromMessage" value=" listenpoint.name  "/>
    <test parameter="[listenpointName]" condition="list.isEmpty"/>
    <parameter name="[listenpointHost]" operation="protocol.setFromMessage" value="listenpoint.localHost"/>
    <or>
        <test parameter="[listenpointHost]" condition="string.equals" value="0.0.0.0"/>
        <test parameter="[listenpointHost]" condition="string.equals" value="fhenry"/>
    </or>
    <parameter name="[listenpointPort]" operation="protocol.setFromMessage" value="listenpoint.localPort"/>
    <test parameter="[listenpointPort]" condition="string.equals" value="[localPortDIAM]"/>
    
    <parameter name="[request]" operation="protocol.setFromMessage" value="message.request"/>
    <test parameter="[request]" condition="string.equals" value="false"/>
    <parameter name="[type]" operation="protocol.setFromMessage" value="message.type"/>
    <test parameter="[type]" condition="string.equals" value="Multimedia-Authentitcation:506"/>
    <parameter name="[result]" operation="protocol.setFromMessage" value="message.result"/>
    <test parameter="[result]" condition="string.equals" value="DIAMETER_SUCCESS:2001"/>
    <parameter name="[text]" operation="protocol.setFromMessage" value="message.text"/>
    <parameter name="[binary]" operation="string.toBinary" value="[text]"/>
    <parameter name="[binReference]" operation="set" value="01000278800001fa000010e106f8ad4e06f8ad4d000001074000001c653466363738396631626666653961363437343300000108600000143133372e35382e38342e37380000012840000011636c69656e742e667200000000000125400000143133372e35382e38342e37380000011b40000011636c69656e742e667200000000000104400000200000010a6000000c000028af000001024000000c000010e1000001156000000c0000000100000002e0000029000028af7369703a2b3333383735363331393735407369702e70666465762e667200000000000402e0000010000028af00000001000003fae0000138000028af000003fde0000010000028af00000000000003fce0000010000028af00000002000003fbe00000f8000028af44696765737420757365726e616d653d5c223333383735363331393735407369702e70666465762e66725c222c7265616c6d3d5c227369702e70666465762e66725c222c636e6f6e63653d5c2234306231386363665c222c6e633d30303030303030312c716f703d617574682c7572693d5c227369703a7369702e70666465762e66725c222c6e6f6e63653d5c2232316263323736373964646163386664366330303838383137633861653338355c222c726573706f6e73653d5c2233383137396439396363333463653061643030326163346437306533376330615c222c616c676f726974686d3d4d443500000400e0000012000028af494e5649544500000000036cc0000034000028af0000035ec0000010000028af00127ed90000033fc0000015000028af62616456616c756535000000000000086000000c893a544e00000008600000182a01cf00003300050000000000006e01"/>
    <!--test parameter="[text]" condition="binary.equals" value="[binReference]"/-->
    <parameter name="[xml]" operation="protocol.setFromMessage" value="message.xml"/>
    <parameter name="[xml]" operation="string.regexReplaces" value="[xml]" value2=" " value3=""/>
    <parameter name="[xml]" operation="string.regexReplaces" value="[xml]" value2="hopByHop=&quot;[0-9]*&quot;" value3="X"/>
    <parameter name="[xml]" operation="string.regexReplaces" value="[xml]" value2="endToEnd=&quot;[0-9]*&quot;" value3="X"/>
    <parameter name="[xml]" operation="string.regexReplaces" value="[xml]" value2="code=&quot;263&quot;value=&quot;[0-9,a,b,c,d,e,f]*&quot;" value3="X"/>
    
    <parameter name="[protocol]" operation="protocol.setFromMessage" value="message.protocol"/>
    <test parameter="[protocol]" condition="string.equals" value="DIAMETER.EricssonIMT30-Cx:4321"/>
    <parameter name="[request1]" operation="protocol.setFromMessage" value="header.request"/>
    <test parameter="[request1]" condition="string.equals" value="false"/>
    <parameter name="[code]" operation="protocol.setFromMessage" value="header.command"/>
    <test parameter="[code]" condition="string.equals" value="Multimedia-Authentitcation:506"/>
    <parameter name="[appId]" operation="protocol.setFromMessage" value="header.applicationId"/>
    <test parameter="[appId]" condition="string.equals" value="[applicationID]"/>
    <parameter name="[hopByHop]" operation="protocol.setFromMessage" value="header.hopByHop"/>
    <test parameter="[hopByHop]" condition="number.equals" value="[newHopByHop]"/>
    <parameter name="[endToEnd]" operation="protocol.setFromMessage" value="header.endToEnd"/>
    <test parameter="[endToEnd]" condition="number.equals" value="[newEndToEnd]"/>
    <parameter name="[error]" operation="protocol.setFromMessage" value="header.error"/>
    <test parameter="[error]" condition="string.equals" value="true"/>
    <parameter name="[proxiable]" operation="protocol.setFromMessage" value="header.proxiable"/>
    <test parameter="[proxiable]" condition="string.equals" value="true"/>
    <parameter name="[retransmit]" operation="protocol.setFromMessage" value="header.retransmit"/>
    <test parameter="[retransmit]" condition="string.equals" value="true"/>
    
    <parameter name="[binary]" operation="protocol.setFromMessage" value="message.binary"/>
    <test parameter="[binary]" condition="binary.equals" value="01000220700001fa000010e1069f6bc70d3ed78e000001074000001c3132333435363738393031323334353637383930000001086000000f322e322e322e32000000012840000011636c69656e742e6672000000000001044000005c3b9ac9ff6000000c499602d2000001034000000c000010e13b9ac9ff6000000c499602d2000001024000000c000010e13b9ac9ff6000000c499602d20000010a6000000c000028af3b9ac9ff6000000c499602d2000001156000000c000000010000010c4000000c000007d100000002600000257369703a2b3333383735363331393735407369702e70666465762e6672000000000004026000000c00000001000003fa60000124000003fd6000000c00000000000003fc6000000c00000002000003fb600000f444696765737420757365726e616d653d5c223333383735363331393735407369702e70666465762e66725c222c7265616c6d3d5c227369702e70666465762e66725c222c636e6f6e63653d5c2234306231386363665c222c6e633d30303030303030312c716f703d617574682c7572693d5c227369703a7369702e70666465762e66725c222c6e6f6e63653d5c2232316263323736373964646163386664366330303838383137633861653338355c222c726573706f6e73653d5c2233383137396439396363333463653061643030326163346437306533376330615c222c616c676f726974686d3d4d4435000004006000000e494e564954450000"/>    

</scenario>
