
################################################################################
#                                                                              #
#                         SIGTRAN Protocol                                     #
#                                                                              #
################################################################################



###############################################################################
#                                                                             #
# dafault listenpoint : if the listenpoint is not specified in                #
# send operations, then the default one is used to send the message           #
#                                                                             #
###############################################################################

# Default listen host (IP addresses or DNS name); empty value means to listen 
# [string]
listenpoint.LOCAL_HOST =

# Default listen port; empty or zero value means no listen port
# [integer]
listenpoint.LOCAL_PORT =

# Flag to listen to UDP transport
# [boolean]
# NOT SUPPORTED : please keep "false" value
listenpoint.LISTEN_UDP = false

# Flag to listen to TCP transport
# [boolean]
listenpoint.LISTEN_TCP = true

# Flag to listen to SCTP transport
# [boolean]
listenpoint.LISTEN_SCTP = false

# Flag to listen to TLS transport
# [boolean]
listenpoint.LISTEN_TLS = false

# Default listen port for TLS transport; empty or zero means listen.LOCAL_PORT + 1
# [integer]
listenpoint.LOCAL_PORT_TLS =

# Default transport for endpoints; possible values are : udp, tcp, tls, sctp
# [enumeration] udp|tcp|sctp|tls
listenpoint.TRANSPORT = tcp


#######################################################

# Define the id protocol used by default to decode the lower SIGTRAN TLV layer (UA). 
# It is used to decode the TLV layer using the right dictionnary and it matches to the 
# Payload Protocol Id (ppid) value into the SCTP layer.
# Normally this parameter is transported via SCTP layer. But if missing in the SCTP part or 
# when the SIGTRAN message is sent on TCP transport protocol, then we use this value to decode 
# the lower layer in the right way.
# Here is the list of possible values we already supports : 
# 1 = ISDN User Adaptation (IUA)
# 3 = MTP level 3 User Adaptation (M3UA)
# 6 = V5 User Adaptation  (V5UA)
# [enumeration] 1|3|6
server.DEFAULT_PPID = 0


#######################################################

# Time (in seconds) of life the messages and transactions
# [float]
MESSAGE_TIME_LIFE = 35

# Timeout duration (in seconds) for the receive operations
# [float]
operations.RECEIVE_TIMEOUT = 35


#######################################################
# route
#######################################################

# The tool automatically routes a received response to the scenario which has sent the corresponding request.
# The transactionID is used internally to make the corresponding between requests and responses.
# This parameter is used to get the transactionID from the message given a list of paths (separated 
# by ',' character). The paths are defined with the setFromMessage operation and are of course 
# protocol dependant
# type list<string> (list of path keywords)
# [string]
route.TRANSACTION_ID =

# The tool automatically routes a received request to the scenario given in the "destScenario" parameter 
# of the send operation in the same testcase. In this case, the tool is simulating a client and server 
# at the same time.
# The messageID is used internally to make the corresponding between requests which are sent by 
# the tool and the same requests the tool has received 
# This parameter is used to get the messageID from the message given a list of paths (separated 
# by ',' character). The path are defined with the setFromMessage operation and are protocol of 
# course dependant
# type list<string> (list of path keywords)
# [string]
route.MESSAGE_ID = 

# The tool routes a received request to the scenario given by its name. In this case, the tool is 
# simulating a pure server.
# This parameter is used to get the scenario name as mentioned in the test file from the message 
# given a list of paths (separated by ',' character). The path are defined with the setFromMessage 
# operation and are of course protocol dependant
# type list<string> (list of path keywords)
# [string]
route.SCENARIO_NAME = listenpoint.localPort|message.protocol

# This ID is used to identify retransmissions. A message having the same retranmissionId as a previous one
# will be handled has a retransmission. If it is a request it will eventually lead to the retransmission of
# subsequent responses and the filtering of the message. If it is a response it might lead to the filtering
# of the message.
# type list<string> (list of path keywords)
# [string]
route.RETRANSMISSION_ID = 

# By default, the tool routes a received responses to the scenario which has sent the corresponding 
# request; if this parameter equals to false, then this mechanism is deasctivated and the responses 
# are routed using the route.SCENARIO_NAME path : ie the tools calculates the scenario name and 
# dispatch the response to the scenario with the same name
# [boolean]
route.DEFAULT_RESPONSE = true

