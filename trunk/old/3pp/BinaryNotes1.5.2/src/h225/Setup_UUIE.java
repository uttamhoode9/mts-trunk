package h225;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;

@ASN1PreparedElement
@ASN1Sequence(name = "Setup_UUIE", isSet = false)
public class Setup_UUIE implements IASN1PreparedElement {

    @ASN1Element(name = "protocolIdentifier", isOptional = false, hasTag = false, hasDefaultValue = false)
    private ProtocolIdentifier protocolIdentifier = null;
    @ASN1Element(name = "h245Address", isOptional = true, hasTag = false, hasDefaultValue = false)
    private TransportAddress h245Address = null;
    @ASN1SequenceOf(name = "sourceAddress", isSetOf = false)
    @ASN1Element(name = "sourceAddress", isOptional = true, hasTag = false, hasDefaultValue = false)
    private java.util.Collection<AliasAddress> sourceAddress = null;
    @ASN1Element(name = "sourceInfo", isOptional = false, hasTag = false, hasDefaultValue = false)
    private EndpointType sourceInfo = null;
    @ASN1SequenceOf(name = "destinationAddress", isSetOf = false)
    @ASN1Element(name = "destinationAddress", isOptional = true, hasTag = false, hasDefaultValue = false)
    private java.util.Collection<AliasAddress> destinationAddress = null;
    @ASN1Element(name = "destCallSignalAddress", isOptional = true, hasTag = false, hasDefaultValue = false)
    private TransportAddress destCallSignalAddress = null;
    @ASN1SequenceOf(name = "destExtraCallInfo", isSetOf = false)
    @ASN1Element(name = "destExtraCallInfo", isOptional = true, hasTag = false, hasDefaultValue = false)
    private java.util.Collection<AliasAddress> destExtraCallInfo = null;
    @ASN1SequenceOf(name = "destExtraCRV", isSetOf = false)
    @ASN1Element(name = "destExtraCRV", isOptional = true, hasTag = false, hasDefaultValue = false)
    private java.util.Collection<CallReferenceValue> destExtraCRV = null;
    @ASN1Boolean(name = "")
    @ASN1Element(name = "activeMC", isOptional = false, hasTag = false, hasDefaultValue = false)
    private Boolean activeMC = null;
    @ASN1Element(name = "conferenceID", isOptional = false, hasTag = false, hasDefaultValue = false)
    private ConferenceIdentifier conferenceID = null;

    @ASN1PreparedElement
    @ASN1Choice(name = "conferenceGoal")
    public static class ConferenceGoalChoiceType implements IASN1PreparedElement {

        @ASN1Null(name = "create")
        @ASN1Element(name = "create", isOptional = false, hasTag = false, hasDefaultValue = false)
        private org.bn.types.NullObject create = null;
        @ASN1Null(name = "join")
        @ASN1Element(name = "join", isOptional = false, hasTag = false, hasDefaultValue = false)
        private org.bn.types.NullObject join = null;
        @ASN1Null(name = "invite")
        @ASN1Element(name = "invite", isOptional = false, hasTag = false, hasDefaultValue = false)
        private org.bn.types.NullObject invite = null;

        public org.bn.types.NullObject getCreate() {
            return this.create;
        }

        public boolean isCreateSelected() {
            return this.create != null;
        }

        private void setCreate(org.bn.types.NullObject value) {
            this.create = value;
        }

        public void selectCreate() {
            selectCreate(new org.bn.types.NullObject());
        }

        public void selectCreate(org.bn.types.NullObject value) {
            this.create = value;

            setJoin(null);

            setInvite(null);

        }

        public org.bn.types.NullObject getJoin() {
            return this.join;
        }

        public boolean isJoinSelected() {
            return this.join != null;
        }

        private void setJoin(org.bn.types.NullObject value) {
            this.join = value;
        }

        public void selectJoin() {
            selectJoin(new org.bn.types.NullObject());
        }

        public void selectJoin(org.bn.types.NullObject value) {
            this.join = value;

            setCreate(null);

            setInvite(null);

        }

        public org.bn.types.NullObject getInvite() {
            return this.invite;
        }

        public boolean isInviteSelected() {
            return this.invite != null;
        }

        private void setInvite(org.bn.types.NullObject value) {
            this.invite = value;
        }

        public void selectInvite() {
            selectInvite(new org.bn.types.NullObject());
        }

        public void selectInvite(org.bn.types.NullObject value) {
            this.invite = value;

            setCreate(null);

            setJoin(null);

        }

        public void initWithDefaults() {
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_ConferenceGoalChoiceType;
        }
        private static IASN1PreparedElementData preparedData_ConferenceGoalChoiceType = CoderFactory.getInstance().newPreparedElementData(ConferenceGoalChoiceType.class);
    }
    @ASN1Element(name = "conferenceGoal", isOptional = false, hasTag = false, hasDefaultValue = false)
    private ConferenceGoalChoiceType conferenceGoal = null;
    @ASN1Element(name = "callServices", isOptional = true, hasTag = false, hasDefaultValue = false)
    private QseriesOptions callServices = null;
    @ASN1Element(name = "callType", isOptional = false, hasTag = false, hasDefaultValue = false)
    private CallType callType = null;
    @ASN1Element(name = "sourceCallSignalAddress", isOptional = true, hasTag = false, hasDefaultValue = false)
    private TransportAddress sourceCallSignalAddress = null;
    @ASN1Element(name = "remoteExtensionAddress", isOptional = true, hasTag = false, hasDefaultValue = false)
    private AliasAddress remoteExtensionAddress = null;
    @ASN1Element(name = "callIdentifier", isOptional = false, hasTag = false, hasDefaultValue = false)
    private CallIdentifier callIdentifier = null;
    @ASN1Boolean(name = "")
    @ASN1Element(name = "h245SecurityCapability", isOptional = true, hasTag = false, hasDefaultValue = false)
    private Boolean h245SecurityCapability = null;
    @ASN1Boolean(name = "")
    @ASN1Element(name = "tokens", isOptional = true, hasTag = false, hasDefaultValue = false)
    private Boolean tokens = null;
    @ASN1Boolean(name = "")
    @ASN1Element(name = "cryptoTokens", isOptional = true, hasTag = false, hasDefaultValue = false)
    private Boolean cryptoTokens = null;
    @ASN1Boolean(name = "")
    @ASN1Element(name = "fastStart", isOptional = true, hasTag = false, hasDefaultValue = false)
    private Boolean fastStart = null;
    @ASN1Boolean(name = "")
    @ASN1Element(name = "mediaWaitForConnect", isOptional = false, hasTag = false, hasDefaultValue = false)
    private Boolean mediaWaitForConnect = null;
    @ASN1Boolean(name = "")
    @ASN1Element(name = "canOverlapSend", isOptional = false, hasTag = false, hasDefaultValue = false)
    private Boolean canOverlapSend = null;
    @ASN1Boolean(name = "")
    @ASN1Element(name = "multipleCalls", isOptional = false, hasTag = false, hasDefaultValue = false)
    private Boolean multipleCalls = null;
    @ASN1Boolean(name = "")
    @ASN1Element(name = "maintainConnection", isOptional = false, hasTag = false, hasDefaultValue = false)
    private Boolean maintainConnection = null;

    public ProtocolIdentifier getProtocolIdentifier() {
        return this.protocolIdentifier;
    }

    public void setProtocolIdentifier(ProtocolIdentifier value) {
        this.protocolIdentifier = value;
    }

    public TransportAddress getH245Address() {
        return this.h245Address;
    }

    public boolean isH245AddressPresent() {
        return this.h245Address != null;
    }

    public void setH245Address(TransportAddress value) {
        this.h245Address = value;
    }

    public java.util.Collection<AliasAddress> getSourceAddress() {
        return this.sourceAddress;
    }

    public boolean isSourceAddressPresent() {
        return this.sourceAddress != null;
    }

    public void setSourceAddress(java.util.Collection<AliasAddress> value) {
        this.sourceAddress = value;
    }

    public EndpointType getSourceInfo() {
        return this.sourceInfo;
    }

    public void setSourceInfo(EndpointType value) {
        this.sourceInfo = value;
    }

    public java.util.Collection<AliasAddress> getDestinationAddress() {
        return this.destinationAddress;
    }

    public boolean isDestinationAddressPresent() {
        return this.destinationAddress != null;
    }

    public void setDestinationAddress(java.util.Collection<AliasAddress> value) {
        this.destinationAddress = value;
    }

    public TransportAddress getDestCallSignalAddress() {
        return this.destCallSignalAddress;
    }

    public boolean isDestCallSignalAddressPresent() {
        return this.destCallSignalAddress != null;
    }

    public void setDestCallSignalAddress(TransportAddress value) {
        this.destCallSignalAddress = value;
    }

    public java.util.Collection<AliasAddress> getDestExtraCallInfo() {
        return this.destExtraCallInfo;
    }

    public boolean isDestExtraCallInfoPresent() {
        return this.destExtraCallInfo != null;
    }

    public void setDestExtraCallInfo(java.util.Collection<AliasAddress> value) {
        this.destExtraCallInfo = value;
    }

    public java.util.Collection<CallReferenceValue> getDestExtraCRV() {
        return this.destExtraCRV;
    }

    public boolean isDestExtraCRVPresent() {
        return this.destExtraCRV != null;
    }

    public void setDestExtraCRV(java.util.Collection<CallReferenceValue> value) {
        this.destExtraCRV = value;
    }

    public Boolean getActiveMC() {
        return this.activeMC;
    }

    public void setActiveMC(Boolean value) {
        this.activeMC = value;
    }

    public ConferenceIdentifier getConferenceID() {
        return this.conferenceID;
    }

    public void setConferenceID(ConferenceIdentifier value) {
        this.conferenceID = value;
    }

    public ConferenceGoalChoiceType getConferenceGoal() {
        return this.conferenceGoal;
    }

    public void setConferenceGoal(ConferenceGoalChoiceType value) {
        this.conferenceGoal = value;
    }

    public QseriesOptions getCallServices() {
        return this.callServices;
    }

    public boolean isCallServicesPresent() {
        return this.callServices != null;
    }

    public void setCallServices(QseriesOptions value) {
        this.callServices = value;
    }

    public CallType getCallType() {
        return this.callType;
    }

    public void setCallType(CallType value) {
        this.callType = value;
    }

    public TransportAddress getSourceCallSignalAddress() {
        return this.sourceCallSignalAddress;
    }

    public boolean isSourceCallSignalAddressPresent() {
        return this.sourceCallSignalAddress != null;
    }

    public void setSourceCallSignalAddress(TransportAddress value) {
        this.sourceCallSignalAddress = value;
    }

    public AliasAddress getRemoteExtensionAddress() {
        return this.remoteExtensionAddress;
    }

    public boolean isRemoteExtensionAddressPresent() {
        return this.remoteExtensionAddress != null;
    }

    public void setRemoteExtensionAddress(AliasAddress value) {
        this.remoteExtensionAddress = value;
    }

    public CallIdentifier getCallIdentifier() {
        return this.callIdentifier;
    }

    public void setCallIdentifier(CallIdentifier value) {
        this.callIdentifier = value;
    }

    public Boolean getH245SecurityCapability() {
        return this.h245SecurityCapability;
    }

    public boolean isH245SecurityCapabilityPresent() {
        return this.h245SecurityCapability != null;
    }

    public void setH245SecurityCapability(Boolean value) {
        this.h245SecurityCapability = value;
    }

    public Boolean getTokens() {
        return this.tokens;
    }

    public boolean isTokensPresent() {
        return this.tokens != null;
    }

    public void setTokens(Boolean value) {
        this.tokens = value;
    }

    public Boolean getCryptoTokens() {
        return this.cryptoTokens;
    }

    public boolean isCryptoTokensPresent() {
        return this.cryptoTokens != null;
    }

    public void setCryptoTokens(Boolean value) {
        this.cryptoTokens = value;
    }

    public Boolean getFastStart() {
        return this.fastStart;
    }

    public boolean isFastStartPresent() {
        return this.fastStart != null;
    }

    public void setFastStart(Boolean value) {
        this.fastStart = value;
    }

    public Boolean getMediaWaitForConnect() {
        return this.mediaWaitForConnect;
    }

    public void setMediaWaitForConnect(Boolean value) {
        this.mediaWaitForConnect = value;
    }

    public Boolean getCanOverlapSend() {
        return this.canOverlapSend;
    }

    public void setCanOverlapSend(Boolean value) {
        this.canOverlapSend = value;
    }

    public Boolean getMultipleCalls() {
        return this.multipleCalls;
    }

    public void setMultipleCalls(Boolean value) {
        this.multipleCalls = value;
    }

    public Boolean getMaintainConnection() {
        return this.maintainConnection;
    }

    public void setMaintainConnection(Boolean value) {
        this.maintainConnection = value;
    }

    public void initWithDefaults() {
    }
    private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(Setup_UUIE.class);

    public IASN1PreparedElementData getPreparedData() {
        return preparedData;
    }
}
