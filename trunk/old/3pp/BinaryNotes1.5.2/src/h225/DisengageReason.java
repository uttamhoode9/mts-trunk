
package h225;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "DisengageReason" )
    public class DisengageReason implements IASN1PreparedElement {
            
        @ASN1Null ( name = "forcedDrop" ) 
    
        @ASN1Element ( name = "forcedDrop", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private org.bn.types.NullObject forcedDrop = null;
                
  
        @ASN1Null ( name = "normalDrop" ) 
    
        @ASN1Element ( name = "normalDrop", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private org.bn.types.NullObject normalDrop = null;
                
  
        @ASN1Null ( name = "undefinedReason" ) 
    
        @ASN1Element ( name = "undefinedReason", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private org.bn.types.NullObject undefinedReason = null;
                
  
        
        public org.bn.types.NullObject getForcedDrop () {
            return this.forcedDrop;
        }

        public boolean isForcedDropSelected () {
            return this.forcedDrop != null;
        }

        private void setForcedDrop (org.bn.types.NullObject value) {
            this.forcedDrop = value;
        }

        
        public void selectForcedDrop () {
            selectForcedDrop (new org.bn.types.NullObject());
	}
	
        public void selectForcedDrop (org.bn.types.NullObject value) {
            this.forcedDrop = value;
            
                    setNormalDrop(null);
                
                    setUndefinedReason(null);
                            
        }

        
  
        
        public org.bn.types.NullObject getNormalDrop () {
            return this.normalDrop;
        }

        public boolean isNormalDropSelected () {
            return this.normalDrop != null;
        }

        private void setNormalDrop (org.bn.types.NullObject value) {
            this.normalDrop = value;
        }

        
        public void selectNormalDrop () {
            selectNormalDrop (new org.bn.types.NullObject());
	}
	
        public void selectNormalDrop (org.bn.types.NullObject value) {
            this.normalDrop = value;
            
                    setForcedDrop(null);
                
                    setUndefinedReason(null);
                            
        }

        
  
        
        public org.bn.types.NullObject getUndefinedReason () {
            return this.undefinedReason;
        }

        public boolean isUndefinedReasonSelected () {
            return this.undefinedReason != null;
        }

        private void setUndefinedReason (org.bn.types.NullObject value) {
            this.undefinedReason = value;
        }

        
        public void selectUndefinedReason () {
            selectUndefinedReason (new org.bn.types.NullObject());
	}
	
        public void selectUndefinedReason (org.bn.types.NullObject value) {
            this.undefinedReason = value;
            
                    setForcedDrop(null);
                
                    setNormalDrop(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(DisengageReason.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            