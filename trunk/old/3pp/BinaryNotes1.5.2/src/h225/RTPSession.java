
package h225;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "RTPSession", isSet = false )
    public class RTPSession implements IASN1PreparedElement {
            
        @ASN1Element ( name = "rtpAddress", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private TransportChannelInfo rtpAddress = null;
                
  
        @ASN1Element ( name = "rtcpAddress", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private TransportChannelInfo rtcpAddress = null;
                
  
    @ASN1String( name = "", 
        stringType =  UniversalTag.PrintableString , isUCS = false )
    
        @ASN1Element ( name = "cname", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private String cname = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 1L, 
		
		max = 4294967295L 
		
	   )
	   
        @ASN1Element ( name = "ssrc", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Long ssrc = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 1L, 
		
		max = 255L 
		
	   )
	   
        @ASN1Element ( name = "sessionId", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Integer sessionId = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 1L, 
		
		max = 255L 
		
	   )
	   
@ASN1SequenceOf( name = "associatedSessionIds", isSetOf = false ) 

    
        @ASN1Element ( name = "associatedSessionIds", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private java.util.Collection<Integer>  associatedSessionIds = null;
                
  
        
        public TransportChannelInfo getRtpAddress () {
            return this.rtpAddress;
        }

        

        public void setRtpAddress (TransportChannelInfo value) {
            this.rtpAddress = value;
        }
        
  
        
        public TransportChannelInfo getRtcpAddress () {
            return this.rtcpAddress;
        }

        

        public void setRtcpAddress (TransportChannelInfo value) {
            this.rtcpAddress = value;
        }
        
  
        
        public String getCname () {
            return this.cname;
        }

        

        public void setCname (String value) {
            this.cname = value;
        }
        
  
        
        public Long getSsrc () {
            return this.ssrc;
        }

        

        public void setSsrc (Long value) {
            this.ssrc = value;
        }
        
  
        
        public Integer getSessionId () {
            return this.sessionId;
        }

        

        public void setSessionId (Integer value) {
            this.sessionId = value;
        }
        
  
        
        public java.util.Collection<Integer>  getAssociatedSessionIds () {
            return this.associatedSessionIds;
        }

        

        public void setAssociatedSessionIds (java.util.Collection<Integer>  value) {
            this.associatedSessionIds = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(RTPSession.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            