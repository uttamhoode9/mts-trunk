
package h225;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "BandRejectReason" )
    public class BandRejectReason implements IASN1PreparedElement {
            
        @ASN1Null ( name = "notBound" ) 
    
        @ASN1Element ( name = "notBound", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private org.bn.types.NullObject notBound = null;
                
  
        @ASN1Null ( name = "invalidConferenceID" ) 
    
        @ASN1Element ( name = "invalidConferenceID", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private org.bn.types.NullObject invalidConferenceID = null;
                
  
        @ASN1Null ( name = "invalidPermission" ) 
    
        @ASN1Element ( name = "invalidPermission", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private org.bn.types.NullObject invalidPermission = null;
                
  
        @ASN1Null ( name = "insufficientResources" ) 
    
        @ASN1Element ( name = "insufficientResources", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private org.bn.types.NullObject insufficientResources = null;
                
  
        @ASN1Null ( name = "invalidRevision" ) 
    
        @ASN1Element ( name = "invalidRevision", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private org.bn.types.NullObject invalidRevision = null;
                
  
        @ASN1Null ( name = "undefinedReason" ) 
    
        @ASN1Element ( name = "undefinedReason", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private org.bn.types.NullObject undefinedReason = null;
                
  
        
        public org.bn.types.NullObject getNotBound () {
            return this.notBound;
        }

        public boolean isNotBoundSelected () {
            return this.notBound != null;
        }

        private void setNotBound (org.bn.types.NullObject value) {
            this.notBound = value;
        }

        
        public void selectNotBound () {
            selectNotBound (new org.bn.types.NullObject());
	}
	
        public void selectNotBound (org.bn.types.NullObject value) {
            this.notBound = value;
            
                    setInvalidConferenceID(null);
                
                    setInvalidPermission(null);
                
                    setInsufficientResources(null);
                
                    setInvalidRevision(null);
                
                    setUndefinedReason(null);
                            
        }

        
  
        
        public org.bn.types.NullObject getInvalidConferenceID () {
            return this.invalidConferenceID;
        }

        public boolean isInvalidConferenceIDSelected () {
            return this.invalidConferenceID != null;
        }

        private void setInvalidConferenceID (org.bn.types.NullObject value) {
            this.invalidConferenceID = value;
        }

        
        public void selectInvalidConferenceID () {
            selectInvalidConferenceID (new org.bn.types.NullObject());
	}
	
        public void selectInvalidConferenceID (org.bn.types.NullObject value) {
            this.invalidConferenceID = value;
            
                    setNotBound(null);
                
                    setInvalidPermission(null);
                
                    setInsufficientResources(null);
                
                    setInvalidRevision(null);
                
                    setUndefinedReason(null);
                            
        }

        
  
        
        public org.bn.types.NullObject getInvalidPermission () {
            return this.invalidPermission;
        }

        public boolean isInvalidPermissionSelected () {
            return this.invalidPermission != null;
        }

        private void setInvalidPermission (org.bn.types.NullObject value) {
            this.invalidPermission = value;
        }

        
        public void selectInvalidPermission () {
            selectInvalidPermission (new org.bn.types.NullObject());
	}
	
        public void selectInvalidPermission (org.bn.types.NullObject value) {
            this.invalidPermission = value;
            
                    setNotBound(null);
                
                    setInvalidConferenceID(null);
                
                    setInsufficientResources(null);
                
                    setInvalidRevision(null);
                
                    setUndefinedReason(null);
                            
        }

        
  
        
        public org.bn.types.NullObject getInsufficientResources () {
            return this.insufficientResources;
        }

        public boolean isInsufficientResourcesSelected () {
            return this.insufficientResources != null;
        }

        private void setInsufficientResources (org.bn.types.NullObject value) {
            this.insufficientResources = value;
        }

        
        public void selectInsufficientResources () {
            selectInsufficientResources (new org.bn.types.NullObject());
	}
	
        public void selectInsufficientResources (org.bn.types.NullObject value) {
            this.insufficientResources = value;
            
                    setNotBound(null);
                
                    setInvalidConferenceID(null);
                
                    setInvalidPermission(null);
                
                    setInvalidRevision(null);
                
                    setUndefinedReason(null);
                            
        }

        
  
        
        public org.bn.types.NullObject getInvalidRevision () {
            return this.invalidRevision;
        }

        public boolean isInvalidRevisionSelected () {
            return this.invalidRevision != null;
        }

        private void setInvalidRevision (org.bn.types.NullObject value) {
            this.invalidRevision = value;
        }

        
        public void selectInvalidRevision () {
            selectInvalidRevision (new org.bn.types.NullObject());
	}
	
        public void selectInvalidRevision (org.bn.types.NullObject value) {
            this.invalidRevision = value;
            
                    setNotBound(null);
                
                    setInvalidConferenceID(null);
                
                    setInvalidPermission(null);
                
                    setInsufficientResources(null);
                
                    setUndefinedReason(null);
                            
        }

        
  
        
        public org.bn.types.NullObject getUndefinedReason () {
            return this.undefinedReason;
        }

        public boolean isUndefinedReasonSelected () {
            return this.undefinedReason != null;
        }

        private void setUndefinedReason (org.bn.types.NullObject value) {
            this.undefinedReason = value;
        }

        
        public void selectUndefinedReason () {
            selectUndefinedReason (new org.bn.types.NullObject());
	}
	
        public void selectUndefinedReason (org.bn.types.NullObject value) {
            this.undefinedReason = value;
            
                    setNotBound(null);
                
                    setInvalidConferenceID(null);
                
                    setInvalidPermission(null);
                
                    setInsufficientResources(null);
                
                    setInvalidRevision(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(BandRejectReason.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            