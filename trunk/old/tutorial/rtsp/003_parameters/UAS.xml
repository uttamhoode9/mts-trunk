<?xml version="1.0" encoding="UTF-8"?>
<scenario>

<receiveMessageRTSP name="Wait DESCRIBE" type="DESCRIBE" request="true">
	<parameter name="[listenpointName]" operation="protocol.setFromMessage" value="listenpoint.name"/>
    <parameter name="[connection]" operation="protocol.setFromMessage" value="channel.name"/>
	<parameter name="[remoteHost]" operation="protocol.setFromMessage" value="channel.remoteHost"/>
	<parameter name="[remotePort]" operation="protocol.setFromMessage" value="channel.remotePort"/>
	<parameter name="[firstline]" operation="protocol.setFromMessage" value="firstline"/>
	<parameter name="[method]" operation="protocol.setFromMessage" value="firstline.method"/>
	<parameter name="[version]" operation="protocol.setFromMessage" value="firstline.version"/>
	<parameter name="[uri]" operation="protocol.setFromMessage" value="firstline.uri"/>
	<parameter name="[statuscode]" operation="protocol.setFromMessage" value="firstline.statuscode"/>
	<parameter name="[reason]" operation="protocol.setFromMessage" value="firstline.reasonphrase"/>
	
	<parameter name="[header]" operation="protocol.setFromMessage" value="header"/>
	<parameter name="[cseq]" operation="protocol.setFromMessage" value="header.cseq"/>
	<parameter name="[htype]" operation="protocol.setFromMessage" value="header.content-type"/>
	<parameter name="[transPort]" operation="protocol.setFromMessage" value="header.transport.port"/>
	<parameter name="[boundary]" operation="protocol.setFromMessage" value="header.content-type.boundary"/>
	
	<parameter name="[content]" operation="protocol.setFromMessage" value="content"/>
	<parameter name="[ctype]" operation="protocol.setFromMessage" value="content.content-type"/>

</receiveMessageRTSP>

<test parameter="[remoteHost]" condition="string.equals" value="[serverIpAddress]"/>
<test parameter="[firstline]" condition="string.equals" value="DESCRIBE rtsp://[serverIpAddress]:6666/demo/548/sound RTSP/1.0"/>
<test parameter="[method]" condition="string.equals" value="DESCRIBE"/>
<test parameter="[version]" condition="string.equals" value="RTSP/1.0"/>
<test parameter="[uri]" condition="string.equals" value="rtsp://[serverIpAddress]:6666/demo/548/sound"/>
<test parameter="[statuscode]" condition="list.isEmpty"/>
<test parameter="[reason]" condition="list.isEmpty"/>
<test parameter="[header]" condition="string.contains" value="CSeq: 1"/>
<test parameter="[header]" condition="string.contains" value="Accept: application/sdp"/>
<test parameter="[cseq]" condition="string.equals" value="1"/>
<test parameter="[htype]" condition="list.isEmpty"/>
<test parameter="[transPort]" condition="list.isEmpty"/>
<test parameter="[boundary]" condition="list.isEmpty"/>
<test parameter="[content]" condition="list.isEmpty"/>
<test parameter="[ctype]" condition="list.isEmpty"/>

<sendMessageRTSP name="Describe" channel="[connection]">
<![CDATA[RTSP/1.0 200 OK
CSeq: [cseq]
Content-Encoding: gzip
Content-Language: en
User-Agent: XmlLoader
Content-Type: multipart/mixed;boundary="----=_Part_0"
Content-Length: 911

------=_Part_0
Content-Type: application/sdp

v=0
o=mhandley 2890844526 2890842807 IN IP4 126.16.64.4
s=RTSP Session
i=An Example of RTSP Session Usage
u=http://www.cs.ucl.ac.uk/staff/M.Handley/sdp.03.ps
e=mjh@isi.edu (Mark Handley)
c=IN IP4 224.2.17.12/127
t=3034423619 3042462419
a=type:H332
a=recvonly:20
b=CT:128
m=video 49232/2 RTP/AVP 98
i=mavideo
a=rtpmap:97 amr/8000/1
a=fmtp:97 mode-set=1;octet-align=1;crc=0
b=SA:256
c=IN IP4 224.2.17.12/127
m=audio 49230/3 RTP/AVP 96
i=monaudio
a=rtpmap:96 L8/8000
b=CT:128
c=IN IP4 224.2.17.12/127
------=_Part_0
Content-Type: application/resource-lists+xml
Content-Disposition: recipient-list

<?xml version="1.0" encoding="UTF-8"?>
<resource-lists xmlns="urn:ietf:params:xml:ns:resource-lists" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<list>
<entry uri="[inviteeName1]"/>
</list>
</resource-lists>
------=_Part_0--]]>
</sendMessageRTSP>

<receiveMessageRTSP name="Wait SETUP" type="SETUP" request="true">
	<parameter name="[listenpointName]" operation="protocol.setFromMessage" value="listenpoint.name"/>
    <parameter name="[connection]" operation="protocol.setFromMessage" value="channel.name"/>
	<parameter name="[remoteHost]" operation="protocol.setFromMessage" value="channel.remoteHost"/>
	<parameter name="[remotePort]" operation="protocol.setFromMessage" value="channel.remotePort"/>
	<parameter name="[firstline]" operation="protocol.setFromMessage" value="firstline"/>
	<parameter name="[method]" operation="protocol.setFromMessage" value="firstline.method"/>
	<parameter name="[version]" operation="protocol.setFromMessage" value="firstline.version"/>
	<parameter name="[uri]" operation="protocol.setFromMessage" value="firstline.uri"/>
	<parameter name="[statuscode]" operation="protocol.setFromMessage" value="firstline.statuscode"/>
	<parameter name="[reason]" operation="protocol.setFromMessage" value="firstline.reasonphrase"/>
	
	<parameter name="[header]" operation="protocol.setFromMessage" value="header"/>
	<parameter name="[cseq]" operation="protocol.setFromMessage" value="header.cseq"/>
	<parameter name="[htype]" operation="protocol.setFromMessage" value="header.content-type"/>
	<parameter name="[transPort]" operation="protocol.setFromMessage" value="header.transport.port"/>
	<parameter name="[boundary]" operation="protocol.setFromMessage" value="header.content-type.boundary"/>
	<parameter name="[transport]" operation="protocol.setFromMessage" value="header.Transport"/>
    
	<parameter name="[content]" operation="protocol.setFromMessage" value="content"/>
	<parameter name="[ctype]" operation="protocol.setFromMessage" value="content.content-type"/>
</receiveMessageRTSP>

<test parameter="[remoteHost]" condition="string.equals" value="[serverIpAddress]"/>
<test parameter="[firstline]" condition="string.equals" value="SETUP rtsp://[serverIpAddress]:6666/demo/548/sound RTSP/1.0"/>
<test parameter="[method]" condition="string.equals" value="SETUP"/>
<test parameter="[version]" condition="string.equals" value="RTSP/1.0"/>
<test parameter="[uri]" condition="string.equals" value="rtsp://[serverIpAddress]:6666/demo/548/sound"/>
<test parameter="[statuscode]" condition="list.isEmpty"/>
<test parameter="[reason]" condition="list.isEmpty"/>
<test parameter="[header]" condition="string.contains" value="CSeq: 2"/>
<test parameter="[header]" condition="string.contains" value="Transport:RTP/AVP;multicast;destination=225.219.201.15;port=7000-7001;ttl=127"/>
<test parameter="[header]" condition="string.contains" value="Conference:199702170042.SAA08642@obiwan.arl.wustl.edu%20Starr"/>
<test parameter="[cseq]" condition="string.equals" value="2"/>
<test parameter="[htype]" condition="list.isEmpty"/>
<test parameter="[transport]" condition="string.contains" value="RTP/AVP"/>
<test parameter="[boundary]" condition="list.isEmpty"/>
<test parameter="[content]" condition="list.isEmpty"/>
<test parameter="[ctype]" condition="list.isEmpty"/>

<sendMessageRTSP name="Setup" channel="[connection]">
<![CDATA[RTSP/1.0 200 OK
CSeq: [cseq]
Transport: RTP/AVP;
	multicast;
 destination=225.219.201.15;port=7000-7001;ttl=127
Session: 91389234234
Conference: 199702170042.SAA08642@obiwan.arl.wustl.edu%20Starr

]]>
</sendMessageRTSP>  

</scenario>
