<?xml version="1.0" encoding="UTF-8"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->

<scenario>

  <parameter name="[network]" operation="set" value="eth0"/>  
  <parameter name="[filter]" operation="set" value="(src host [localHostRTP]) and (dst host [localHostRTP])"/>

  <createProbeRTPFLOW name="probe" networkInterface="[network]" captureFilter="[filter]"/>

  <parameter name="[testcase:SEM1]" operation="system.semaphorenotify"/>
                 
  <receiveMessageRTPFLOW name="receive capture message" probe="probe" type="PCMA:8">
        <parameter name="[mark]" operation="protocol.setFromMessage" value="header.mark"/>
        <parameter name="[ssrc]" operation="protocol.setFromMessage" value="header.ssrc"/>        
        <parameter name="[seqnum]" operation="protocol.setFromMessage" value="header.seqnum"/>
        <parameter name="[timestamp]" operation="protocol.setFromMessage" value="header.timestamp"/>
        <parameter name="[packetNumber]" operation="protocol.setFromMessage" value="flow.packetNumber"/>
        <parameter name="[flowPayload]" operation="protocol.setFromMessage" value="flow.payload.text"/>
  </receiveMessageRTPFLOW>                                 

    <test parameter="[ssrc]" condition="number.equals" value="10"/>
    
    <test parameter="[mark(0)]" condition="number.equals" value="1"/>
    <test parameter="[mark(2)]" condition="number.equals" value="0"/>
    <test parameter="[mark(4)]" condition="number.equals" value="1"/>
    <test parameter="[mark(6)]" condition="number.equals" value="0"/>
    <test parameter="[mark(8)]" condition="number.equals" value="1"/>

    <!-- BUG should be that -->
    <!--test parameter="[seqnum(0)]" condition="number.equals" value="65534"/>
    <test parameter="[seqnum(2)]" condition="number.equals" value="65535"/>
    <test parameter="[seqnum(4)]" condition="number.equals" value="0"/>
    <test parameter="[seqnum(6)]" condition="number.equals" value="1"/>
    <test parameter="[seqnum(8)]" condition="number.equals" value="2"/-->

    <test parameter="[seqnum(0)]" condition="number.equals" value="65534"/>
    <test parameter="[seqnum(2)]" condition="number.equals" value="0"/>
    <test parameter="[seqnum(4)]" condition="number.equals" value="1"/>
    <test parameter="[seqnum(6)]" condition="number.equals" value="65535"/>
    <test parameter="[seqnum(8)]" condition="number.equals" value="2"/>

    <test parameter="[timestamp(0)]" condition="number.equals" value="123"/>
    <test parameter="[timestamp(2)]" condition="number.equals" value="132"/>
    <test parameter="[timestamp(4)]" condition="number.equals" value="141"/>
    <test parameter="[timestamp(6)]" condition="number.equals" value="150"/>
    <test parameter="[timestamp(8)]" condition="number.equals" value="159"/>

    <test parameter="[packetNumber]" condition="number.equals" value="10"/>
    <test parameter="[flowPayload(0)]" condition="string.equals" value="Packet #1"/>
    <test parameter="[flowPayload(2)]" condition="string.equals" value="Packet #2"/>
    <test parameter="[flowPayload(4)]" condition="string.equals" value="Packet #3"/>
    <test parameter="[flowPayload(6)]" condition="string.equals" value="Packet #4"/>
    <test parameter="[flowPayload(8)]" condition="string.equals" value="Packet #5"/>

  <receiveMessageRTPFLOW name="receive capture message" probe="probe" type="PCMA:8">
        <parameter name="[seqnum]" operation="protocol.setFromMessage" value="header.seqnum"/>
        <parameter name="[timestamp]" operation="protocol.setFromMessage" value="header.timestamp"/>
        <parameter name="[flowPayload]" operation="protocol.setFromMessage" value="flow.payload.text"/>
        <parameter name="[mark]" operation="protocol.setFromMessage" value="header.mark"/>
  </receiveMessageRTPFLOW>                                 

  <finally>
      <removeProbeRTPFLOW name="probe"/>        
  </finally>
  
</scenario>
