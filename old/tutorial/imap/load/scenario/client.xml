<?xml version="1.0" encoding="UTF-8"?>

<scenario>
    <parameter name="[connection]" operation="set" value="scenario_[port]" />

    <parameter name="[testcase:sem1]" operation="system.semaphorewait" />
    <openChannelIMAP name="[connection]" remoteHost="[serverRemoteIp(0)]" remotePort="[port]"/>
    
    <parameter name="[tagReq]" operation="string.random" value="4" />
    <!-- envoi requete capability-->
    <sendMessageIMAP channel="[connection]">
<![CDATA[
[tagReq] CAPABILITY
]]>
    </sendMessageIMAP>

    <!-- attend reponse CAPABILITY -->
    <receiveMessageIMAP name="Receive CAPABILITY completed" channel="[connection]" request="false">
        <parameter name="[tagRep]" operation="protocol.setFromMessage" value="response.done.tag" />
        <parameter name="[reponse]" operation="protocol.setFromMessage" value="response.done.result" />
        <parameter name="[contenu]" operation="protocol.setFromMessage" value="response.done.text" />
        <test parameter="[tagRep]" condition="string.equals" value="[tagReq]" />
        <test parameter="[reponse]" condition="string.equals" value="OK" />
        <test parameter="[contenu]" condition="string.contains" value="CAPABILITY completed" />
    </receiveMessageIMAP>

    <parameter name="[tagReq]" operation="string.random" value="4" />
    <!-- envoi requete LOGIN-->
    <sendMessageIMAP channel="[connection]">
<![CDATA[
[tagReq] LOGIN [login] [password]
]]>
    </sendMessageIMAP>

    <!-- attend reponse LOGIN -->
    <receiveMessageIMAP name="Receive LOGIN completed" channel="[connection]" request="false">
        <parameter name="[reponse]" operation="protocol.setFromMessage" value="response.done.result" />
        <test parameter="[reponse]" condition="string.equals" value="OK" />
        <parameter name="[tagRep]" operation="protocol.setFromMessage" value="response.done.tag" />
        <test parameter="[tagRep]" condition="string.equals" value="[tagReq]" />
    </receiveMessageIMAP>

    <parameter name="[tagReq]" operation="string.random" value="4" />
    <!-- envoi requete SELECT-->
    <sendMessageIMAP channel="[connection]" >
<![CDATA[
[tagReq] SELECT INBOX
]]>
    </sendMessageIMAP>

    <!-- attend reponse SELECT -->
    <receiveMessageIMAP name="Receive SELECT response" channel="[connection]" request="false">
        <parameter name="[tagRep]" operation="protocol.setFromMessage" value="response.done.tag" />
        <test parameter="[tagRep]" condition="string.equals" value="[tagReq]" />
    </receiveMessageIMAP>

    <parameter name="[tagReq]" operation="string.random" value="4" />
    <!-- envoi requete EXPUNGE-->
    <sendMessageIMAP channel="[connection]" >
<![CDATA[
[tagReq] EXPUNGE
]]>
    </sendMessageIMAP>
    
    <!-- attend reponse EXPUNGE -->
    <receiveMessageIMAP channel="[connection]" request="false">
        <parameter name="[tagRep]" operation="protocol.setFromMessage" value="response.done.tag" />
        <test parameter="[tagRep]" condition="string.equals" value="[tagReq]" />
    </receiveMessageIMAP>

    <parameter name="[tagReq]" operation="string.random" value="4" />
    <!-- envoi requete SEARCH-->
    <sendMessageIMAP channel="[connection]" >
<![CDATA[
[tagReq] SEARCH UNSEEN NOT DELETED
]]>
    </sendMessageIMAP>
    
    <!-- attend reponse SEARCH -->
    <receiveMessageIMAP channel="[connection]" request="false">
        <parameter name="[tagRep]" operation="protocol.setFromMessage" value="response.done.tag" />
        <test parameter="[tagRep]" condition="string.equals" value="[tagReq]" />
    </receiveMessageIMAP>

    <parameter name="[tagReq]" operation="string.random" value="4" />
    <!-- envoi requete FETCH-->
    <sendMessageIMAP channel="[connection]" >
<![CDATA[
[tagReq] FETCH 12 RFC822.SIZE
]]>
    </sendMessageIMAP>
    
    <!-- attend reponse FETCH -->
    <receiveMessageIMAP channel="[connection]" request="false">
        <parameter name="[tagRep]" operation="protocol.setFromMessage" value="response.done.tag" />
        <test parameter="[tagRep]" condition="string.equals" value="[tagReq]" />
    </receiveMessageIMAP>

    <parameter name="[tagReq]" operation="string.random" value="4" />
    <!-- envoi requete FETCH-->
    <sendMessageIMAP channel="[connection]" >
<![CDATA[
[tagReq] FETCH 12 body[header]
]]>
    </sendMessageIMAP>
    
    <!-- attend reponse FETCH -->
    <receiveMessageIMAP channel="[connection]" request="false">
        <parameter name="[tagRep]" operation="protocol.setFromMessage" value="response.done.tag" />
        <test parameter="[tagRep]" condition="string.equals" value="[tagReq]" />
    </receiveMessageIMAP>

    <parameter name="[tagReq]" operation="string.random" value="4" />
    <!-- envoi requete CREATE-->
    <sendMessageIMAP channel="[connection]" >
<![CDATA[
[tagReq] CREATE monRepertoire
]]>
    </sendMessageIMAP>

    <!-- attend reponse CREATE -->
    <receiveMessageIMAP name="Receive CREATE response" channel="[connection]" request="false">
        <parameter name="[tagRep]" operation="protocol.setFromMessage" value="response.done.tag" />
        <test parameter="[tagRep]" condition="string.equals" value="[tagReq]" />
    </receiveMessageIMAP>

    <parameter name="[tagReq]" operation="string.random" value="4" />
    <!-- envoi requete RENAME-->
    <sendMessageIMAP channel="[connection]" >
<![CDATA[
[tagReq] RENAME monRepertoire monDossier
]]>
    </sendMessageIMAP>

    <!-- attend reponse RENAME -->
    <receiveMessageIMAP name="Receive RENAME response" channel="[connection]" request="false">
        <parameter name="[tagRep]" operation="protocol.setFromMessage" value="response.done.tag" />
        <test parameter="[tagRep]" condition="string.equals" value="[tagReq]" />
    </receiveMessageIMAP>

    <parameter name="[tagReq]" operation="string.random" value="4" />
    <!-- envoi requete APPEND-->
    <sendMessageIMAP channel="[connection]" >
<![CDATA[
[tagReq] APPEND monDossier (\UNSEEN) {274}
]]>
    </sendMessageIMAP>

    <!-- attend reponse APPEND intermediaire -->
    <receiveMessageIMAP channel="[connection]" request="false">
        <parameter name="[text]" operation="protocol.setFromMessage" value="response.continue.text" />
    </receiveMessageIMAP>

    <!-- envoi DATA-->
    <sendMessageIMAP channel="[connection]">
<![CDATA[
Date: Fri, 17 Oct 2008 21:52:25
From: Me <theTester@imsloader.com>
Subject: test to write message
To: anyone@devoteam.com
Message-Id: <B27397-0100000@devoteam.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; CHARSET=US-ASCII

Hello all! Is this test working or not??
]]>
    </sendMessageIMAP>
    
    <!-- attend reponse APPEND  -->
    <receiveMessageIMAP channel="[connection]" request="false">
        <parameter name="[tagRep]" operation="protocol.setFromMessage" value="response.done.tag" />
        <test parameter="[tagRep]" condition="string.equals" value="[tagReq]" />
    </receiveMessageIMAP>

    <parameter name="[tagReq]" operation="string.random" value="4" />
    <!-- envoi requete STORE-->
    <sendMessageIMAP channel="[connection]" >
<![CDATA[
[tagReq] STORE 2:4 +FLAGS (\Deleted)
]]>
    </sendMessageIMAP>
    
    <!-- attend reponse STORE -->
    <receiveMessageIMAP channel="[connection]" request="false">
        <parameter name="[tagRep]" operation="protocol.setFromMessage" value="response.done.tag" />
        <test parameter="[tagRep]" condition="string.equals" value="[tagReq]" />
    </receiveMessageIMAP>

    <parameter name="[tagReq]" operation="string.random" value="4" />
    <!-- envoi requete CLOSE-->
    <sendMessageIMAP channel="[connection]" >
<![CDATA[
[tagReq] CLOSE
]]>
    </sendMessageIMAP>
    
    <!-- attend reponse CLOSE -->
    <receiveMessageIMAP channel="[connection]" request="false">
        <parameter name="[tagRep]" operation="protocol.setFromMessage" value="response.done.tag" />
        <test parameter="[tagRep]" condition="string.equals" value="[tagReq]" />
    </receiveMessageIMAP>

    <parameter name="[tagReq]" operation="string.random" value="4" />
    <!-- envoi requete DELETE-->
    <sendMessageIMAP channel="[connection]" >
<![CDATA[
[tagReq] DELETE monDossier
]]>
    </sendMessageIMAP>

    <!-- attend reponse DELETE -->
    <receiveMessageIMAP name="Receive DELETE response" channel="[connection]" request="false">
        <parameter name="[tagRep]" operation="protocol.setFromMessage" value="response.done.tag" />
        <test parameter="[tagRep]" condition="string.equals" value="[tagReq]" />
    </receiveMessageIMAP>

    <parameter name="[tagReq]" operation="string.random" value="4" />
    <!-- envoi requete LOGOUT-->
    <sendMessageIMAP channel="[connection]">
<![CDATA[
[tagReq] LOGOUT
]]>
    </sendMessageIMAP>

    <!-- attend reponse LOGOUT -->
    <receiveMessageIMAP name="Receive LOGOUT completed" channel="[connection]" request="false">
        <parameter name="[tagRep]" operation="protocol.setFromMessage" value="response.done.tag" />
        <parameter name="[reponse]" operation="protocol.setFromMessage" value="response.done.result" />
        <test parameter="[reponse]" condition="string.equals" value="OK" />
        <test parameter="[tagRep]" condition="string.equals" value="[tagReq]" />
    </receiveMessageIMAP>

</scenario> 
