<?xml version="1.0" encoding="UTF-8"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->
<!DOCTYPE SIPimport [
  <!ENTITY createResponse SYSTEM "../../../sip/library/createResponse.xml">  
  <!ENTITY createSubRequest SYSTEM "../../../sip/library/createSubRequest.xml">
]>	
<!--
~~~~~~~~~~~~~~~~~~~
|     Parameters INPUT     |
~~~~~~~~~~~~~~~~~~~
- statusCode
- reasonPhrase
- contentSDP

NB: BUG if first msg received is not INVITE
-->

<scenario>

    <parameter name="[inviteeName]" operation="set" value="alice"/>
    <parameter name="[Host-Testee]" operation="system.ipaddress" value="eth0"/>
    <parameter name="[Host-Testee]" operation="set" value="[Host-Testee(0)]" />
    <parameter name="[Port-Testee]" operation="file.readProperty" value="sip.properties" value2="listenpoint.LOCAL_PORT"/>
    <parameter name="[Adresse-Testee]" operation="set" value="[Host-Testee(0)]:[Port-Testee]"/>

	
	<label name="receiveMsg" />
	<receiveMessageSIP name="Wait msg" timeout="0" >
		<parameter name="[method]" operation="protocol.setFromMessage" value="firstline.Method" />
		<parameter name="[CallID]" operation="protocol.setFromMessage" value="header.Call-ID" />
		<parameter name="[lastIsRequest]" operation="protocol.setFromMessage" value="message.request" />
	<!--2 clients-->
		<parameter name="[message]" operation="protocol.setFromMessage" value="message"/>
	<!--fini 2 clients-->
	</receiveMessageSIP>	
	<label name="afterReceiveMsg" />

<!--
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
|                                                  ACK  (INIVTE)                                                                 |
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->	
	<if>
	<condition>
		<test parameter="[method]" condition="string.equals" value="ACK" />
	</condition>
	<then>
		<if>
		<condition>
			<not><test parameter="[remoteHost_[CallID]]" condition="list.size" value="0" /></not>			
			<not><test parameter="[remotePort_[CallID]]" condition="list.size" value="0" /></not>
		</condition>
		<then>
	
			<createListenpointRTPFLOW name="inviter" localHost="[Host-Testee]" localPort="45300"/>
			<parameter name="file" operation="file.readmedia" value="MRF/resources/rtpflow.pdml" />	
			<parameter name="payloadList" operation="set" value="[[file(0)]]"/>
			<parameter name="timestampList" operation="set" value="[[file(1)]]"/>
			<parameter name="seqList" operation="set" value="[[file(2)]]"/>
			<parameter name="nbPacket" operation="list.size" value="[payloadList]"/>
			
			<sendMessageRTPFLOW listenpoint="inviter" remoteHost="[remoteHost_[CallID](0)]" remotePort="[remotePort_[CallID](0)]">
				<flow packetNumber="[nbPacket]" deltaTimestamp="20" payloadTimestamp="160">
					<header ssrc="789" payloadType="8" seqnum="[seqList]" timestamp="[timestampList]"/>
					<payload format="text">[payloadList]</payload>
				</flow>
			</sendMessageRTPFLOW>
			<pause name="wait" seconds="5" />

			<parameter name="[remoteAdr[CallID]]" operation="protocol.setFromMessage" value="header.Contact" value2="[message]" />
			<parameter name="[remoteAdr[CallID]]" operation="string.regexreplaces" value="[remoteAdr[CallID]]" value2="&gt;|&lt;|sip:" value3=""/>
			<log>remoteAdr[CallID]=[remoteAdr[CallID]]</log>
			<parameter name="[method]" operation="set" value="BYE"/>
			<parameter name="[msg]" operation="set" value="[message]"/>
			<parameter name="[ackbyeRoute]" operation="set" value="[remoteAdr[CallID]]"/>
			<parameter name="[delay]" operation="set" value="0"/>
			
			<!--same testcase should be uncommented-->
			<parameter name="[destSC]" operation="set" value="invitee"/>
			<!--fini same testcase should be uncommented-->
			
			&createSubRequest;
			<receiveMessageSIP name="Wait 200 OK" request="false" type="BYE" result="200" />
			<if>
			<condition>
				<test parameter="[sendRTP_[CallID]]" condition="list.exists" />
			</condition>
			<then>						
				<parameter name="[sendRTP_[CallID]]" operation="list.remove" />				
			</then>
			</if>
		</then>	
		</if>
		<goto label="receiveMsg" />
	</then>
	</if>
<!--
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
|                                                           INVITE                                                                   |
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->	<if>
	<condition>
		<test parameter="[method]" condition="string.equals" value="INVITE" />
	</condition>
	<then>
	    <parameter name="[remoteHost_[CallID]]"	operation="protocol.setFromMessage" value="content(0).Sdp.Connection.Address" />
		<parameter name="[remotePort_[CallID]]"	operation="protocol.setFromMessage" value="content(0).Sdp.Media.Port" />

		<if>
		<condition>
			<test parameter="[sendRTP_[CallID]]" condition="list.exists" />
		</condition>
		<then>
			
			<goto label="receiveMsg" />
		</then>
		<else>
			<parameter name="[sendRTP_[CallID]]" operation="set" value="[CallID]" description="remember existance of dialogue" />
		<!-- =================
		cancel sent before 100
		=================-->
			<parameter name="[isTimeout]" operation="set" value="true" />
									
				<parameter name="[statusCode]" operation="set" value="100"/>
				<parameter name="[reasonPhrase]" operation="set" value="Trying"/>
				<parameter name="[contentSDP]" operation="set" value=""/>
	<!--2 clients-->
				<parameter name="[msg]" operation="set" value="[message]"/>
	<!--fini 2 clients-->
				&createResponse;
			
		<!-- =================
		cancel sent before 180
		=================-->
			<parameter name="[isTimeout]" operation="set" value="true" />
			
				<parameter name="[statusCode]" operation="set" value="180"/>
				<parameter name="[reasonPhrase]" operation="set" value="Ringing"/>
				<parameter name="[contentSDP]" operation="set" >
<![CDATA[
v=0
o=[inviteeName] 999 999 IN IP4 [Host-Tester]
s=-
c=IN IP4 [Host-Tester]
t=0 0
m=audio 45300 RTP/AVP 97
a=rtpmap:97 amr/8000/1
a=fmtp:97 mode-set=1;octet-align=1;crc=0
a=+g.poc.talkburst
a=maxptime:200
a=ptime:200
m=application 25463 udp TBCP
a=fmtp:TBCP queuing=0;tb_priority=1;timestamp=0]]>
				</parameter>
	<!--2 clients-->
				<parameter name="[msg]" operation="set" value="[message]"/>
	<!--fini 2 clients-->
				&createResponse;
	<!--2 clients-->
				<parameter name="[message]" operation="protocol.setFromMessage" value="message"/>
	<!--fini 2 clients-->
			
		<!--=================
		cancel sent before 200
		=================-->
			<parameter name="[isTimeout]" operation="set" value="true" />
			
				<parameter name="[statusCode]" operation="set" value="200"/>
				<parameter name="[reasonPhrase]" operation="set" value="OK"/>  
				<parameter name="[contentSDP]" operation="set" >
<![CDATA[
v=0
o=[inviteeName] 999 999 IN IP4 [Host-Tester]
s=-
c=IN IP4 [Host-Tester]
t=0 0
m=audio 45300 RTP/AVP 97
a=rtpmap:97 amr/8000/1
a=fmtp:97 mode-set=1;octet-align=1;crc=0
a=+g.poc.talkburst
a=maxptime:200
a=ptime:200
m=application 25463 udp TBCP
a=fmtp:TBCP queuing=0;tb_priority=1;timestamp=0]]>
				</parameter>
	<!--2 clients-->
				<parameter name="[msg]" operation="set" value="[message]"/>
	<!--fini 2 clients-->
				&createResponse;
			
		</else>
		</if>

		<goto label="receiveMsg" />
	</then>
	</if>
<!--
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
|                                                             BYE                                                                        |
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->	
	<if>
	<condition>
		<test parameter="[method]" condition="string.equals" value="BYE" />
	</condition>
	<then>		
		<parameter name="[statusCode]" operation="set" value="200"/>
		<parameter name="[reasonPhrase]" operation="set" value="OK"/>
		<parameter name="[contentSDP]" operation="set" value=""/>
		&createResponse;
		
		<if>
		<condition>
			<test parameter="[sendRTP_[CallID]]" condition="list.exists" />
		</condition>
		<then>
			<parameter name="[sendRTP_[CallID]]" operation="list.remove" />
		</then>
		</if>
<!--comment-->
		<!--goto label="end" /-->
	</then>
	</if>
	
	<goto label="receiveMsg" />
	<label name="end" />
	
<finally>
<removeListenpointRTPFLOW name="inviter" />
</finally>




</scenario>
