
package h225;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "Connect_UUIE", isSet = false )
    public class Connect_UUIE implements IASN1PreparedElement {
            
        @ASN1Element ( name = "protocolIdentifier", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private ProtocolIdentifier protocolIdentifier = null;
                
  
        @ASN1Element ( name = "h245Address", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private TransportAddress h245Address = null;
                
  
        @ASN1Element ( name = "destinationInfo", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private EndpointType destinationInfo = null;
                
  
        @ASN1Element ( name = "conferenceID", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private ConferenceIdentifier conferenceID = null;
                
  
        
        public ProtocolIdentifier getProtocolIdentifier () {
            return this.protocolIdentifier;
        }

        

        public void setProtocolIdentifier (ProtocolIdentifier value) {
            this.protocolIdentifier = value;
        }
        
  
        
        public TransportAddress getH245Address () {
            return this.h245Address;
        }

        
        public boolean isH245AddressPresent () {
            return this.h245Address != null;
        }
        

        public void setH245Address (TransportAddress value) {
            this.h245Address = value;
        }
        
  
        
        public EndpointType getDestinationInfo () {
            return this.destinationInfo;
        }

        

        public void setDestinationInfo (EndpointType value) {
            this.destinationInfo = value;
        }
        
  
        
        public ConferenceIdentifier getConferenceID () {
            return this.conferenceID;
        }

        

        public void setConferenceID (ConferenceIdentifier value) {
            this.conferenceID = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(Connect_UUIE.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            