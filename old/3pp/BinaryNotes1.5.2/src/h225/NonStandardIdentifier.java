
package h225;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "NonStandardIdentifier" )
    public class NonStandardIdentifier implements IASN1PreparedElement {
            @ASN1ObjectIdentifier( name = "" )
    
        @ASN1Element ( name = "object", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private ObjectIdentifier object = null;
                
  
        @ASN1Element ( name = "h221NonStandard", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private H221NonStandard h221NonStandard = null;
                
  
        
        public ObjectIdentifier getObject () {
            return this.object;
        }

        public boolean isObjectSelected () {
            return this.object != null;
        }

        private void setObject (ObjectIdentifier value) {
            this.object = value;
        }

        
        public void selectObject (ObjectIdentifier value) {
            this.object = value;
            
                    setH221NonStandard(null);
                            
        }

        
  
        
        public H221NonStandard getH221NonStandard () {
            return this.h221NonStandard;
        }

        public boolean isH221NonStandardSelected () {
            return this.h221NonStandard != null;
        }

        private void setH221NonStandard (H221NonStandard value) {
            this.h221NonStandard = value;
        }

        
        public void selectH221NonStandard (H221NonStandard value) {
            this.h221NonStandard = value;
            
                    setObject(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(NonStandardIdentifier.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            