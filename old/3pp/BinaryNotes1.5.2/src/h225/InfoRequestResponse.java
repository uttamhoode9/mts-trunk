
package h225;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "InfoRequestResponse", isSet = false )
    public class InfoRequestResponse implements IASN1PreparedElement {
            
        @ASN1Element ( name = "nonStandardData", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private NonStandardParameter nonStandardData = null;
                
  
        @ASN1Element ( name = "requestSeqNum", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private RequestSeqNum requestSeqNum = null;
                
  
        @ASN1Element ( name = "endpointType", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private EndpointType endpointType = null;
                
  
        @ASN1Element ( name = "endpointIdentifier", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private EndpointIdentifier endpointIdentifier = null;
                
  
        @ASN1Element ( name = "rasAddress", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private TransportAddress rasAddress = null;
                
  
@ASN1SequenceOf( name = "callSignalAddress", isSetOf = false ) 

    
        @ASN1Element ( name = "callSignalAddress", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private java.util.Collection<TransportAddress>  callSignalAddress = null;
                
  
@ASN1SequenceOf( name = "endpointAlias", isSetOf = false ) 

    
        @ASN1Element ( name = "endpointAlias", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private java.util.Collection<AliasAddress>  endpointAlias = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "perCallInfo" , isSet = false )
       public static class PerCallInfoSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "nonStandardData", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private NonStandardParameter nonStandardData = null;
                
  
        @ASN1Element ( name = "callReferenceValue", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private CallReferenceValue callReferenceValue = null;
                
  
        @ASN1Element ( name = "conferenceID", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private ConferenceIdentifier conferenceID = null;
                
  @ASN1Boolean( name = "" )
    
        @ASN1Element ( name = "originator", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private Boolean originator = null;
                
  
@ASN1SequenceOf( name = "audio", isSetOf = false ) 

    
        @ASN1Element ( name = "audio", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private java.util.Collection<RTPSession>  audio = null;
                
  
@ASN1SequenceOf( name = "video", isSetOf = false ) 

    
        @ASN1Element ( name = "video", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private java.util.Collection<RTPSession>  video = null;
                
  
@ASN1SequenceOf( name = "data", isSetOf = false ) 

    
        @ASN1Element ( name = "data", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private java.util.Collection<TransportChannelInfo>  data = null;
                
  
        @ASN1Element ( name = "h245", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private TransportChannelInfo h245 = null;
                
  
        @ASN1Element ( name = "callSignaling", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private TransportChannelInfo callSignaling = null;
                
  
        @ASN1Element ( name = "callType", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private CallType callType = null;
                
  
        @ASN1Element ( name = "bandWidth", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private BandWidth bandWidth = null;
                
  
        @ASN1Element ( name = "callModel", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private CallModel callModel = null;
                
  
        
        public NonStandardParameter getNonStandardData () {
            return this.nonStandardData;
        }

        
        public boolean isNonStandardDataPresent () {
            return this.nonStandardData != null;
        }
        

        public void setNonStandardData (NonStandardParameter value) {
            this.nonStandardData = value;
        }
        
  
        
        public CallReferenceValue getCallReferenceValue () {
            return this.callReferenceValue;
        }

        

        public void setCallReferenceValue (CallReferenceValue value) {
            this.callReferenceValue = value;
        }
        
  
        
        public ConferenceIdentifier getConferenceID () {
            return this.conferenceID;
        }

        

        public void setConferenceID (ConferenceIdentifier value) {
            this.conferenceID = value;
        }
        
  
        
        public Boolean getOriginator () {
            return this.originator;
        }

        
        public boolean isOriginatorPresent () {
            return this.originator != null;
        }
        

        public void setOriginator (Boolean value) {
            this.originator = value;
        }
        
  
        
        public java.util.Collection<RTPSession>  getAudio () {
            return this.audio;
        }

        
        public boolean isAudioPresent () {
            return this.audio != null;
        }
        

        public void setAudio (java.util.Collection<RTPSession>  value) {
            this.audio = value;
        }
        
  
        
        public java.util.Collection<RTPSession>  getVideo () {
            return this.video;
        }

        
        public boolean isVideoPresent () {
            return this.video != null;
        }
        

        public void setVideo (java.util.Collection<RTPSession>  value) {
            this.video = value;
        }
        
  
        
        public java.util.Collection<TransportChannelInfo>  getData () {
            return this.data;
        }

        
        public boolean isDataPresent () {
            return this.data != null;
        }
        

        public void setData (java.util.Collection<TransportChannelInfo>  value) {
            this.data = value;
        }
        
  
        
        public TransportChannelInfo getH245 () {
            return this.h245;
        }

        

        public void setH245 (TransportChannelInfo value) {
            this.h245 = value;
        }
        
  
        
        public TransportChannelInfo getCallSignaling () {
            return this.callSignaling;
        }

        

        public void setCallSignaling (TransportChannelInfo value) {
            this.callSignaling = value;
        }
        
  
        
        public CallType getCallType () {
            return this.callType;
        }

        

        public void setCallType (CallType value) {
            this.callType = value;
        }
        
  
        
        public BandWidth getBandWidth () {
            return this.bandWidth;
        }

        

        public void setBandWidth (BandWidth value) {
            this.bandWidth = value;
        }
        
  
        
        public CallModel getCallModel () {
            return this.callModel;
        }

        

        public void setCallModel (CallModel value) {
            this.callModel = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_PerCallInfoSequenceType;
        }

       private static IASN1PreparedElementData preparedData_PerCallInfoSequenceType = CoderFactory.getInstance().newPreparedElementData(PerCallInfoSequenceType.class);
                
       }

       
                
@ASN1SequenceOf( name = "perCallInfo", isSetOf = false ) 

    
        @ASN1Element ( name = "perCallInfo", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private java.util.Collection<PerCallInfoSequenceType>  perCallInfo = null;
                
  
        
        public NonStandardParameter getNonStandardData () {
            return this.nonStandardData;
        }

        
        public boolean isNonStandardDataPresent () {
            return this.nonStandardData != null;
        }
        

        public void setNonStandardData (NonStandardParameter value) {
            this.nonStandardData = value;
        }
        
  
        
        public RequestSeqNum getRequestSeqNum () {
            return this.requestSeqNum;
        }

        

        public void setRequestSeqNum (RequestSeqNum value) {
            this.requestSeqNum = value;
        }
        
  
        
        public EndpointType getEndpointType () {
            return this.endpointType;
        }

        

        public void setEndpointType (EndpointType value) {
            this.endpointType = value;
        }
        
  
        
        public EndpointIdentifier getEndpointIdentifier () {
            return this.endpointIdentifier;
        }

        

        public void setEndpointIdentifier (EndpointIdentifier value) {
            this.endpointIdentifier = value;
        }
        
  
        
        public TransportAddress getRasAddress () {
            return this.rasAddress;
        }

        

        public void setRasAddress (TransportAddress value) {
            this.rasAddress = value;
        }
        
  
        
        public java.util.Collection<TransportAddress>  getCallSignalAddress () {
            return this.callSignalAddress;
        }

        

        public void setCallSignalAddress (java.util.Collection<TransportAddress>  value) {
            this.callSignalAddress = value;
        }
        
  
        
        public java.util.Collection<AliasAddress>  getEndpointAlias () {
            return this.endpointAlias;
        }

        
        public boolean isEndpointAliasPresent () {
            return this.endpointAlias != null;
        }
        

        public void setEndpointAlias (java.util.Collection<AliasAddress>  value) {
            this.endpointAlias = value;
        }
        
  
        
        public java.util.Collection<PerCallInfoSequenceType>  getPerCallInfo () {
            return this.perCallInfo;
        }

        
        public boolean isPerCallInfoPresent () {
            return this.perCallInfo != null;
        }
        

        public void setPerCallInfo (java.util.Collection<PerCallInfoSequenceType>  value) {
            this.perCallInfo = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(InfoRequestResponse.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            